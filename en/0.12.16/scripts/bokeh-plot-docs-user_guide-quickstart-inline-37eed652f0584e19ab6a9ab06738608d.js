(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("45020431-9aa3-4b46-ada4-46596f271d1a");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '45020431-9aa3-4b46-ada4-46596f271d1a' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.16.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.16.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.16.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.16.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "DrawTool": require("custom/bk_script_4fe1a953f37e440bafdcb3330a4881eb.draw_tool").DrawTool,
          "MyFormatter": require("custom/bk_script_536909578ebd4dd59dc108ec1a737cb4.my_formatter").MyFormatter,
          "Custom": require("custom/bk_script_70142c597e884531a4514c3c604a86cc.custom").Custom,
          "Surface3d": require("custom/bk_script_9331c4d2a2fa432ba11140b0ec446e88.surface3d").Surface3d,
          "LatexLabel": require("custom/bk_script_da3193bc49874d5cb629b293ffd9b45e.latex_label").LatexLabel,
          "IonRangeSlider": require("custom/bk_script_dcecbfa28a734a4dba3108d34a44fd8d.ion_range_slider").IonRangeSlider
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_4fe1a953f37e440bafdcb3330a4881eb.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (sx = e.sx, sy = e.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
    
          },
          "custom/bk_script_536909578ebd4dd59dc108ec1a737cb4.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
    
          },
          "custom/bk_script_70142c597e884531a4514c3c604a86cc.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
    
          },
          "custom/bk_script_9331c4d2a2fa432ba11140b0ec446e88.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model.
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // BokehJS Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set a listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript BokehJS model subclass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
    
          },
          "custom/bk_script_da3193bc49874d5cb629b293ffd9b45e.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
    
          },
          "custom/bk_script_dcecbfa28a734a4dba3108d34a44fd8d.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, inp, max, min, opts, range, slider, step, to;
                  // BokehJS Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  inp = this.$el.find('.slider')[0];
                  slider = jQuery(inp).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
    
          }
          }, "custom/main");
          ;
          });
    
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"41aaba37-e6bc-419b-82de-38ad77950c30":{"roots":{"references":[{"attributes":{},"id":"21fbd510-869e-434a-b642-e26a3ba5e04c","type":"BasicTicker"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"2c99c561-8bb2-4e96-9300-0faaf814f415","type":"CrosshairTool"},{"id":"5d7386f9-a505-4f62-8d6e-54e1cd2a53a0","type":"PanTool"},{"id":"95ebe5d3-ce35-4f11-9507-6a6b47c48e98","type":"WheelZoomTool"},{"id":"1675d657-41a2-4359-af0d-2f5cb0f750f5","type":"BoxZoomTool"},{"id":"5dae7979-c72d-4955-8362-319bab714d07","type":"ResetTool"},{"id":"0b705293-e9ec-4337-9e18-43ed2e3802f8","type":"BoxSelectTool"},{"id":"af8d9fe9-2aea-47a1-9255-35a401de1947","type":"LassoSelectTool"}]},"id":"63fbc71a-904a-4136-8231-3f3fd52ae4d6","type":"Toolbar"},{"attributes":{"formatter":{"id":"bfcfc262-373b-446b-9d12-1bfa19a46c2e","type":"BasicTickFormatter"},"plot":{"id":"48ea98fd-b376-447a-b0b1-e0bf73347cba","subtype":"Figure","type":"Plot"},"ticker":{"id":"c64174f8-f7e3-47d8-8f66-f115d5a38fc7","type":"BasicTicker"}},"id":"6df43792-7dd0-4128-a3e9-96652da5461c","type":"LinearAxis"},{"attributes":{},"id":"c1f66cd3-f871-4947-81f4-ec2969088a45","type":"BasicTickFormatter"},{"attributes":{},"id":"c64174f8-f7e3-47d8-8f66-f115d5a38fc7","type":"BasicTicker"},{"attributes":{"dimension":1,"plot":{"id":"48ea98fd-b376-447a-b0b1-e0bf73347cba","subtype":"Figure","type":"Plot"},"ticker":{"id":"c64174f8-f7e3-47d8-8f66-f115d5a38fc7","type":"BasicTicker"}},"id":"db025beb-ab24-44de-9163-02ce3d21831c","type":"Grid"},{"attributes":{"source":{"id":"0f56f1f0-0ed1-4221-bb51-d4ddb86087e8","type":"ColumnDataSource"}},"id":"efb13aa8-83bd-4c54-8ffe-fc6d9bc8ea94","type":"CDSView"},{"attributes":{},"id":"880d8493-88c0-49bc-b2dd-9a927896b9fb","type":"Selection"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"0f2d652b-637b-48ef-b752-87f4f4dbfe3a","type":"Circle"},{"attributes":{},"id":"bfcfc262-373b-446b-9d12-1bfa19a46c2e","type":"BasicTickFormatter"},{"attributes":{},"id":"2c99c561-8bb2-4e96-9300-0faaf814f415","type":"CrosshairTool"},{"attributes":{},"id":"1264df19-65f7-4a35-ba75-8eb564aa9d4a","type":"UnionRenderers"},{"attributes":{"data_source":{"id":"0f56f1f0-0ed1-4221-bb51-d4ddb86087e8","type":"ColumnDataSource"},"glyph":{"id":"86c6b8bb-f976-4ad1-b9dc-63a767f5de7d","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"0f2d652b-637b-48ef-b752-87f4f4dbfe3a","type":"Circle"},"selection_glyph":null,"view":{"id":"efb13aa8-83bd-4c54-8ffe-fc6d9bc8ea94","type":"CDSView"}},"id":"47d47e96-e22d-4f4e-b8d4-0b8d00657131","type":"GlyphRenderer"},{"attributes":{},"id":"5d7386f9-a505-4f62-8d6e-54e1cd2a53a0","type":"PanTool"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"86c6b8bb-f976-4ad1-b9dc-63a767f5de7d","type":"Circle"},{"attributes":{},"id":"95ebe5d3-ce35-4f11-9507-6a6b47c48e98","type":"WheelZoomTool"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"9a75e20f-c26d-4016-b81a-4d9ebbac0a0f","type":"BoxAnnotation"},{"attributes":{"overlay":{"id":"06b2aa4e-da71-4c92-9219-40cd3481ea8e","type":"BoxAnnotation"}},"id":"1675d657-41a2-4359-af0d-2f5cb0f750f5","type":"BoxZoomTool"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"xs_units":"screen","ys_units":"screen"},"id":"caf117f5-648f-49d2-973c-683339cde1c3","type":"PolyAnnotation"},{"attributes":{},"id":"5dae7979-c72d-4955-8362-319bab714d07","type":"ResetTool"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"06b2aa4e-da71-4c92-9219-40cd3481ea8e","type":"BoxAnnotation"},{"attributes":{"callback":null,"overlay":{"id":"caf117f5-648f-49d2-973c-683339cde1c3","type":"PolyAnnotation"}},"id":"af8d9fe9-2aea-47a1-9255-35a401de1947","type":"LassoSelectTool"},{"attributes":{"plot":null,"text":""},"id":"376d2c10-3abb-40d8-ad57-b6cca5512f9a","type":"Title"},{"attributes":{"callback":null,"overlay":{"id":"9a75e20f-c26d-4016-b81a-4d9ebbac0a0f","type":"BoxAnnotation"}},"id":"0b705293-e9ec-4337-9e18-43ed2e3802f8","type":"BoxSelectTool"},{"attributes":{"callback":null,"data":{"fill_color":["#ef9796","#e06596","#c17e96","#a5ae96","#dbb496","#344f96","#928b96","#cd7e96","#375496","#e25d96","#7f3696","#4cdf96","#32cc96","#824796","#de7496","#e85796","#cf7d96","#cee296","#d25e96","#f05196","#cb5496","#874396","#ac7a96","#9c2a96","#442596","#ae2c96","#d6cb96","#368d96","#f09c96","#e3d896","#aa3a96","#886496","#4dba96","#4ab396","#5cc596","#686696","#68b796","#889996","#4f8f96","#e85f96","#d8cb96","#d3c996","#a37a96","#b9c096","#4c8996","#dfad96","#3a3c96","#384096","#cd9c96","#488296","#4f7496","#728496","#48a396","#9f4d96","#40e096","#f08c96","#462a96","#3f3e96","#5b8796","#54db96","#b82596","#7ea696","#534796","#83e196","#bd6796","#a09f96","#507296","#8dc696","#649996","#9e3096","#db2396","#7cba96","#9dde96","#87c996","#a35896","#529496","#599c96","#485496","#f93396","#b3ce96","#388c96","#b67796","#8fbd96","#a0b296","#f76e96","#415196","#f8af96","#bdda96","#cf4396","#807596","#c37896","#c4c596","#a63896","#c98796","#a7b896","#bf3c96","#79e096","#da6096","#4ab696","#d7da96","#e53596","#777c96","#4baf96","#652496","#c49296","#d0af96","#3cce96","#324196","#492196","#5ebf96","#cc5396","#43ce96","#503f96","#b88696","#4ebc96","#363096","#f4d196","#e2c296","#ee6096","#b39d96","#408a96","#8dd696","#405696","#de6f96","#b5c696","#8fdd96","#a72c96","#91c696","#cde296","#529596","#643d96","#a0b296","#4ece96","#394196","#f35996","#4d8d96","#bfbf96","#a63f96","#958696","#878596","#8e7196","#423896","#636096","#c62996","#e34896","#7dd396","#6d2096","#81dc96","#6f5096","#8ebb96","#5ba996","#7bc496","#9cc296","#8e3896","#dd7596","#3f6196","#973896","#32bd96","#363696","#9b3496","#8d3c96","#b4cf96","#a49896","#76bf96","#9caf96","#332996","#35b896","#c8b996","#764296","#984296","#8a5a96","#abd896","#ad2196","#389e96","#90c696","#9d7396","#b2ac96","#3d4d96","#969196","#f64596","#d18196","#7ab896","#7c7696","#325e96","#6cdd96","#b7db96","#8b5e96","#ce4896","#c8d296","#b53a96","#9e1f96","#6d5d96","#798396","#982c96","#e58196","#f33d96","#d0c596","#96d696","#352696","#325e96","#f3c096","#ddc096","#642996","#688b96","#9f4196","#f66996","#d4ab96","#a42b96","#413e96","#8ce196","#73bd96","#46df96","#899296","#cdd696","#338a96","#bde496","#bfc696","#743c96","#e57b96","#4d3796","#6c6296","#461e96","#735996","#7e2496","#9c8296","#e55496","#c75a96","#ec4f96","#96b196","#5f9196","#533096","#507d96","#893c96","#d28896","#332f96","#535b96","#c35996","#a4cd96","#b23196","#563096","#362a96","#abd896","#872e96","#9b7096","#d93996","#8d8596","#568e96","#a49e96","#f78896","#708696","#45a896","#956c96","#eabc96","#749196","#a63496","#d18a96","#62ae96","#93b196","#429c96","#409996","#78bc96","#553e96","#e8c796","#7e8896","#385496","#b14396","#588996","#71df96","#3f4e96","#a53f96","#355896","#be6096","#35b396","#c92996","#602996","#bbd696","#73d296","#326496","#953296","#867f96","#8e6996","#3c9b96","#a79c96","#b07896","#d85f96","#c42b96","#e9bb96","#5e3296","#a3b496","#aa8e96","#c22c96","#ef6e96","#709d96","#d16696","#a08296","#c57a96","#762496","#502796","#429296","#e12f96","#682d96","#9f6b96","#749196","#382296","#dfcc96","#d4d996","#d19196","#c5a196","#c9bc96","#eabf96","#4d3d96","#4f9196","#7a7296","#ae3a96","#894796","#46a496","#c4a896","#bdb796","#d82e96","#e76596","#3e2c96","#4c3696","#5ed196","#bb8796","#f7d696","#c6ac96","#827996","#71d396","#42de96","#ac4d96","#a22596","#f46b96","#d96996","#d4ad96","#c5b196","#6ab296","#902b96","#6b7296","#ae8396","#769a96","#438696","#b89f96","#5c3a96","#6fdd96","#762296","#792296","#ab8d96","#c42896","#419e96","#a84696","#644a96","#89d096","#bb6996","#ed3f96","#382596","#f42796","#377396","#78a896","#bb2f96","#558b96","#884796","#f22a96","#68d396","#886196","#cfda96","#994496","#4a7d96","#a3cd96","#97b896","#386096","#987596","#f57d96","#a5bc96","#d7d796","#b4b696","#a49a96","#33af96","#4f4d96","#8abc96","#7d6596","#5b8396","#6ed596","#436c96","#deb196","#422a96","#6d6c96","#4aa596","#799696","#81e296","#528896","#8a1f96","#e3bb96","#da6996","#899696","#9e7c96","#373a96","#bbb496","#b9a596","#6d5496","#ed2696","#896d96","#d05396","#d4bb96","#f78b96","#57d296","#782096","#ea5e96","#4e8e96","#9b7796","#dea296","#8eb796","#d6dc96","#987896","#a06596","#b55f96","#a14496","#608a96","#8c5896","#425c96","#b56a96","#7d7996","#9d9796","#bd3b96","#b69596","#8a9696","#8ba596","#ba6996","#a14c96","#7c9a96","#827196","#757d96","#c04696","#329696","#7b3296","#bd8696","#a5c796","#5b3f96","#89a296","#a23796","#c98796","#9fd496","#ae9c96","#ec2b96","#e9bf96","#604f96","#cb5096","#488c96","#bd2b96","#ebd496","#b1b896","#552396","#f8dc96","#f8e396","#703a96","#3d8396","#e1a196","#5c9596","#5d5296","#61d796","#6ac096","#b63c96","#976296","#be6d96","#c37d96","#3ab696","#4a6896","#929596","#8fb496","#64e096","#695396","#d26896","#bbc896","#bc4c96","#526c96","#35c596","#886196","#db6296","#c09b96","#a84a96","#635196","#3f7496","#b22396","#863396","#812796","#735596","#483796","#3fc496","#3adb96","#507196","#f63796","#b9a596","#ad8496","#af7996","#a95996","#c95996","#ea2e96","#cac096","#b19596","#bc4896","#43c396","#8d5196","#c93f96","#73ba96","#6b9096","#d0c296","#67ca96","#665f96","#4ebb96","#d5e396","#88a896","#f9c296","#a52996","#e15096","#d7c396","#e48196","#da5e96","#e5af96","#b64496","#781e96","#cddb96","#a47e96","#3a3496","#d46696","#994d96","#d0a296","#b94f96","#692996","#4ccc96","#847196","#86cb96","#ce3e96","#dec296","#32ae96","#a64696","#de9c96","#ce4696","#c31f96","#4d5896","#8a4196","#47d496","#a27896","#cb5c96","#b6d396","#e1a096","#cf7596","#582596","#bd3196","#6c8596","#866f96","#b8a696","#34c396","#3b9596","#5adf96","#d9bf96","#9e5f96","#bb6596","#548c96","#d6bf96","#9c8e96","#70a296","#59a396","#3d8296","#84b096","#ec9296","#6b6096","#955196","#ed8b96","#8f5896","#af5396","#4dc596","#f66296","#34ad96","#cb9a96","#cf7a96","#f79a96","#de5196","#de7c96","#e5cf96","#ce5c96","#e16796","#dd9096","#50d596","#a63d96","#ee2196","#f27996","#7d5496","#6bcf96","#345796","#4d3f96","#5f8496","#48d096","#535e96","#d1ba96","#bccf96","#6bb496","#bc9e96","#73dc96","#366b96","#408396","#80c396","#f62f96","#704396","#446896","#806996","#9f9d96","#6cd996","#42da96","#6e9196","#5c6796","#c4a596","#6dd196","#765796","#a4c796","#555196","#355e96","#f44e96","#baa796","#adac96","#d0bc96","#c5c196","#e59c96","#544396","#844696","#eb2496","#3b9b96","#9e7496","#7da196","#f75b96","#6f8896","#3f5996","#8e4596","#cd2796","#be8e96","#6f2d96","#92aa96","#5f5396","#81aa96","#408c96","#3caf96","#991e96","#c09196","#605f96","#8a7f96","#c96a96","#c94296","#cea096","#737596","#61a696","#e46c96","#724596","#59b496","#d6e396","#e64596","#428d96","#664a96","#ec9896","#89a296","#8b9d96","#9f7796","#68d696","#96d696","#855896","#6bd196","#e2b996","#93e396","#d2a196","#abd196","#845f96","#ac2f96","#909996","#ae8d96","#53ac96","#a2a596","#f09c96","#a3a796","#556f96","#582996","#e8e196","#6cd596","#eadd96","#3b8d96","#d2be96","#737796","#778496","#ecda96","#9b7796","#744396","#a95896","#40a196","#518696","#f02f96","#73c796","#a42296","#83bf96","#6a5296","#552596","#a82e96","#919d96","#739196","#9b3796","#4b6796","#ea5e96","#cbd196","#bd4796","#ee9896","#654396","#836896","#8d9996","#907b96","#a45296","#b15496","#d92496","#895796","#e2d296","#af1e96","#a4d196","#beb996","#91dd96","#ad7196","#475296","#467196","#475e96","#c66996","#e2d296","#52a996","#767d96","#6f9096","#ac3f96","#da6c96","#b4bd96","#9aaa96","#ec7896","#6b9696","#ddd896","#5a1f96","#afae96","#c58396","#3db296","#591f96","#ec5596","#533896","#aa5196","#52d296","#828596","#ac7696","#d13996","#b47f96","#c39896","#833796","#cb8196","#cbc296","#c02d96","#703b96","#78b796","#c93996","#d6a196","#4caf96","#368596","#c26696","#c9ad96","#f07696","#ec3396","#c58d96","#f52a96","#4a6796","#354e96","#e65596","#eecb96","#962796","#bbd296","#3ca296","#975b96","#5b5496","#bc8c96","#b8c596","#878f96","#858396","#958496","#a95896","#b2ac96","#7f2e96","#9cc496","#475f96","#509296","#e84596","#d37596","#d09f96","#427796","#6db996","#775f96","#f56696","#789a96","#3f2796","#cde196","#8e7596","#c96c96","#a87496","#609596","#7fa696","#a35c96","#a6e096","#446896","#e6a896","#7b9c96","#d46696","#a67e96","#64a696","#a15c96","#bfa196","#f97596","#62a096","#b4d096","#86dc96","#71ad96","#c0d196","#e0ad96","#5b9c96","#96aa96","#b8d096","#3cda96","#97b796","#d3b196","#e85696","#a0a596","#652e96","#dee296","#b8cc96","#b69896","#a44896","#f5cd96","#85db96","#8c6996","#f96596","#75c196","#cbbb96","#f0b596","#b57696","#93b296","#ac4196","#4e9796","#d59096","#3abc96","#ab9096","#873b96","#7c7596","#692696","#d6b696","#ac2096","#516896","#867196","#65ca96","#c6e196","#f67796","#f14c96","#f2d196","#493796","#96d296","#bf6396","#6d7096","#f79696","#985196","#458896","#f32d96","#927896","#6de496","#5b2b96","#f92a96","#619b96","#7a4d96","#862396","#c21e96","#b67796","#caa196","#706396","#3d8496","#734f96","#5bc496","#6d2796","#8f2496","#a0ce96","#d4b296","#a46196","#428d96","#77ba96","#b6ae96","#5b8296","#f55f96","#6cc496","#774d96","#b64496","#a94596","#4add96","#3a8296","#35d996","#d97f96","#f9c696","#c7a296","#cecc96","#5bcf96","#4fa196","#62dd96","#aeaf96","#6c6396","#a3d296","#769196","#aac596","#7d5296","#b52c96","#3eda96","#9f7696","#8ab796","#603b96","#b45a96","#ac4496","#9a9596","#362596","#c22796","#a77a96","#893196","#469296","#742096","#51cb96","#867096","#cab996","#dd3096","#6d8796","#9b5096","#5a6396","#dcaf96","#c28896","#c23a96","#bb3e96","#becd96","#d15796","#63b396","#4a4396","#3b6196","#8b6596","#8d6496","#c54096","#b9e396","#8cc296","#d07996","#604796","#d7ce96","#d8dd96","#b8cb96","#696896","#8a4696","#40a596","#736596","#436096","#4f6e96","#c53a96","#ba4396","#e8ab96","#687296","#e33b96","#f54396","#426296","#7eb396","#3d7b96","#9a3e96","#392196","#855996","#60e596","#933396","#8d7596","#f5b796","#85da96","#7f4896","#9c4496","#3b6696","#f77496","#982a96","#a9a296","#7dc496","#d63e96","#e16e96","#b86b96","#f65496","#5aab96","#cc5296","#4bd296","#869096","#b95d96","#907e96","#595596","#94af96","#cd4096","#dd6296","#5cdc96","#687b96","#468d96","#87d696","#4fad96","#7ea396","#da5096","#8db496","#587996","#cbba96","#dfb196","#6d7996","#649b96","#d85396","#9a5b96","#ef8a96","#b7b496","#ab4196","#4b9f96","#de7e96","#c05296","#422096","#4fa496","#43b796","#419796","#65cc96","#973996","#763896","#c62c96","#dae096","#816496","#3f9796","#e94d96","#b09a96","#3d3f96","#b1de96","#32d396","#bc2c96","#dc2296","#f19596","#3ea996","#c2c896","#f84e96","#e75296","#5d1e96","#849e96","#394d96","#6dd096","#9b2996","#326996","#b8d896","#cb1e96","#9dbb96","#519b96","#576796","#606596","#427c96","#645396","#99c596","#81b996","#b5d196","#b29496","#ec2096","#719196","#3ad896","#436f96","#477796","#345096","#c0c996","#865496","#4b2d96","#3c4696","#455396","#f88696","#ab2b96","#548f96","#893f96","#3a6496","#f42996","#3ad096","#c69a96","#b3de96","#3d4696","#d85096","#40b096","#9a5b96","#997496","#811f96","#c02296","#6e5896","#916096","#d7d296","#83d996","#ae2f96","#f86d96","#c7b196","#96a196","#706c96","#597e96","#4e2a96","#536c96","#35a596","#3f5596","#554c96","#f8d796","#f38896","#502296","#7aa796","#b66a96","#989096","#aa8996","#71cd96","#3bbb96","#e95796","#f8be96","#9daf96","#372a96","#50dd96","#ecc396","#f6bc96","#aea796","#4e4996","#f4c596","#4ea796","#af9696","#674896","#388a96","#58b996","#b2ac96","#ef2396","#6d6796","#5c2396","#b3a396","#bf8e96","#526f96","#9f8f96","#886b96","#5e7196","#7f6596","#6ed996","#4dc696","#3d9c96","#9bbe96","#e84396","#e7ae96","#a06496","#83af96","#c0a396","#c2d996","#80aa96","#4d8e96","#989896","#df7896","#3d5496","#f26096","#acc696","#8a7196","#c75496","#db1f96","#adaf96","#718e96","#668696","#9ddf96","#df6d96","#413d96","#422996","#e64496","#544596","#e2be96","#72ca96","#a19096","#c13996","#cc3496","#c63996","#3a3e96","#894996","#c42396","#b98b96","#e3a696","#8b4096","#8f7c96","#4dbe96","#58c096","#e72596","#42ba96","#6b6696","#f57c96","#5caf96","#48e296","#b78196","#9a7796","#a5dc96","#e39196","#75b196","#657396","#d13596","#446d96","#be2b96","#ddc296","#652a96","#bfa696","#af9b96","#8c7096","#50c596","#da7f96","#e4e196","#deac96","#3ccb96","#3ebf96","#8fd796","#505896","#bf9696","#4d2296","#539196","#977096","#992796","#532a96","#e63996","#af6796","#e17f96","#794a96","#40de96","#8a7c96","#f8bd96","#4ddf96","#a76d96","#bf5b96","#859796","#c4de96","#853396","#50d596","#7f4396","#414096","#516396","#f89796","#3bbe96","#4cd896","#e45a96","#632b96","#de4196","#d32296","#7d5596","#f37996","#4d2996","#782596","#736696","#3db196","#e36296","#4d9796","#d0d596","#85ae96","#a8e096","#f6d196","#ed6696","#5c4896","#424a96","#f62a96","#74d496","#e76396","#826796","#456696","#e1d396","#e53296","#4aa896","#f89896","#b1c896","#b1e396","#773196","#d25896","#a52496","#3cb196","#706096","#e82996","#9c2d96","#3f3d96","#763096","#a76196","#6ca396","#39bf96","#9cd296","#ae1e96","#708d96","#54c096","#938796","#eb3996","#b92c96","#d0d496","#56dc96","#9ae196","#ee9b96","#ac7896","#824896","#3aae96","#486696","#f7da96","#b99496","#89d196","#3db996","#d26396","#d62f96","#4dcb96","#a88a96","#606a96","#606796","#9d9896","#dd9196","#bd5596","#429596","#696196","#424a96","#59b096","#e52e96","#495d96","#492a96","#a38296","#f63696","#94dd96","#3aa996","#ce8e96","#c93996","#7e9296","#ccb996","#389e96","#ecac96","#37a996","#cf4596","#e12896","#44b296","#b18c96","#76ce96","#b05d96","#85ae96","#9e2096","#e24a96","#6a6b96","#baaa96","#b6a796","#de5d96","#d36396","#6cbe96","#374196","#597a96","#4f8696","#8aab96","#5d6696","#d85196","#499796","#7ec896","#6f3896","#e3df96","#ac9496","#cd3696","#b45096","#665596","#c83496","#683d96","#cde096","#7e8f96","#704496","#429b96","#e8a296","#5bca96","#392396","#bfa996","#c22d96","#e85296","#609f96","#701f96","#4c8a96","#9f6296","#a89696","#634c96","#dc5796","#ee6a96","#e05096","#60d796","#a04096","#f4bc96","#516d96","#b03996","#91b396","#6b7696","#669296","#b89f96","#7e9c96","#388b96","#786796","#7d4796","#4d9796","#da4b96","#636096","#e26296","#e08696","#3ed096","#5c9b96","#c78796","#357e96","#427b96","#612496","#bf3f96","#3f9696","#9ed696","#839396","#b92896","#354e96","#6e8d96","#37d096","#81d396","#3aa996","#4bb796","#363a96","#f45196","#67c596","#d15d96","#77a296","#62c696","#ae2096","#c4d996","#786a96","#c05896","#683b96","#35aa96","#dfaa96","#859c96","#842696","#d6d296","#d0a796","#b0a296","#aa9196","#325e96","#697b96","#df4896","#4dbc96","#bc2d96","#e37396","#b2d096","#3de296","#f22996","#3d8d96","#cfe596","#84bf96","#bdbc96","#4b6d96","#a3ad96","#598996","#da5296","#d7c896","#47d596","#c35c96","#63d796","#ad2396","#44d796","#7bd496","#638b96","#cc4296","#7e2296","#783f96","#91db96","#35ab96","#378a96","#5d7b96","#7cb696","#5a7496","#a0b696","#42db96","#35de96","#685396","#cdd096","#eb5e96","#6e2396","#675c96","#9c7f96","#64ce96","#ccc596","#f7d096","#db4496","#926b96","#7e4496","#743f96","#71c496","#5b4396","#375296","#ae2296","#a2c796","#c04d96","#a03196","#48e396","#52c796","#f6b196","#6ab496","#a3a996","#38ba96","#95a196","#dd4c96","#4fa996","#aa8f96","#f9c496","#524796","#70ca96","#d25996","#735696","#92a096","#e06596","#4b9696","#e2ad96","#567b96","#d0d396","#94d096","#abb596","#6bd796","#3fa296","#41a696","#adb296","#324e96","#708996","#e9a396","#c76996","#c92d96","#ba4996","#a75e96","#815296","#b1e096","#926596","#ee7c96","#3bbd96","#ec7a96","#f6bf96","#e45a96","#8e5a96","#8ee296","#4f4c96","#9a8f96","#4b2c96","#90a496","#6cae96","#b47c96","#f76496","#36d496","#b5d096","#8d7196","#a83e96","#504c96","#615496","#b6cd96","#6b3096","#44ca96","#f0bb96","#32a096","#c0d796","#e59296","#f57296","#436a96","#efdf96","#a9b896","#e55596","#9f9296","#582b96","#752196","#537196","#3b3296","#6fde96","#aa3596","#e79c96","#424996","#993296","#f12596","#9ca696","#7b6d96","#e92a96","#4ec096","#4edc96","#ad7b96","#ba6b96","#cb7596","#aee096","#465296","#6d9e96","#417a96","#cb6396","#4d3f96","#cea996","#6f3096","#3fa296","#4cdd96","#3d8496","#58da96","#4d6b96","#f03e96","#8f6f96","#333296","#e35e96","#b53596","#d2be96","#df6096","#7d4a96","#dc8796","#567b96","#a8c996","#594696","#4a7c96","#e45096","#846f96","#ab8296","#4dd796","#e13d96","#ee7f96","#c33f96","#48d296","#42a296","#ec5396","#aae096","#38d796","#674396","#987396","#58ac96","#365296","#4da996","#c72296","#587d96","#ea5f96","#824896","#caa196","#b49396","#bb7d96","#cc7396","#d72096","#9e7a96","#377896","#606296","#348796","#80c496","#e44296","#455c96","#372d96","#a85b96","#44a296","#e03296","#b42b96","#71b196","#767d96","#e19796","#e1b496","#b22096","#f82b96","#4d2496","#82a296","#f6b496","#c63c96","#df9f96","#3c6096","#694896","#653a96","#ba7096","#975796","#d75f96","#dd2596","#9ce396","#a99d96","#d84c96","#897a96","#62ae96","#f56d96","#512c96","#cdd996","#d6bf96","#b66e96","#eba296","#33e496","#344996","#f06a96","#458e96","#dd7296","#b37196","#e75d96","#b19596","#8c3b96","#c92596","#59b296","#c15596","#722296","#6a3696","#e5ce96","#64b196","#326496","#af3096","#81ac96","#ce4696","#a96296","#e78296","#3b9a96","#a73f96","#368996","#f23096","#327b96","#e44f96","#903c96","#545e96","#515296","#4a7896","#599a96","#4e8696","#ca3096","#929896","#cb5396","#c78096","#72da96","#964496","#cc4996","#728d96","#af3396","#dcad96","#768c96","#7db896","#bbb996","#f69296","#ecbb96","#992b96","#b4cd96","#e02896","#553b96","#724096","#ddc396","#718e96","#a82996","#775296","#4c6396","#e74396","#f6b196","#f56096","#9ee196","#5f5096","#bc1f96","#629f96","#955196","#952896","#aca396","#55da96","#84e496","#342196","#b98a96","#eabe96","#8c6396","#409796","#d56396","#f99a96","#7ad696","#b9a896","#58bf96","#5b2796","#335696","#683296","#e2df96","#838196","#e75396","#723b96","#933196","#d1a596","#ea3096","#bb7996","#a0d996","#96a196","#e27f96","#c78b96","#a35396","#f64196","#dfcf96","#abb696","#a44d96","#9a6396","#6cbe96","#509396","#a44a96","#ef9f96","#5d9096","#d6d596","#eb9a96","#664796","#534996","#5f2a96","#bf5896","#3f3996","#66d896","#9cc596","#bd9b96","#323596","#5e9b96","#f8d896","#9ecd96","#af3f96","#dcd496","#88b596","#eb2496","#46a496","#539e96","#c1ab96","#404396","#6ad396","#395f96","#c79396","#354496","#a44e96","#f7ac96","#ac4596","#733396","#6e3e96","#8e8396","#5cd996","#88b896","#a78196","#9b2c96","#b44f96","#4faf96","#995c96","#9a6e96","#498296","#688b96","#8ce496","#443196","#abd196","#422b96","#ae6496","#c7d696","#c73996","#a8d296","#b83296","#7a8896","#9fd296","#ea4296","#7ca196","#567b96","#71db96","#b4dd96","#5f9c96","#f07296","#3b4696","#f57596","#754996","#345c96","#881e96","#756796","#c92796","#c07396","#566796","#c26896","#59dd96","#f3c496","#aeb196","#8de496","#6e5496","#3a3e96","#f06096","#c44396","#d37596","#e42a96","#d08796","#986c96","#d03696","#489396","#9f2596","#6d2a96","#ba6496","#743796","#6a7396","#54bc96","#edde96","#b68496","#52bf96","#7dc096","#b3d696","#b36e96","#eb4996","#97a796","#677e96","#8b8696","#87ce96","#839c96","#945096","#f62e96","#ac9296","#c25f96","#952f96","#38ce96","#887896","#6eaf96","#f97c96","#bedb96","#f69796","#eb4596","#675996","#bd9f96","#80a296","#9fc996","#cac096","#8dd196","#4a2896","#9baf96","#36be96","#95e596","#4bc296","#609196","#b5cb96","#a2e396","#442b96","#97b996","#61b796","#4c6896","#532c96","#d14796","#34b096","#712296","#c9e596","#492596","#9f8796","#dd9196","#ef6d96","#c08496","#64b496","#c35396","#c74996","#432396","#797396","#5b5096","#486b96","#627696","#f16196","#ce9896","#9dc096","#cf9596","#8f9f96","#dc7396","#d48b96","#90b696","#ad3096","#818396","#e18b96","#49d696","#3f7696","#8e2c96","#cd5396","#bae496","#b82296","#5ba096","#52e196","#f58996","#57bb96","#6f4696","#f26396","#b72096","#cba496","#66cb96","#dc6a96","#c5b396","#eb6196","#615196","#7b9196","#40ca96","#365396","#9a5696","#b36196","#ee2a96","#3a6496","#607996","#9c6896","#b36496","#726796","#662796","#9aac96","#c7cc96","#68c896","#6ed296","#d64196","#ba2d96","#e55e96","#babb96","#db8f96","#b97096","#945596","#e8d196","#5aa296","#389896","#71a596","#af1f96","#5fc996","#9c8996","#a3ba96","#38e596","#92bd96","#357296","#ead596","#c8a396","#c3d296","#9d2896","#e25096","#f85096","#3b7596","#f9bd96","#55b496","#8ca596","#d03e96","#ba8196","#828c96","#687396","#b3c396","#dc2a96","#f08696","#a28c96","#9f2b96","#372196","#903696","#4f3696","#ada196","#cde596","#5ed896","#7f7c96","#9f6796","#6ce596","#cc8396","#9a4d96","#7b5e96","#d72b96","#347e96","#78c896","#391f96","#e2de96","#e35696","#478c96","#9c3296","#4a9b96","#ce5e96","#6b7196","#d5a196","#dc8e96","#348196","#947b96","#9b5c96","#996696","#e44a96","#bf8296","#6f6596","#569396","#352996","#6c6396","#3bc596","#47d596","#bc5896","#3c9396","#a4d596","#3a9b96","#e92a96","#87c996","#9c1e96","#634b96","#3e5396","#bb4b96","#bab396","#a88096","#b92696","#c24a96","#65d496","#8ce296","#7f2696","#4a9d96","#c92f96","#a5ad96","#d54a96","#665c96","#f99096","#ae3e96","#c38896","#8da196","#6c9896","#a22496","#b3b096","#8fcf96","#f65c96","#c39896","#e35e96","#b59b96","#74e596","#62d896","#d9c996","#393896","#3dbc96","#bd7b96","#f25696","#627296","#c9b596","#df6496","#72c796","#d78896","#508d96","#aa3e96","#a27096","#f19396","#aa8a96","#444996","#47a696","#92a896","#cab796","#554296","#868896","#746d96","#5e2c96","#a78896","#46e196","#87b196","#9b6e96","#335196","#6e2896","#bf5b96","#cead96","#e12d96","#8e4696","#a26196","#6fbb96","#b03496","#b3ad96","#5a3896","#958196","#8dd396","#882c96","#78c096","#c6ab96","#a75396","#63d896","#afaf96","#eac196","#b36296","#526296","#dad396","#5c8a96","#8b2c96","#674e96","#5f6f96","#cf2596","#bc1e96","#753596","#872296","#ecb696","#443a96","#653896","#6d2896","#5aa396","#3ebe96","#979896","#693196","#644e96","#613596","#365596","#cccc96","#a2b496","#8a6796","#af3196","#f34796","#616a96","#de3a96","#4bd596","#aecd96","#f88c96","#a74196","#d24496","#f3b096","#a9a396","#419a96","#5c9696","#bf6e96","#7dbb96","#c46e96","#f3d596","#73a196","#bbd596","#d17296","#eecc96","#cf9396","#a1c396","#77a696","#386296","#507496","#ef8096","#6f5096","#774e96","#c22396","#cc8196","#4c2496","#a5c696","#888796","#cfbb96","#36a196","#36c896","#6acb96","#753496","#a1dc96","#eb8b96","#b43896","#3b6496","#80a796","#533b96","#ef9d96","#957396","#a0c096","#ae3b96","#92e096","#e1e296","#6caa96","#ac6b96","#9bc896","#3c2596","#835096","#4f4896","#dd7296","#c4ba96","#8c5f96","#ed7996","#485296","#7c9b96","#bba296","#abd096","#8e9c96","#955296","#827396","#48e596","#d8b196","#476b96","#58b996","#6e3696","#4e7d96","#c4db96","#cfcb96","#644596","#55a296","#be2596","#79e496","#a78a96","#e1ba96","#d47996","#4d7296","#b37296","#9f8796","#c55d96","#e49396","#808d96","#377a96","#56ac96","#5e4d96","#acd296","#897a96","#9f9c96","#a6d096","#f39596","#e97396","#e4b196","#489396","#f4b396","#f18196","#913996","#428d96","#d8d296","#822096","#80de96","#8fa196","#8eb896","#765196","#4f9c96","#a06f96","#ae7796","#7b9c96","#97b896","#735296","#77bd96","#654d96","#f1b696","#6f2f96","#608896","#c18b96","#c44396","#864296","#414996","#e4d696","#806d96","#a2bd96","#9c2996","#d56396","#34d996","#357696","#5d4796","#e7af96","#7edf96","#7f9a96","#5a3496","#c89496","#9e4296","#d66096","#812396","#f3ba96","#bac296","#4c6796","#4fa796","#4b9e96","#825c96","#ed3c96","#cca496","#4cad96","#cfaf96","#e2aa96","#886a96","#dc8496","#647496","#7a5196","#738496","#476796","#f3aa96","#b83096","#d05296","#e76996","#ecb596","#babe96","#b6c296","#d57996","#858f96","#f42a96","#80de96","#4ab096","#70de96","#c94496","#b6c496","#692996","#b03396","#ea7a96","#71ac96","#c89296","#73b596","#abd096","#567d96","#45ba96","#8cd096","#662796","#65aa96","#7f4596","#e16496","#9fbb96","#7dda96","#447996","#b5cc96","#e3bf96","#c39f96","#78d796","#c28096","#ec2096","#db2796","#b13796","#42d196","#8da296","#5c5796","#7b6696","#6dc796","#5fac96","#f67596","#83ca96","#7b7e96","#6aab96","#d3c296","#564196","#924e96","#503e96","#c37296","#c27096","#b24796","#cb9a96","#cb9296","#763d96","#569f96","#744896","#3b9c96","#a46a96","#806796","#6f4296","#403096","#c82796","#35bf96","#f71f96","#553896","#9de096","#349496","#9a8e96","#722c96","#b18096","#7ae496","#75b896","#7bac96","#578796","#813596","#f27096","#32e096","#89c196","#909596","#3eb396","#a48e96","#4f5296","#677c96","#6ad496","#8dbf96","#3c2f96","#ab7496","#524796","#4c4796","#59d396","#8d5f96","#b87396","#5bdd96","#8b6d96","#508e96","#cf7996","#3b9796","#b95196","#468e96","#44dc96","#f44a96","#34dd96","#864e96","#b23696","#4a6296","#707596","#d8d396","#e3e296","#60a696","#7e4296","#ee7196","#74a796","#e0d096","#82e096","#a1d396","#6fbe96","#4f8d96","#f03596","#c9b296","#bc9796","#51c996","#5fb796","#f68d96","#6d8b96","#a18896","#ad7996","#665096","#d5c396","#c52796","#b2cb96","#c6bb96","#eb7896","#684f96","#40de96","#b0bf96","#7ec596","#963d96","#7f4c96","#5fad96","#642896","#7eb496","#b05096","#8bc696","#e1cf96","#944b96","#a54b96","#aa3596","#35e296","#ee6b96","#d4d796","#359696","#97cd96","#c49e96","#538696","#608996","#715596","#b35496","#a3a996","#beac96","#3de396","#829396","#a78a96","#ed7296","#8b6596","#383796","#eb4f96","#6fb096","#a5bc96","#35b796","#e6c196","#d07b96","#878196","#ed2d96","#c54e96","#93db96","#766d96","#de7f96","#85e596","#717d96","#9a5496","#be9996","#345c96","#3f9396","#cf8b96","#e6d296","#8e4e96","#5ba896","#6e4c96","#879196","#a38d96","#958396","#de9096","#71a796","#5b3b96","#f86396","#c92b96","#b4a496","#3eb896","#c1b096","#658796","#7cb696","#3c8496","#4e9196","#c52396","#4e2196","#b02596","#bea096","#724996","#a6aa96","#5d8b96","#cb8196","#7bbc96","#cd2496","#b79696","#649596","#e8cf96","#3ac296","#ae5f96","#899196","#59ab96","#e74796","#50df96","#e09696","#643796","#ab3b96","#f5ae96","#527a96","#957b96","#cf9996","#d8a196","#a33c96","#699496","#5ba596","#8e9496","#523996","#38b796","#63bb96","#4acf96","#6d4696","#b4ce96","#628c96","#db8e96","#9cb496","#b98496","#c1a396","#9dac96","#7ea696","#b8e396","#f2c796","#997496","#a3da96","#8f3096","#be9696","#57d496","#4b7796","#46af96","#e27a96","#785c96","#784c96","#321e96","#49e596","#dda896","#82c796","#50d896","#ba7096","#d65a96","#a08b96","#ebb696","#384796","#789496","#ed1e96","#f53a96","#b89d96","#eb3d96","#53ab96","#608896","#dcc896","#d0e296","#d3e596","#4e7f96","#5b3e96","#b52c96","#d94f96","#702096","#c63c96","#4e5f96","#f2cb96","#35a296","#79de96","#587896","#f15496","#6bd596","#33dd96","#7a5596","#4aba96","#4f5196","#f34e96","#e9da96","#5e8196","#74ca96","#a98796","#b06196","#f1d796","#ba2796","#33c096","#e66896","#e08f96","#ddd496","#5c2996","#a4d696","#715a96","#5d6996","#37db96","#69b196","#baae96","#5c9496","#729696","#60dd96","#c6c796","#633096","#8a3a96","#5d6d96","#47a296","#558e96","#56dc96","#5f5596","#844e96","#d88296","#d64396","#45d496","#ea2596","#e38496","#637596","#6db996","#677196","#778996","#d7bd96","#abd996","#f05796","#927996","#cfbb96","#7c6296","#9d3196","#945996","#e76896","#b79896","#b25d96","#c55696","#853f96","#7d8b96","#40a296","#9dd296","#523396","#65c996","#38db96","#dc4a96","#ab9196","#3a4796","#333296","#476896","#919e96","#42a196","#6f6296","#722a96","#c78596","#93bf96","#678696","#e13496","#445396","#845896","#a93d96","#bd7396","#6c9296","#d06196","#bb2e96","#617b96","#704c96","#626296","#a0c896","#7d9996","#553696","#646296","#dc3396","#44ab96","#7fe096","#7e9e96","#964c96","#d8bb96","#34af96","#63d396","#515e96","#868596","#a55996","#75c296","#b0ca96","#8c4b96","#b12196","#542196","#839496","#a3c796","#a69396","#468e96","#d58a96","#4fa696","#507796","#8f4296","#e3cd96","#3c7996","#42dd96","#c8d096","#c64496","#d8ab96","#ab8196","#a46496","#b5ae96","#c74396","#ce9896","#c17296","#5c2896","#45a996","#c73c96","#e97d96","#9dad96","#3c7696","#c69a96","#8d5996","#368996","#687a96","#763196","#e34a96","#9a7796","#5e5e96","#54de96","#47aa96","#722e96","#f0cf96","#6e6d96","#b55396","#878d96","#7b6496","#d27e96","#a27a96","#c6d396","#824296","#ee3096","#d39d96","#6ece96","#51c896","#624296","#9a6796","#e06c96","#508a96","#7b3b96","#e38f96","#556f96","#be7796","#c9b896","#617c96","#f87396","#5fc096","#8c2996","#38ad96","#a27a96","#cb9996","#6c4f96","#5e5996","#489396","#9f4c96","#407a96","#b9a896","#781e96","#8eae96","#f74596","#5f5996","#838e96","#b52896","#cd5896","#f71e96","#55da96","#859696","#4c8996","#f95696","#77db96","#c67996","#e8a996","#5da196","#8d7b96","#384496","#a62796","#9d8496","#db5996","#f5a396","#9b4596","#8c6796","#92a896","#72c496","#54a496","#e0cd96","#413d96","#f93a96","#c34d96","#9e4996","#aa4896","#9d3d96","#33df96","#992196","#528d96","#b4d996","#b0a196","#5a3296","#57c296","#dab096","#e08396","#72b096","#f08596","#79c196","#ce4696","#883696","#9f5296","#36d396","#4e2996","#cd8796","#d2d896","#dd5696","#91d196","#99e596","#c9da96","#44b696","#a09d96","#3d1e96","#5b4d96","#378096","#f0cb96","#ecc896","#d18696","#eb2396","#90d496","#7a7896","#694196","#e2ca96","#388396","#519b96","#e75d96","#6b7996","#ed4e96","#d3de96","#9d9996","#ccc696","#b5bc96","#9fa096","#78c596","#916c96","#b0b996","#4a6496","#b62f96","#6c2796","#8d7196","#792996","#c84196","#c43096","#718996","#e27096","#93b296","#e49996","#ec2b96","#5f2a96","#d72196","#ca8396","#5dc596","#a95a96","#da2196","#3fb496","#5d6096","#4e5296","#d97396","#f62896","#bb7496","#43aa96","#b63c96","#c66f96","#542e96","#41b596","#496596","#506796","#549596","#d67296","#de3f96","#8f2296","#d7ce96","#f37196","#933a96","#ee8896","#606096","#552196","#807996","#514496","#f37c96","#758796","#a08996","#b6c096","#609296","#edaf96","#5ac796","#922896","#601f96","#a16896","#972a96","#e27296","#852396","#a25296","#b77196","#dac896","#ab2596","#661f96","#a1a496","#f37c96","#3dd196","#d4b996","#821e96","#b7b996","#4a6f96","#de8d96","#72d096","#7da096","#747496","#f7c596","#525896","#4e6196","#7b9696","#c28f96","#caad96","#994096","#f6a096","#463796","#50ba96","#54b896","#a86a96","#f82296","#a67d96","#942896","#9a3f96","#a1b196","#81a396","#452096","#a7aa96","#582996","#de6896","#3a4496","#73cd96","#abb796","#d42696","#5fce96","#c78c96","#677b96","#4f5996","#44b396","#3b2296","#9cc296","#997c96","#da6c96","#b14b96","#8b5796","#66e396","#dda296","#8bd796","#6baf96","#c92296","#a77696","#b24696","#528496","#59e496","#efa596","#989496","#939e96","#7ab996","#344796","#d8d596","#c6ad96","#f52d96","#c0d896","#9fd296","#de8d96","#a41e96","#893096","#b63a96","#945896","#af5e96","#c5a396","#3f3396","#f09f96","#b07a96","#ae4096","#d1a696","#9a6e96","#966a96","#e1d296","#8a8496","#8c7a96","#628596","#664096","#779096","#77a596","#956096","#367e96","#d02296","#6a4f96","#a6c496","#849b96","#3c4796","#d64b96","#b0b996","#a88196","#adb396","#998d96","#33bd96","#896c96","#d73596","#a78c96","#6a2496","#3cb996","#61da96","#55cb96","#b57f96","#e25196","#f77b96","#e62996","#396b96","#46a496","#d27b96","#919196","#e7ac96","#babb96","#425c96","#b0d596","#9ade96","#88bd96","#dc3696","#e03296","#5a9796","#f89696","#ecab96","#3b7f96","#7ec096","#b1d496","#7f8096","#e76b96","#449796","#c92296","#cfa396","#54bc96","#bd3396","#9d3a96","#65c696","#61b896","#4fcd96","#404c96","#ad8d96","#5dd396","#6c7f96","#ee9f96","#6c7196","#45d396","#da3996","#3a6296","#95e396","#8e9496","#73db96","#6c4096","#68c796","#cd9596","#cf9c96","#70cb96","#db2a96","#79c496","#e3c196","#b84896","#537996","#cdb996","#5d4096","#765996","#543c96","#f64296","#77b496","#952e96","#c79596","#8a8a96","#b6c796","#8e9896","#574b96","#873796","#5fa996","#9e6b96","#32d196","#aebf96","#54e196","#d0d496","#452696","#b58296","#e04196","#47b396","#3d7a96","#714596","#c78d96","#ef6996","#c28f96","#e3d896","#f94796","#c12f96","#b17d96","#c0a696","#bc5e96","#8e2f96","#b69a96","#d46196","#357796","#e7aa96","#415d96","#805296","#412696","#b53896","#b8b496","#ab6796","#616b96","#79c796","#5bd596","#d2be96","#c5b296","#5b4096","#7cd596","#50aa96","#b25496","#33c996","#e7ba96","#bda696","#a69c96","#a02f96","#8e7f96","#872296","#cdb496","#8aa896","#562596","#49d696","#5e7796","#c3dd96","#324f96","#4bd696","#a83696","#4a3696","#d18e96","#589396","#6cb796","#823b96","#51a596","#8a2996","#c73096","#d7b896","#f7c996","#53b996","#e82296","#b17496","#708d96","#c74896","#59ce96","#b8d596","#3bc296","#a69c96","#359096","#d65896","#9ad496","#93c196","#e96e96","#69d696","#4b2496","#6d3296","#49b896","#aab796","#377996","#5b9d96","#9a3f96","#3b5296","#403296","#8b3296","#838896","#793f96","#3da596","#3ea996","#716c96","#92a696","#a76696","#718196","#f7de96","#d34096","#483c96","#4e7d96","#4b3b96","#7dcd96","#44ba96","#b11f96","#40e296","#e0c596","#8b9096","#c6e496","#496e96","#b99096","#e67596","#af5b96","#4fa996","#f47596","#ba8896","#564996","#e77c96","#f5b196","#7da396","#9a4d96","#b12d96","#f96296","#ed9296","#d23296","#6c5396","#da7096","#f53d96","#6fe196","#c7b496","#c8a996","#ea2e96","#a09b96","#70c096","#b62696","#3a7596","#458696","#4d3396","#674b96","#cf7796","#5fc896","#979d96","#37b096","#39e096","#415296","#b74896","#32cd96","#ac1e96","#b68c96","#4b9096","#61a896","#b66996","#a3d296","#6a5196","#b18696","#b1be96","#3e3896","#b7a396","#7f5796","#812996","#476796","#b5d396","#5c2d96","#4f8c96","#633496","#45b596","#855d96","#d84c96","#79d496","#c98c96","#de8196","#c6d796","#7cb696","#e27496","#d01f96","#6bd696","#a12196","#a67d96","#e5be96","#f2b996","#97cc96","#d6da96","#4c4496","#a47f96","#594f96","#7d1e96","#b45896","#f06d96","#d08e96","#f56996","#c76396","#47ac96","#da6f96","#dac996","#c6c196","#395b96","#4f5296","#cdbd96","#a17296","#c56596","#90d196","#832c96","#9e5396","#8c5396","#61b696","#3e6e96","#4c4896","#ec7696","#337c96","#505096","#f99f96","#bb9096","#68ad96","#6bd696","#732896","#a1cf96","#9eb196","#a13c96","#52df96","#cda896","#49a096","#664f96","#d87f96","#804596","#d2d996","#822a96","#c3b396","#5d8596","#d57396","#f81f96","#ddae96","#819496","#ca3396","#3ba596","#91ca96","#408a96","#823b96","#c3ae96","#3f3796","#8c3196","#d9b996","#ac8696","#bb2f96","#e2af96","#bda896","#f22f96","#503e96","#b63796","#69b196","#6d6d96","#e76496","#69c296","#46bd96","#e92396","#6c9296","#9d5996","#91a096","#e3a096","#ba7b96","#60d596","#8bda96","#4a5896","#cb9096","#a25896","#6ed396","#56a396","#99d896","#6ace96","#8e5596","#379e96","#754796","#9e2d96","#798b96","#f16896","#9c4e96","#39d496","#9f7596","#676196","#8ae096","#d82896","#b35696","#6bbc96","#9e5396","#9da796","#4e5396","#e2d696","#9f8c96","#54cc96","#863996","#e26d96","#8a9096","#9d8f96","#b6bf96","#f1e296","#ac4596","#d66996","#c47b96","#65a496","#ca3b96","#9d3096","#3c5196","#a08396","#767496","#d2a996","#d69196","#b09d96","#34a496","#738b96","#7cae96","#d5d996","#537596","#52c496","#ed9a96","#4b6296","#5f8b96","#359996","#d58896","#d88596","#67cb96","#f7e096","#d2c096","#377c96","#558f96","#ee8996","#cd2096","#be4696","#e08096","#f54396","#57af96","#e6d796","#a7bb96","#5e6b96","#526f96","#467c96","#b3d896","#c65896","#4e3796","#524096","#5b5496","#f1e096","#ee5896","#6ad296","#6fba96","#e99f96","#a74496","#5d3096","#d07796","#da8296","#dd6e96","#5dac96","#6d7896","#d6ad96","#369296","#7c9896","#633696","#7a3b96","#493a96","#ee4c96","#afd096","#db2b96","#444096","#5f7e96","#a57a96","#d54e96","#b23196","#839a96","#c23b96","#909196","#60ab96","#499b96","#f75f96","#69c696","#9d6c96","#bf2b96","#afd796","#9f3296","#a79d96","#cfc396","#b42296","#aa5896","#d29f96","#472396","#d0ab96","#b9b296","#86ae96","#c87a96","#69ba96","#f4a496","#966f96","#dc7f96","#847e96","#ddb196","#6de496","#379296","#69c696","#e56696","#778c96","#798a96","#753196","#c97d96","#ce4196","#446d96","#5fd496","#a5b696","#b4c796","#559696","#4ec496","#a12296","#396296","#5c3896","#eb2996","#aba496","#b08496","#c2b596","#a89596","#534396","#bf3996","#f6cc96","#4f3996","#ac4896","#f28496","#eb5596","#5d3796","#59c496","#dda096","#a5d696","#e9bc96","#954796","#ba3896","#70ae96","#6dc996","#f67d96","#922796","#457896","#eca896","#6a8c96","#edc396","#9f9996","#368796","#c34c96","#55c796","#e33596","#9a7c96","#799a96","#c3dd96","#8bc196","#903196","#976696","#52da96","#dc6496","#3d9c96","#a92596","#6d8c96","#6ec196","#8fd096","#b9b496","#db8c96","#f07596","#ee6696","#c73096","#32c596","#32d296","#912b96","#426096","#4cc996","#6ec296","#418196","#cc4696","#adc896","#ab4096","#49a096","#83dc96","#ebb796","#6b8996","#b05e96","#ed6396","#f95496","#ed4196","#93ca96","#435f96","#871e96","#95bb96","#6ec496","#f8df96","#c8a796","#a43896","#5ca596","#532696","#3a6b96","#ad3a96","#53bf96","#ec8b96","#dd4796","#932f96","#85c396","#ed9c96","#d19296","#d84696","#819996","#e5e596","#f88696","#6a5b96","#64b796","#8d7996","#d3c696","#41b496","#9f6e96","#a9a396","#a46696","#58cb96","#63a496","#cf8b96","#a27396","#81b796","#546296","#6e3e96","#662996","#a75d96","#324196","#ada696","#ea7396","#424096","#5cb196","#414396","#47c396","#f7bb96","#bea296","#db7a96","#893c96","#ab4e96","#8aa996","#b09696","#c1c096","#c87396","#baaf96","#7d7896","#4bdd96","#a1da96","#a3ce96","#a61f96","#de6696","#3e9096","#c96d96","#4f9796","#c13496","#b8a696","#dc7596","#547196","#ca3896","#cab296","#c0b096","#af6d96","#f64796","#9fc096","#ca2296","#552096","#ee8396","#ec5396","#6b6096","#a5d796","#77a696","#7fa496","#7d9b96","#53a796","#a76196","#485096","#3e7796","#84d596","#d44f96","#cdd096","#ccae96","#792196","#7acc96","#665596","#eebb96","#4d8796","#69a296","#874e96","#b84996","#ae3c96","#cfdc96","#87ce96","#756296","#d76a96","#ea6396","#6d4696","#4a8996","#d79c96","#3d4996","#52ac96","#f89e96","#af3d96","#ba7696","#802596","#b4b496","#bf7c96","#d44496","#92a496","#68cd96","#eb9896","#d86296","#d59f96","#d77c96","#ce8d96","#384e96","#b5a196","#accc96","#f06e96","#813296","#adda96","#5eb296","#ed2d96","#d02796","#a6a296","#3e4096","#7cb796","#8c8996","#a0cf96","#836a96","#678296","#778d96","#e0b796","#7f5296","#69d996","#ccb796","#4ba896","#bb9d96","#b52d96","#907296","#9e4296","#5e3696","#5cb796","#f28c96","#db3696","#6a6296","#ca2996","#e24796","#336896","#914a96","#84c396","#d96d96","#f59796","#4b5e96","#cca896","#f76996","#eae496","#61bf96","#928f96","#9f9196","#717e96","#699296","#c12e96","#f75196","#a46196","#7aa096","#e4c796","#afa496","#59a596","#6f4696","#e03b96","#c25796","#b73396","#946d96","#338796","#71a896","#b38c96","#7fdc96","#ba3d96","#f8d496","#b97596","#3d5396","#e1dc96","#786696","#8b6496","#786196","#4e2696","#527296","#daaa96","#75d196","#a5c296","#e74e96","#a3d696","#a3cf96","#aa3f96","#60d696","#51a296","#bbbf96","#5a4796","#f26d96","#d91e96","#33d996","#d0c096","#6bdd96","#404c96","#e3bb96","#df5d96","#6ca396","#997096","#7e7396","#c16c96","#a4b696","#e85096","#d3c796","#6d3496","#4b5596","#ce8296","#b83696","#5fdb96","#4a8296","#394996","#e28a96","#374a96","#a8a696","#46b096","#bc6296","#f7b496","#88b096","#cf6296","#a6a096","#add496","#764e96","#c58996","#6f6496","#f6be96","#bb6596","#702b96","#63d396","#a0d396","#937d96","#6c7596","#7f9696","#3d3496","#405296","#39c596","#964196","#a8c496","#ec5396","#698a96","#498396","#87d796","#54be96","#728f96","#6f4896","#e08a96","#8c3e96","#b22696","#3b1e96","#872096","#355f96","#549296","#c4a896","#c8e296","#ae2796","#72de96","#6f5996","#f74d96","#ca8e96","#cfca96","#368796","#9d2896","#46d996","#6d6896","#549e96","#90b896","#646e96","#ded896","#851f96","#604296","#985996","#3b2a96","#33dc96","#4bca96","#754896","#a2d996","#9b8396","#8b1f96","#bbd596","#568096","#769896","#695196","#538d96","#c42596","#733b96","#4b8896","#32e096","#7a2a96","#d34d96","#438b96","#e27c96","#474896","#db9d96","#4a7796","#889796","#d83796","#706196","#99c996","#db8196","#9e2e96","#d0e396","#6ad396","#a51f96","#5e4096","#996596","#af6396","#a48b96","#a48796","#d33c96","#66c096","#bada96","#366d96","#5d9596","#763d96","#773896","#939e96","#942f96","#9dc596","#35ac96","#816296","#a56396","#ee4396","#51e496","#918b96","#4d2c96","#a02896","#cc6296","#c58696","#c34196","#355096","#494f96","#689196","#684396","#8d9296","#65b496","#374e96","#b5a696","#96bd96","#ab1e96","#c0a496","#937f96","#427996","#93b996","#c82a96","#b9af96","#f19496","#442896","#427696","#b74496","#97b796","#80bc96","#f35d96","#a4af96","#358f96","#548b96","#68bb96","#407e96","#9ba196","#7f2296","#7cb696","#467896","#407c96","#4a7696","#e47996","#4c2a96","#4fac96","#403b96","#c63196","#b36296","#8b7896","#ddc596","#a88996","#9a4d96","#592796","#884196","#962896","#c93f96","#9b3f96","#7f7c96","#8ce396","#8bd496","#7d2996","#404796","#502f96","#3cb896","#a09996","#f64f96","#593f96","#a74196","#6dbb96","#476096","#dbd796","#535b96","#d6c196","#40df96","#af2396","#d93296","#8b5596","#5c2a96","#9c5496","#ec5096","#7d7396"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}},"selected":{"id":"880d8493-88c0-49bc-b2dd-9a927896b9fb","type":"Selection"},"selection_policy":{"id":"1264df19-65f7-4a35-ba75-8eb564aa9d4a","type":"UnionRenderers"}},"id":"0f56f1f0-0ed1-4221-bb51-d4ddb86087e8","type":"ColumnDataSource"},{"attributes":{"below":[{"id":"91f328da-d2ef-4006-b571-6dee46d7670a","type":"LinearAxis"}],"left":[{"id":"6df43792-7dd0-4128-a3e9-96652da5461c","type":"LinearAxis"}],"renderers":[{"id":"91f328da-d2ef-4006-b571-6dee46d7670a","type":"LinearAxis"},{"id":"1617b251-9993-4a10-855b-e200f39da6ff","type":"Grid"},{"id":"6df43792-7dd0-4128-a3e9-96652da5461c","type":"LinearAxis"},{"id":"db025beb-ab24-44de-9163-02ce3d21831c","type":"Grid"},{"id":"06b2aa4e-da71-4c92-9219-40cd3481ea8e","type":"BoxAnnotation"},{"id":"9a75e20f-c26d-4016-b81a-4d9ebbac0a0f","type":"BoxAnnotation"},{"id":"caf117f5-648f-49d2-973c-683339cde1c3","type":"PolyAnnotation"},{"id":"47d47e96-e22d-4f4e-b8d4-0b8d00657131","type":"GlyphRenderer"}],"title":{"id":"376d2c10-3abb-40d8-ad57-b6cca5512f9a","type":"Title"},"toolbar":{"id":"63fbc71a-904a-4136-8231-3f3fd52ae4d6","type":"Toolbar"},"x_range":{"id":"ae7ba7e4-4047-425c-bd64-c4676c0ffa18","type":"Range1d"},"x_scale":{"id":"a80c454b-c938-4052-b950-4fceae703f02","type":"LinearScale"},"y_range":{"id":"839322d4-f473-41bc-9d78-24adacaa5e86","type":"Range1d"},"y_scale":{"id":"8155a1c3-8b1f-4510-a934-a5bed7e10e37","type":"LinearScale"}},"id":"48ea98fd-b376-447a-b0b1-e0bf73347cba","subtype":"Figure","type":"Plot"},{"attributes":{"callback":null,"end":100},"id":"ae7ba7e4-4047-425c-bd64-c4676c0ffa18","type":"Range1d"},{"attributes":{"callback":null,"end":100},"id":"839322d4-f473-41bc-9d78-24adacaa5e86","type":"Range1d"},{"attributes":{},"id":"a80c454b-c938-4052-b950-4fceae703f02","type":"LinearScale"},{"attributes":{},"id":"8155a1c3-8b1f-4510-a934-a5bed7e10e37","type":"LinearScale"},{"attributes":{"plot":{"id":"48ea98fd-b376-447a-b0b1-e0bf73347cba","subtype":"Figure","type":"Plot"},"ticker":{"id":"21fbd510-869e-434a-b642-e26a3ba5e04c","type":"BasicTicker"}},"id":"1617b251-9993-4a10-855b-e200f39da6ff","type":"Grid"},{"attributes":{"formatter":{"id":"c1f66cd3-f871-4947-81f4-ec2969088a45","type":"BasicTickFormatter"},"plot":{"id":"48ea98fd-b376-447a-b0b1-e0bf73347cba","subtype":"Figure","type":"Plot"},"ticker":{"id":"21fbd510-869e-434a-b642-e26a3ba5e04c","type":"BasicTicker"}},"id":"91f328da-d2ef-4006-b571-6dee46d7670a","type":"LinearAxis"}],"root_ids":["48ea98fd-b376-447a-b0b1-e0bf73347cba"]},"title":"Bokeh Application","version":"0.12.16"}}';
                  var render_items = [{"docid":"41aaba37-e6bc-419b-82de-38ad77950c30","elementid":"45020431-9aa3-4b46-ada4-46596f271d1a","modelid":"48ea98fd-b376-447a-b0b1-e0bf73347cba"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.16.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.16.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.16.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.16.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.16.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.16.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();