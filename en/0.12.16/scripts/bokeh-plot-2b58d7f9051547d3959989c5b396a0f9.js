(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("05f12b48-f37d-4e34-8f3d-f9d00b0d8c4f");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '05f12b48-f37d-4e34-8f3d-f9d00b0d8c4f' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.16.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.16.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.16.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.16.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "DrawTool": require("custom/bk_script_4fe1a953f37e440bafdcb3330a4881eb.draw_tool").DrawTool,
          "MyFormatter": require("custom/bk_script_536909578ebd4dd59dc108ec1a737cb4.my_formatter").MyFormatter,
          "Custom": require("custom/bk_script_70142c597e884531a4514c3c604a86cc.custom").Custom,
          "Surface3d": require("custom/bk_script_9331c4d2a2fa432ba11140b0ec446e88.surface3d").Surface3d,
          "LatexLabel": require("custom/bk_script_da3193bc49874d5cb629b293ffd9b45e.latex_label").LatexLabel,
          "IonRangeSlider": require("custom/bk_script_dcecbfa28a734a4dba3108d34a44fd8d.ion_range_slider").IonRangeSlider
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_4fe1a953f37e440bafdcb3330a4881eb.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (sx = e.sx, sy = e.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
    
          },
          "custom/bk_script_536909578ebd4dd59dc108ec1a737cb4.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
    
          },
          "custom/bk_script_70142c597e884531a4514c3c604a86cc.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
    
          },
          "custom/bk_script_9331c4d2a2fa432ba11140b0ec446e88.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model.
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // BokehJS Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set a listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript BokehJS model subclass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
    
          },
          "custom/bk_script_da3193bc49874d5cb629b293ffd9b45e.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
    
          },
          "custom/bk_script_dcecbfa28a734a4dba3108d34a44fd8d.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, inp, max, min, opts, range, slider, step, to;
                  // BokehJS Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  inp = this.$el.find('.slider')[0];
                  slider = jQuery(inp).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
    
          }
          }, "custom/main");
          ;
          });
    
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"46b52bf0-3f58-4805-bccf-aed3ed6d2268":{"roots":{"references":[{"attributes":{"button_type":"success","callback":null,"icon":null,"js_event_callbacks":{"button_click":[{"id":"260cb9f0-8ca4-49b1-9be4-4ac2b59305f5","type":"CustomJS"}]}},"id":"0e7013aa-6e0c-4a05-8f7e-bdfac90b91b5","type":"Button"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"b239eafd-11f9-424d-b5df-f1e6c35e1da8","type":"PanTool"},{"id":"909d475e-76af-43f6-8f41-644be63e3cf4","type":"WheelZoomTool"},{"id":"642aad91-243b-4f5f-b510-6dde676237a1","type":"ZoomInTool"},{"id":"5ca1ca4f-2d2c-43d8-810e-95b2a4cdd46d","type":"ZoomOutTool"},{"id":"782d8c59-18a6-4d57-800f-13ed4421c698","type":"ResetTool"}]},"id":"5da76a90-8725-45c3-943a-d29f51f39de1","type":"Toolbar"},{"attributes":{"children":[{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}],"width":1000},"id":"53d4c163-c004-4472-affd-41ef0b9b3a09","type":"WidgetBox"},{"attributes":{"children":[{"id":"0e7013aa-6e0c-4a05-8f7e-bdfac90b91b5","type":"Button"}]},"id":"3b537103-ec5f-4308-a849-dd71cb993d83","type":"WidgetBox"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"e61a0791-8e88-46df-b919-1b7703d54a82","type":"CustomJS"},{"attributes":{"children":[{"id":"216baf6d-73da-4468-b311-f868de61e530","subtype":"Figure","type":"Plot"},{"id":"53d4c163-c004-4472-affd-41ef0b9b3a09","type":"WidgetBox"}]},"id":"eef30d14-a690-4306-a778-0a9dcae351e9","type":"Row"},{"attributes":{"children":[{"id":"3b537103-ec5f-4308-a849-dd71cb993d83","type":"WidgetBox"},{"id":"eef30d14-a690-4306-a778-0a9dcae351e9","type":"Row"}]},"id":"ca667a1d-2c4e-470b-b028-4e7c9afd11bb","type":"Column"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"d74ab214-b12f-4962-85e1-07a991b4c537","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"260cb9f0-8ca4-49b1-9be4-4ac2b59305f5","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"7b3accf0-257a-4ee5-b50f-e60c369b4871","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"edcadc7b-0b14-42fc-97be-86e55524f8c3","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta_x&#x27;, &#x27;delta_y&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"df9cc861-b312-4039-8c02-db4a4e8e8d41","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"a69dd64c-0e4e-4271-bc3a-dfbd6693773b","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"7549a749-6172-4f60-b446-265b4b05bb3e","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"edef48bc-eff3-496f-8457-200f2b8ac4b9","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"ec1a0f02-1ddf-47c6-bec7-f4f0ec5a6d28","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"05c7090a-0d92-45d3-8cf9-97e2011a19c0","type":"CustomJS"},{"attributes":{"callback":null},"id":"28826f71-82a5-4478-8bbd-8ebeea2d916f","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"7b02b9f0-18fd-4a5c-a1a3-3b3cf1d3506e","type":"CustomJS"},{"attributes":{"callback":null,"data":{"fill_color":["#4de096","#f66c96","#5cd596","#9c8796","#394996","#cd9896","#9e4b96","#ecad96","#9d7b96","#6b2496","#dc3696","#669a96","#cca796","#99ae96","#c0e296","#c48a96","#8ac896","#40a396","#819c96","#4c2d96","#d43396","#569b96","#57bb96","#ea5796","#916596","#e87296","#c88f96","#ca7996","#993496","#b72a96","#b1b596","#95e296","#711f96","#5a4b96","#f4a996","#bd2196","#554996","#4ad096","#e8bb96","#893196","#533c96","#e1c096","#c17f96","#82d496","#efce96","#9a5596","#64c596","#ec6196","#384f96","#ca9396","#f8cb96","#3ad796","#d66d96","#eba896","#f28e96","#40d096","#5e6096","#7c6696","#e26496","#882796","#b06b96","#9d6996","#7aa096","#933996","#8e6196","#99c196","#5e8996","#834996","#e46a96","#b24796","#57a496","#46bb96","#a8ae96","#38b596","#d48a96","#66da96","#6cbc96","#726c96","#688a96","#7cc596","#7c2396","#6f2996","#cab196","#b62696","#dc7896","#f25896","#c86996","#db2f96","#c26296","#9f9996","#5fda96","#add096","#ad2796","#969196","#768c96","#c88a96","#619f96","#97d796","#6ab196","#ae7c96","#918196","#aad496","#714896","#5f3596","#cca196","#83aa96","#f92b96","#76e096","#337b96","#9e6196","#b97c96","#a9bf96","#bca496","#855896","#c38c96","#b97596","#4b9696","#b57b96","#633996","#4ba696","#bb2596","#7e3a96","#3ab396","#6f7a96","#ce9b96","#7a6d96","#be2b96","#582496","#6d9096","#4a7d96","#ce5296","#8f2a96","#cdd496","#805a96","#d03496","#37dd96","#eb7296","#dc5096","#a2af96","#d9b496","#b86c96","#e65596","#b7cd96","#a59f96","#732b96","#f2bf96","#5c6596","#bd7896","#e34796","#3dc096","#6a6396","#e26896","#8dbb96","#36e196","#61da96","#be5596","#a7b896","#ca1e96","#a1e596","#5a4996","#64c596","#525896","#bab196","#716396","#f7d896","#722296","#ce4d96","#7c8296","#563296","#7c6f96","#d02096","#b0a696","#c4da96","#3f7c96","#b24496","#5e6b96","#9cd996","#f9a196","#a82d96","#e16596","#918896","#9c3096","#c86a96","#8f7796","#6c6b96","#806a96","#ed7996","#542f96","#e85d96","#a85496","#833496","#493896","#9ec896","#c88e96","#d0b396","#74de96","#473496","#f54396","#a25096","#b3bc96","#927596","#f09896","#bc3896","#aa9296","#7a3696","#84ab96","#c2be96","#722096","#7d4296","#d76a96","#b38696","#c06596","#e47896","#94c696","#f24d96","#3eca96","#425896","#89d496","#392d96","#f3ad96","#c82f96","#642496","#ed7296","#df7196","#c62396","#c9e596","#61e096","#a58c96","#e1cf96","#392996","#be2396","#453896","#b01e96","#477396","#dcbd96","#b7e596","#f6bf96","#4b3396","#657e96","#ce2796","#5b5c96","#4b4d96","#416a96","#441e96","#712996","#ce7796","#b74896","#66ba96","#aadc96","#e65f96","#c5c796","#af7a96","#57ad96","#b9a296","#a28996","#38cd96","#b25396","#3d1f96","#b1a796","#488696","#5ec396","#713696","#c79f96","#edba96","#9f7096","#55c196","#5eca96","#583696","#c82196","#c44996","#954c96","#326596","#baa496","#8a7696","#63cb96","#606a96","#65ad96","#a3a196","#b12f96","#b79896","#a66796","#ae5296","#5c8f96","#582496","#ab9796","#676596","#393096","#35b296","#784596","#e52596","#d8d396","#799396","#47ab96","#669896","#be3b96","#82a596","#e6e496","#959896","#9c3696","#543e96","#415196","#b68696","#6f7896","#e02096","#67d196","#749e96","#b07f96","#815b96","#df9296","#cf1e96","#b1b296","#abe196","#d2db96","#8c3496","#d87096","#c66096","#b5a496","#b69996","#537096","#b48096","#d4b096","#dab096","#ef4296","#5b5696","#472d96","#5cbd96","#819096","#ac5b96","#f6b196","#81ba96","#6d5096","#593696","#4aaa96","#d65796","#705d96","#46db96","#c83b96","#6c3396","#60ab96","#71b596","#949496","#46cc96","#f9dc96","#854a96","#3a9f96","#bcdb96","#cd2696","#693296","#722596","#f22896","#c57496","#52ab96","#c8d496","#3e7596","#9a5896","#72e396","#434d96","#362a96","#38a396","#ed9796","#ce5e96","#6eb096","#716c96","#8e7e96","#5d2796","#ceaf96","#4dcf96","#e47396","#997296","#d6e296","#448396","#65d996","#583196","#873896","#94c196","#e7aa96","#cc2b96","#579896","#5c7196","#d5bf96","#852896","#6f5296","#ec6c96","#ce3096","#c52596","#6fc396","#85b696","#c0cc96","#9a4596","#994396","#464496","#f2c896","#f7db96","#db7b96","#d1a496","#94d296","#9ac896","#d83b96","#f87696","#b29496","#dc4196","#9b3d96","#736196","#b82d96","#b48196","#b2cb96","#f76796","#6f3396","#c1b496","#862796","#c52396","#5fa196","#6a6096","#75b696","#b4bc96","#688396","#d79896","#54bc96","#8f6596","#d33396","#456096","#ce6996","#e74396","#f52896","#3e5296","#e3a896","#f77d96","#959996","#f45596","#7b7396","#aa5596","#a32096","#70ad96","#b2aa96","#885396","#d76a96","#b2e296","#6c3496","#af4096","#9fd196","#3f4696","#667296","#3ec796","#608396","#a5a896","#754a96","#4ae096","#be3896","#8e5096","#d94396","#9c9e96","#b36796","#ee6696","#5fad96","#6d4696","#499396","#323896","#b5a496","#77a196","#db6096","#d5e396","#81b596","#63c496","#d17396","#92bb96","#924496","#d03a96","#a46f96","#675396","#7aa296","#894596","#d02796","#6c6296","#ba3796","#ed8196","#5cb896","#4e7996","#57a896","#8d6c96","#366496","#d2e096","#e4df96","#a7c996","#875696","#3f9f96","#5a6b96","#f36c96","#e8cf96","#a52c96","#65c296","#bd9796","#6c9d96","#f14196","#9c9496","#c73c96","#ed3796","#5c1f96","#e4ba96","#e6dc96","#387496","#c43d96","#37a196","#4b3f96","#64cd96","#7fdb96","#4f4f96","#3f3196","#f3ba96","#9bb496","#4cd896","#564196","#b1d596","#b4d396","#476b96","#56a796","#ad9196","#37ca96","#82b496","#5a8896","#98b796","#4be396","#888496","#f1c696","#823496","#ef5196","#b2d396","#5a8896","#418196","#ed1f96","#6e3e96","#e96396","#6f5896","#96d296","#82d596","#b98696","#7c8596","#4e2496","#daa396","#f09a96","#78cb96","#4cc496","#346a96","#515c96","#44d396","#4b3d96","#c8a796","#367f96","#aa7696","#9bdf96","#ce7b96","#654996","#7f9796","#be2196","#656a96","#c77996","#485396","#8f6496","#5bbb96","#70a696","#50d896","#56a396","#b82e96","#a06696","#9dd096","#a53e96","#7d4196","#4f4896","#bcd996","#9fc796","#9fe496","#cc7396","#b38796","#f29296","#a6a196","#7ec596","#d72396","#8d9496","#84cd96","#449296","#3bc596","#73df96","#915296","#4b7896","#cc4096","#43e196","#f15496","#85df96","#ba3396","#a9d796","#8da696","#e67a96","#f9c696","#6b3496","#e72696","#547996","#87ce96","#f86e96","#4d4d96","#9b5496","#416f96","#32dd96","#e02896","#44d796","#332796","#65a696","#365c96","#b65a96","#975896","#934196","#b82296","#ae2a96","#b2c896","#ec4496","#6b9396","#8bdd96","#6ecd96","#58db96","#e63e96","#3f8496","#82d296","#ad2696","#c54396","#756696","#8cac96","#bf4796","#817796","#b72e96","#645296","#975c96","#89c796","#cd5596","#71d096","#dc5496","#e19b96","#734096","#f03496","#486496","#868696","#5c3e96","#746296","#afb496","#7e8b96","#4b2896","#3f8e96","#786896","#36a596","#a6d596","#6e9196","#942a96","#6baf96","#998196","#618c96","#6a5996","#90c196","#5edf96","#3fd396","#bf5696","#e9c396","#425a96","#a62396","#cb3a96","#c94796","#637096","#a9bf96","#994696","#834f96","#b47d96","#f37996","#bc3796","#eec396","#83a396","#366896","#3e5e96","#d7e496","#5a6096","#f6a496","#93ba96","#d79e96","#365c96","#ad8596","#ac7596","#498b96","#537f96","#7f5196","#a43696","#462096","#7fd796","#97c196","#a19d96","#466196","#b1c896","#599d96","#bc3196","#a68796","#3d6696","#516996","#8d4596","#349896","#4d2f96","#915e96","#74bc96","#56b996","#f7b496","#738d96","#ea2396","#8e9b96","#6b6f96","#99c396","#946196","#c58c96","#c9a396","#bf9196","#f3be96","#c02d96","#92e596","#cf2b96","#94a496","#d22396","#c9c596","#522f96","#712496","#802296","#a4d296","#972a96","#9ea896","#429d96","#83e496","#cc2c96","#70c396","#4a8396","#6aa796","#95ac96","#f19196","#adb996","#a36496","#8ca996","#86c896","#ba2b96","#364296","#419c96","#c09d96","#60d496","#b79196","#ad4396","#4fd596","#485096","#cd7d96","#d16b96","#b14796","#9c2896","#b92996","#96b596","#90cc96","#f04696","#47d196","#8f2096","#f8e196","#ecda96","#afc896","#9edc96","#57c096","#bebd96","#f58796","#869a96","#c94596","#454d96","#dac696","#896c96","#50ad96","#b95596","#684696","#3e4a96","#6e2396","#546c96","#d72f96","#91d296","#c77c96","#5e7996","#8a7e96","#d4d396","#94e396","#3bb796","#5e5296","#74dc96","#a79f96","#b68c96","#bd2596","#e3a096","#831e96","#973796","#967f96","#517296","#b63696","#5f5e96","#b77e96","#a99896","#f21e96","#586596","#59b396","#a66096","#9f5e96","#464e96","#617896","#521e96","#3ddb96","#a37f96","#558e96","#57cd96","#81a796","#462296","#6ce096","#ca9596","#648296","#c44396","#635996","#e84596","#d26d96","#562596","#ae2d96","#de8596","#7e5496","#4e5896","#c19a96","#f5d496","#918e96","#7b8496","#c7d296","#c92a96","#3d7696","#958a96","#8da696","#4ebe96","#445796","#a44796","#6e2196","#79bb96","#768596","#8a4396","#41b596","#633096","#7bc996","#afda96","#7e6e96","#82d896","#60aa96","#f34c96","#c73e96","#751e96","#61d396","#627f96","#a76596","#b8ae96","#49b596","#805996","#dcab96","#997896","#8be396","#6c7996","#5dc896","#743596","#881f96","#afb396","#974d96","#917996","#df2096","#7ec896","#ba2e96","#c29796","#cfb996","#af3996","#653f96","#906f96","#727c96","#33aa96","#9e7596","#696296","#4a5196","#f7b096","#d5ae96","#804596","#a02596","#f0cc96","#35d596","#e57996","#b04b96","#6a6996","#884396","#483896","#63d696","#ca8296","#454496","#808c96","#c74796","#526396","#e97a96","#ebd096","#f28696","#dbbb96","#613896","#b9ae96","#58e496","#662896","#868f96","#a82196","#9b8196","#ce7a96","#d0cb96","#f85496","#515496","#339696","#eebc96","#565896","#c23f96","#72ba96","#436596","#b29996","#4de496","#b24d96","#ee3096","#885896","#4ca296","#53de96","#759096","#494196","#59ba96","#3e2796","#c09596","#714f96","#ec8596","#b08496","#f49096","#da8796","#38c696","#be6596","#a1ac96","#3c6e96","#d4cd96","#415c96","#539d96","#56df96","#457e96","#d85f96","#a9cd96","#757c96","#79d096","#dcb396","#e59a96","#6e5d96","#417196","#54c496","#cbaf96","#423a96","#876096","#6cab96","#79ac96","#a46d96","#9d3496","#7fa396","#839996","#90c296","#76db96","#e5aa96","#b32f96","#9edb96","#d54996","#edad96","#6e8196","#4e4396","#f11f96","#bee596","#a4aa96","#666d96","#f0a296","#c03d96","#f53796","#f1a996","#dbc896","#c39796","#ccba96","#ef9b96","#a46696","#62b396","#6cb196","#36b496","#938a96","#b94296","#616f96","#50d796","#6e8096","#4e8096","#641f96","#6e6896","#93bf96","#9ea896","#707996","#579796","#32d596","#d74796","#e06196","#731f96","#59e096","#3e7996","#6c8896","#b9c096","#bde196","#40dd96","#3ab996","#483a96","#51b496","#994296","#473096","#5e9b96","#607b96","#8bd996","#7e3696","#485596","#8f9d96","#f84d96","#982296","#3d6196","#ed3f96","#965396","#554196","#65ce96","#4c3e96","#8a7a96","#329596","#7eb796","#4da396","#828696","#a95c96","#9f2496","#e98896","#ddc896","#e2b496","#4abe96","#b87e96","#b5b696","#bee196","#6d9096","#3a9b96","#ef7f96","#f54c96","#9a2096","#de8896","#4b4296","#e5b296","#c59996","#d29396","#35ae96","#bda496","#4eb296","#7e3196","#346996","#642996","#33ca96","#3d8396","#53ba96","#eca896","#bf3096","#c85696","#3b4696","#3d7e96","#8f4c96","#c95696","#bbdb96","#a3a596","#d58996","#be4696","#ce9f96","#bc2a96","#b2c196","#c55b96","#78af96","#d39696","#ab4896","#a2af96","#d6e496","#546596","#7d3f96","#56d296","#964296","#517f96","#e89c96","#403496","#cd7196","#de6196","#d24896","#90d396","#ba5196","#e92196","#5dd496","#8c9c96","#7d3196","#e9bd96","#c53a96","#bb3796","#9b5796","#835696","#755a96","#a9ad96","#c1d396","#b09796","#a8b996","#93ca96","#ec8696","#b68896","#63a196","#5d2696","#ea5496","#bb5d96","#392696","#3e6a96","#eabf96","#f09a96","#e35d96","#c79696","#a53b96","#e3c096","#4ad896","#ec8596","#bcd496","#36d096","#4d8796","#ded896","#e27496","#486696","#99b496","#775296","#f1d096","#f1cc96","#ea3396","#c13296","#a67e96","#567296","#669d96","#88a796","#737796","#388b96","#a6c496","#476a96","#f26e96","#bd3996","#ae7896","#d6c296","#50cc96","#5d4196","#b86996","#b16e96","#c01e96","#b67c96","#571f96","#833896","#b98896","#c47596","#71c296","#8c2f96","#a0c996","#b99296","#b76c96","#a8c996","#7c8e96","#c0cc96","#4d5e96","#c18396","#d2b496","#bc4396","#e37296","#dcaf96","#b7c796","#43c196","#a52496","#c45596","#764b96","#9e2196","#659896","#e02a96","#8aa396","#abbd96","#cc3096","#834396","#3ec796","#a9d496","#4d8a96","#8d3a96","#83b296","#698596","#b83696","#c6e496","#342096","#d2e196","#cb5f96","#b96396","#a34c96","#654296","#37c996","#807196","#882c96","#3b3f96","#c66996","#3bc396","#77c096","#6d8296","#cc2396","#992f96","#984796","#a79a96","#843f96","#f11f96","#f5c496","#504a96","#eaa996","#344e96","#d8cc96","#a77f96","#da5196","#947d96","#f9a196","#c46c96","#f39296","#4a4096","#cf2b96","#f0a696","#4c5f96","#34c596","#415a96","#c6b496","#69be96","#ad6e96","#b23f96","#7d3c96","#8c7296","#ef7496","#e66196","#41ca96","#7d4496","#876b96","#433296","#6d4296","#97aa96","#b65b96","#cfe296","#cf9596","#de4096","#67e496","#dd5e96","#464596","#374d96","#542c96","#44d696","#cd2d96","#9be196","#54d996","#8a9096","#a06296","#f55796","#b7d696","#f29696","#785296","#a9d996","#55e096","#f94c96","#3d9e96","#603f96","#7ca896","#958896","#b7ba96","#a99d96","#822996","#818596","#613296","#cb7a96","#e75e96","#b4ad96","#85dc96","#596b96","#afd696","#db4c96","#76a396","#573996","#369e96","#325d96","#6a4596","#91ad96","#574596","#913096","#72d896","#a5e196","#342896","#51be96","#789996","#5a3d96","#c74a96","#673b96","#7ecb96","#f9bb96","#db3196","#f2a196","#70a496","#70a596","#6ac396","#a65c96","#659096","#f82896","#453a96","#7e3796","#602296","#be8e96","#9c7696","#7da696","#b4a796","#75a996","#b08696","#444096","#f96296","#52dc96","#b9d196","#b28096","#9cab96","#c37396","#3b5a96","#a0bb96","#bf8696","#a37496","#6be096","#d9e396","#99b396","#8c8096","#512896","#f2d296","#e13096","#704f96","#404996","#646c96","#af5e96","#d3d696","#904896","#e44e96","#76b996","#f26696","#3d7c96","#373c96","#4ea096","#4b4e96","#dc5d96","#d0d196","#d5d296","#f77296","#774f96","#a83a96","#9e8696","#eab596","#eda496","#924b96","#97e396","#4f5196","#5f7f96","#5b8b96","#414196","#485a96","#663d96","#396996","#f7e596","#d38d96","#ad5196","#a33096","#ed6f96","#7f5996","#e48c96","#505a96","#b25c96","#b5dc96","#a8df96","#325f96","#9f4696","#e6a296","#32a396","#e7b896","#4f4196","#6b5f96","#72bc96","#56c796","#327896","#bc4a96","#9f4296","#733196","#ed8296","#cfa296","#5eba96","#986896","#f2cb96","#622c96","#c5cf96","#49b796","#446d96","#d6c596","#883196","#4a9796","#7b2796","#879c96","#d07896","#5c5e96","#f7b896","#7c4196","#b82796","#9e1f96","#ac2a96","#3eb296","#907896","#781e96","#351e96","#afe596","#775996","#ea8296","#7d2696","#f0cc96","#5fb096","#385996","#bc6e96","#e0d796","#6a5296","#415896","#4a3c96","#d06496","#c1b996","#c46f96","#835096","#a0aa96","#b8aa96","#872e96","#393a96","#c59d96","#c63f96","#50b696","#ab6496","#b78a96","#855d96","#4e5e96","#cb4a96","#de2296","#9f1e96","#89d296","#c17096","#889496","#987496","#be4e96","#566b96","#efda96","#c46496","#3fb896","#cd1f96","#383a96","#61cc96","#b3bf96","#ce5b96","#6ecc96","#76de96","#4bbe96","#71ac96","#62a896","#417096","#492096","#387096","#372c96","#7f3e96","#c07996","#42b596","#5b9b96","#762596","#f9ad96","#4ed396","#f08296","#475a96","#362796","#a98996","#a32d96","#f6c896","#945e96","#7ad096","#52b996","#922e96","#c67996","#c4c996","#8dca96","#385796","#778b96","#56c796","#c7a996","#f36996","#498896","#567296","#f4cb96","#974696","#623b96","#d79a96","#d06f96","#ceb796","#53ce96","#95a296","#472c96","#f14396","#c39096","#684a96","#e12296","#95af96","#dd8c96","#6b3096","#79ca96","#428696","#6c3f96","#d98096","#e58996","#b2a096","#dea896","#ad5d96","#99e396","#984796","#877e96","#abae96","#d7a196","#884e96","#f46396","#df7a96","#915d96","#ec4096","#ea8e96","#8bb796","#e5b696","#c5ba96","#ae2f96","#686b96","#a4d196","#d65e96","#d3bf96","#e39496","#39bd96","#7c6396","#32d096","#60c196","#45df96","#894796","#7d3e96","#b71f96","#cf6e96","#49df96","#e38096","#7f9796","#901e96","#bd7d96","#97af96","#46c796","#7c4b96","#9d6496","#954496","#ba4c96","#d49596","#e66f96","#7e7996","#36b196","#d9a996","#aa3596","#a7d796","#647796","#f56696","#333596","#6d4496","#b5af96","#9fb196","#372d96","#dccf96","#b67d96","#f56496","#348b96","#c39296","#4cb996","#783c96","#d74f96","#543596","#3fbc96","#7ad596","#96aa96","#c17f96","#b67e96","#80e096","#dd4296","#ab3b96","#f77e96","#e84996","#3a4396","#b65196","#342d96","#dc6f96","#9b5296","#d5b896","#b21f96","#a9d796","#559596","#b1aa96","#c9d996","#705596","#52b196","#51c696","#b0ca96","#706696","#3be196","#552496","#886896","#328996","#3aab96","#a34e96","#d38f96","#813396","#f98e96","#52a596","#dba096","#58b996","#cba696","#9d2996","#e6b696","#775a96","#7eba96","#5d2e96","#cb3b96","#d94196","#b4ca96","#4b8696","#e92c96","#61a096","#50c896","#d4cb96","#705496","#748896","#d16696","#deaa96","#786996","#7ccb96","#804196","#5a7396","#496c96","#ed1f96","#65a696","#5d3696","#f1a596","#8a9f96","#803c96","#999796","#902596","#ef6596","#a86996","#35b296","#d63696","#cda096","#e3cc96","#b5b196","#f3e496","#d4dc96","#cf4b96","#f27796","#794d96","#69d396","#50ac96","#8a7a96","#9dd496","#564e96","#af8196","#5c4a96","#de8e96","#f95a96","#353c96","#a02596","#5b5796","#e84296","#96db96","#736396","#43d396","#a55696","#c93696","#b78396","#409a96","#e4d496","#a12996","#588796","#853496","#d76596","#c94b96","#99b896","#88d596","#acb596","#578396","#e83396","#43da96","#9fad96","#ef5596","#8b9396","#3ab796","#9b2e96","#c8d096","#46dd96","#a3d296","#7aa196","#e9ac96","#cddc96","#cb4996","#3f6096","#776696","#7cab96","#44cf96","#5dab96","#eed396","#53dd96","#e3a796","#9d2196","#af6f96","#c42996","#417a96","#6faa96","#f52d96","#7ebf96","#c13b96","#f42596","#9a2096","#aa5696","#d44a96","#c74796","#a62196","#4a3596","#4e3296","#d65a96","#f44c96","#7a9496","#8ba196","#3c5996","#579096","#893896","#c4dc96","#9e3596","#6ba496","#a42996","#99d196","#e86196","#485096","#a3ae96","#b97896","#493496","#b3b596","#5d8e96","#5dce96","#6aca96","#ddac96","#3d9796","#85c596","#d45496","#b62896","#34d596","#a52c96","#c3b996","#493e96","#4f5a96","#de5a96","#aea196","#e15096","#a1d796","#7b9496","#b78796","#f5db96","#63d096","#5c7196","#674796","#714696","#4ccb96","#635d96","#3c2896","#b45b96","#e39096","#6ec196","#3c4f96","#e65396","#df2e96","#411e96","#e3e496","#daa996","#472296","#d62d96","#ba3a96","#5db996","#367896","#d3c796","#5be296","#916a96","#ea8396","#60be96","#832396","#e06c96","#3e5496","#ad6696","#855096","#e76596","#496a96","#7d5e96","#80b896","#9bb696","#4ed596","#7eb396","#e69a96","#9a2296","#f75896","#b7b296","#38ac96","#da6496","#322c96","#f55196","#854d96","#b7dd96","#983996","#5d4596","#bdb696","#a5da96","#8a3b96","#48af96","#add196","#674e96","#8dce96","#4dbd96","#f34a96","#f33996","#78ca96","#672196","#758c96","#a2d896","#8f7b96","#d07b96","#8c5296","#572496","#acce96","#e82b96","#7fba96","#428a96","#c43096","#32d196","#6b6996","#9b8496","#95be96","#a39996","#8a2196","#6e1f96","#574e96","#a56396","#b22496","#d2b896","#417396","#c79796","#f6df96","#f15496","#c96696","#693596","#d93a96","#866d96","#5b2596","#9ee496","#585396","#a2cd96","#d66796","#7d8696","#4e5396","#975b96","#bed696","#896596","#e2da96","#5bce96","#7ce496","#3a6d96","#f26396","#629596","#5bc996","#ad2d96","#e48b96","#d7b196","#be1f96","#ed7996","#8abb96","#607996","#632a96","#e35196","#e23596","#3c6a96","#e2b796","#465896","#e7b696","#403096","#5a5796","#80d596","#4b5b96","#9b2c96","#b7e496","#5b3b96","#7bd196","#39c696","#9ac096","#83cb96","#b6ab96","#9ccd96","#467396","#3a6d96","#a5b596","#854796","#82b696","#a2cf96","#e3d396","#54c096","#4d5496","#718e96","#eda096","#5a5796","#8de496","#364f96","#e6df96","#d97896","#6c2296","#376c96","#81e596","#678096","#735996","#aca396","#a86c96","#55a396","#f75f96","#eb5a96","#879e96","#7ab396","#826a96","#7fcf96","#bc2296","#347c96","#51b696","#9f4596","#649e96","#517596","#9d7596","#ea2196","#ca7a96","#82e396","#a61f96","#48a396","#daba96","#949b96","#92ac96","#417e96","#9d7d96","#976f96","#377f96","#9d3b96","#348596","#7ee296","#d4dc96","#bb8b96","#a76a96","#877296","#d87f96","#3aae96","#9ca596","#b9d396","#3bbc96","#d37796","#5fb196","#bb3396","#926096","#926596","#84b596","#74d696","#ab8096","#623996","#c67996","#e9af96","#97e196","#b53896","#925496","#e08596","#4f2a96","#38b596","#723a96","#a83b96","#ab5e96","#52c996","#ec4896","#cd4996","#7fa696","#dd2496","#bf6696","#b98e96","#91c296","#d98c96","#815196","#9ce196","#d22096","#9fbc96","#6a3496","#cd4d96","#dd6396","#458f96","#63cb96","#9ad996","#545896","#c0db96","#f7cc96","#376196","#ab4796","#9a3096","#e2b496","#d4c396","#cfdc96","#7d7096","#4dd696","#c0b196","#843d96","#873796","#e4bf96","#bcdd96","#37a896","#ca5e96","#e23296","#da4796","#5f2996","#af3d96","#b47696","#c9a196","#72e396","#972296","#de6196","#ac8896","#b2ba96","#543496","#e76a96","#626296","#c14f96","#4ec596","#976c96","#bb2f96","#7d3396","#765c96","#688f96","#c28296","#a09e96","#669196","#d14296","#62da96","#4dca96","#ac8396","#aea396","#e4d596","#aa8896","#c76696","#e94f96","#beb396","#3fbe96","#d4bc96","#7a5a96","#852a96","#8b4d96","#8b5196","#d6c896","#696f96","#495796","#c59596","#aa9496","#eaa096","#d16796","#886d96","#48a196","#5e2996","#547e96","#772896","#4aaa96","#4a7296","#7a6696","#b9a996","#e5e096","#f62b96","#c6bf96","#b68796","#6b3096","#5ba896","#6ec896","#c73296","#aad496","#efc596","#733e96","#767c96","#a86196","#35d896","#abd196","#797596","#873296","#554396","#e9a596","#617196","#89b896","#9e4396","#3a3a96","#4bd496","#663f96","#3b4a96","#a35296","#6cdc96","#4fc596","#419296","#95d296","#3e2b96","#e3a596","#f73d96","#9ad396","#dca396","#d3d796","#49cd96","#8c5496","#3c9e96","#963096","#80b196","#b07c96","#ebbb96","#6db396","#79bf96","#e47096","#9e6896","#57b396","#526596","#4a5196","#d47a96","#f78596","#352596","#d12b96","#8a3a96","#5abf96","#e6d296","#ca8696","#d17a96","#f13396","#3a2596","#605396","#f9b596","#c83196","#bd3b96","#be7096","#38c596","#e34e96","#abc996","#482596","#8c6096","#af7796","#f5a896","#939796","#a43896","#46cb96","#6c5996","#cd4a96","#79a996","#776596","#a9a396","#835c96","#858796","#c74696","#bd9196","#b0e596","#c8af96","#3bb996","#cbc696","#a35996","#efd396","#b06a96","#97d996","#553296","#7adb96","#ce3396","#925696","#7d5596","#693096","#3f5d96","#9e2096","#8f5096","#93ba96","#ba3096","#91c996","#d67596","#88bd96","#705a96","#81e496","#a5e096","#8d4296","#382696","#9c3996","#cdb996","#788d96","#b3c896","#4fe596","#d7db96","#a7aa96","#49b096","#bed196","#8dac96","#5a6196","#5ee296","#bd9a96","#578e96","#3ab196","#4f2496","#ef2496","#3e6896","#5e6596","#48d796","#6b3c96","#a76c96","#977b96","#3e8796","#348996","#795296","#d66c96","#3b9e96","#67e396","#b6c596","#f61f96","#eea496","#be4296","#a24d96","#d15996","#ac4196","#89a496","#d5bd96","#443096","#c7b896","#c7ce96","#3b8096","#6e5f96","#32d396","#c13896","#4d8c96","#8f3c96","#f7ae96","#8d7496","#39c396","#daba96","#4d6e96","#417f96","#4d4d96","#67a296","#37a196","#4f6a96","#f63196","#999196","#95c896","#45bf96","#50b896","#d63d96","#3b7796","#ce7e96","#eb3d96","#88ab96","#7c7796","#525f96","#81b396","#329896","#854996","#d9b596","#e91e96","#3d3e96","#509996","#ee7596","#8ec396","#d0d096","#de8296","#617996","#db2396","#babc96","#3e7f96","#ccc896","#a72f96","#9a5796","#f25996","#a12e96","#e07e96","#dfd596","#35ac96","#da9096","#72db96","#6b7096","#cbcb96","#596296","#84c596","#c81f96","#f96c96","#3c6796","#e4e296","#72b096","#518896","#cc2a96","#328496","#8da696","#c75196","#ac4b96","#4eb596","#865596","#e55c96","#f35e96","#b03596","#dd4996","#803296","#6d3a96","#cf5196","#af3d96","#ab9696","#bb9a96","#a96f96","#727996","#43af96","#794d96","#b0b596","#673a96","#93b696","#739a96","#948396","#4b8596","#494796","#f3c196","#5aa496","#3b7e96","#7b6296","#eada96","#91d096","#72c796","#697796","#788596","#86c796","#a6dc96","#8f4d96","#925b96","#f47996","#e9e296","#464296","#f72a96","#63da96","#44ab96","#c2ce96","#f18396","#80a996","#5a8996","#b3b996","#e4d996","#536596","#66df96","#dddd96","#572a96","#83af96","#7e8896","#582a96","#a08d96","#de3396","#82ae96","#c8d496","#71c296","#ea5896","#9cb396","#becc96","#944c96","#614f96","#ad5496","#56b696","#5a9296","#c63a96","#c57d96","#789a96","#dab996","#8eae96","#3f4696","#bc3296","#5c2496","#af1e96","#b46a96","#5c9c96","#baac96","#d74296","#efc296","#56ad96","#8bde96","#7ba596","#cc9096","#e97196","#b5b796","#ca2f96","#71c896","#544396","#5cd496","#cc8496","#ced096","#695396","#688d96","#a3b596","#c1d296","#b9b296","#f8ab96","#87a996","#f38496","#448b96","#722d96","#3c8d96","#4ab996","#8f9096","#906496","#d47c96","#c96096","#c09296","#9d3696","#6a5e96","#852696","#e42b96","#d97696","#de4896","#f88896","#8fb096","#b82096","#5a5296","#9a8696","#4da896","#967096","#deca96","#b8b796","#632596","#38a196","#6add96","#5ec096","#352496","#7d6996","#5a7396","#aa7596","#e62b96","#d84596","#a1c696","#cee196","#f8e196","#925d96","#c9d896","#d94396","#d8ba96","#d3b396","#8e6096","#ba9196","#dac596","#bc6696","#b1b796","#f14396","#f7e496","#f5d896","#f54196","#389d96","#6d9496","#b4a296","#35d896","#772e96","#714f96","#64c096","#489196","#5b2b96","#3f8396","#7f8896","#8dcd96","#b3ce96","#b66396","#9eb896","#936a96","#8fc496","#e89e96","#b1b796","#edd596","#578596","#49ce96","#352096","#e87996","#3ed396","#6ccd96","#469596","#bad596","#b8da96","#7bd796","#45d696","#e2da96","#4f5d96","#b94796","#8db596","#f7c296","#4b6596","#b75b96","#ed7896","#343996","#f74596","#919696","#ecbf96","#d17f96","#f7be96","#eaad96","#757a96","#e5a696","#7eb496","#f63296","#b6a696","#d48196","#7c9e96","#944d96","#878e96","#7a2196","#a2a796","#cfd296","#ddb896","#d3c396","#bc6096","#479396","#bbd996","#c82896","#d29496","#649696","#edb296","#df4296","#3ac396","#f37396","#c45796","#516396","#417896","#3c6d96","#b53896","#962a96","#357a96","#86d496","#b53d96","#aba396","#6a9696","#d7d096","#a1e596","#d86396","#67b596","#f86196","#989996","#a52796","#798896","#dfe496","#f45c96","#828696","#7e3a96","#545e96","#356596","#575996","#b91e96","#e37796","#e25a96","#824296","#ee3a96","#e4d696","#f96196","#4ba596","#eec596","#ae9296","#552296","#a05696","#bec496","#b98e96","#d02096","#e2be96","#505e96","#4e7296","#e4dd96","#d77896","#466b96","#c6bf96","#64bb96","#a75696","#337696","#334996","#614e96","#72ca96","#a08896","#f7c996","#d28e96","#509296","#ab2996","#e46e96","#51d696","#64d296","#e6c996","#f4a996","#9e2e96","#525696","#8a3c96","#666696","#34b896","#689996","#df7b96","#f6b996","#48d796","#d7a096","#546596","#ef6796","#3b6396","#393c96","#ae6a96","#a4af96","#f13696","#9c2e96","#ad4196","#c1db96","#7ca196","#437d96","#5ede96","#416996","#438096","#f1d696","#cf7a96","#673496","#a2b896","#aaba96","#e69896","#41a796","#8b2896","#be2296","#644496","#efbe96","#c28d96","#4d3196","#c46196","#4a9c96","#499d96","#506d96","#6c8196","#9a4b96","#bf5696","#384996","#ba9496","#3f2496","#3c6096","#eebe96","#7d9096","#c08096","#d92f96","#e58596","#af6d96","#b58c96","#888996","#965b96","#a71f96","#7e6596","#3dc796","#d58496","#9fda96","#e95496","#437996","#b03c96","#6b4a96","#488396","#e45596","#9f7296","#abb396","#7ab496","#457696","#8f3b96","#b7df96","#445e96","#96a696","#76a996","#8d5696","#76cb96","#dee596","#60d396","#35d296","#b56b96","#d47b96","#6e3896","#eb8496","#642e96","#b36a96","#663896","#924396","#e1b596","#818b96","#4c3a96","#669d96","#5cd096","#d9e196","#ecb796","#e6e096","#49dd96","#43b796","#4a3796","#ef2896","#5fa496","#436696","#362796","#f39d96","#9aa096","#6eca96","#f66996","#98e196","#ea4d96","#da3a96","#c73096","#a7a296","#4e9996","#d85696","#93bd96","#3e7496","#8d7096","#81c396","#d2af96","#631f96","#3b4a96","#753896","#604c96","#8ac096","#603996","#71e496","#703196","#c77e96","#3f6996","#773396","#3e7d96","#807296","#445e96","#c58d96","#99d596","#777796","#a45396","#c95596","#e53d96","#cedb96","#ba8596","#db4896","#ca2596","#e0a896","#53cd96","#abcb96","#7daf96","#b67296","#6f4e96","#9f7596","#57ba96","#4e3896","#4ad896","#f94a96","#7bbb96","#7dd996","#758f96","#81de96","#9d7b96","#cbe296","#598a96","#852996","#40a196","#6fc596","#9a7796","#8c3596","#8e6d96","#4a9696","#ba5c96","#47bc96","#447596","#35b396","#cbad96","#d5df96","#57a996","#b5ba96","#a34896","#80be96","#e47f96","#e8b996","#b79996","#8d3a96","#90de96","#3c4796","#972b96","#e0b096","#d76f96","#3eb596","#a48096","#cf5f96","#cf5996","#e68796","#f0dc96","#62ae96","#6b6496","#8e9f96","#a9cb96","#925596","#5b8e96","#82a796","#e86d96","#3a8696","#af7e96","#609396","#73a896","#e36296","#749b96","#cddd96","#d3c596","#69da96","#a4af96","#3a3e96","#a93696","#949996","#f76396","#693a96","#385196","#ddd096","#905296","#e68e96","#ae2896","#7e9696","#6c9396","#bf3696","#94bb96","#58ad96","#405496","#b9e596","#698d96","#5f2c96","#967696","#7c2396","#359696","#5ebe96","#396a96","#e8a096","#40db96","#8b4d96","#6ede96","#42a096","#809896","#8fc196","#5fb396","#c85e96","#d63a96","#678396","#956896","#c39496","#756e96","#ea7e96","#874f96","#bc6896","#dde096","#cc4296","#707996","#c83f96","#e37996","#8d7896","#809c96","#dc9a96","#553596","#34e596","#ca4396","#693b96","#52d696","#c67796","#794f96","#68e096","#7a2b96","#f6cc96","#e24896","#b74096","#f04996","#e24996","#397e96","#6a5196","#612f96","#919296","#dfa596","#85da96","#3e3396","#65a596","#ae4196","#355b96","#bcc896","#f1b696","#8e9996","#57d196","#8a8996","#816996","#beb496","#f1d096","#d46696","#b0cf96","#6f4396","#e36d96","#6d8c96","#c03096","#4bb596","#7de296","#845296","#ae4396","#e76d96","#d8cb96","#e9d096","#d48f96","#975b96","#af9996","#879b96","#d92b96","#e37d96","#c1cc96","#528496","#c62d96","#35cb96","#a2db96","#6faa96","#865796","#8dd196","#a5da96","#e16596","#376c96","#dfca96","#cf6696","#99c796","#ec6296","#3f3e96","#eac596","#635696","#9d6796","#8bad96","#6c7296","#8aa896","#f13496","#eebe96","#36ae96","#e73696","#8f3196","#5be496","#b79296","#726896","#ea7d96","#5db096","#825296","#8cc696","#505c96","#b57596","#de7f96","#534c96","#cb8e96","#b16d96","#752996","#705a96","#b7d496","#876996","#a01f96","#b1d096","#823596","#5a5296","#9ecd96","#eed796","#59ad96","#81cc96","#efb396","#dfdf96","#5d5596","#3cd296","#8fce96","#a05296","#e5d896","#4e6296","#597096","#b46496","#bf6696","#b29f96","#9a2996","#622496","#338e96","#394b96","#563d96","#e9b696","#972a96","#d32496","#5f4b96","#e19d96","#678696","#ca3496","#c96d96","#e5aa96","#65c496","#89b296","#afc796","#c55896","#ae8796","#876696","#f19e96","#daa696","#625496","#816f96","#b85c96","#a45296","#89dd96","#663c96","#e36b96","#483796","#c3a196","#c2d596","#66b796","#976596","#78d796","#3c4b96","#c22796","#df9f96","#efbe96","#39c696","#be7596","#67de96","#a5ce96","#9c5f96","#e74496","#5a8e96","#9da396","#ef5896","#848496","#5b7496","#8a2496","#b39f96","#f7df96","#909c96","#9e5f96","#b84596","#c27796","#df2396","#712e96","#d06296","#ccd096","#e03396","#c25296","#e76d96","#9f4096","#f4af96","#dfc396","#483096","#d99196","#ce9c96","#ac4b96","#e44496","#3a4296","#705d96","#839496","#5dd396","#6f4996","#6dc596","#74d096","#927b96","#d76896","#583a96","#efbd96","#7b5c96","#53b596","#f8ce96","#b33196","#c64796","#956596","#48d396","#3c3a96","#eb7096","#344096","#d07a96","#e92396","#b2a896","#892d96","#832396","#9e2d96","#b34596","#3de496","#89dc96","#c3be96","#84d596","#e82b96","#653796","#935896","#9abd96","#d25c96","#5f8f96","#98a696","#b1b396","#795c96","#e18d96","#377496","#ac3d96","#7a9296","#39b696","#ee3596","#466596","#8e9c96","#d5ab96","#67e596","#3b5896","#3bac96","#6ecf96","#e73796","#56d196","#e5e596","#959796","#503a96","#496296","#cb8e96","#6f8596","#6cb496","#ab4c96","#3b5696","#682796","#8b4696","#9b3e96","#ea7d96","#f07996","#a02a96","#b31f96","#516b96","#eba496","#9abb96","#d37496","#d08296","#598a96","#ba7a96","#f9a996","#bbe596","#a55196","#62bf96","#67e396","#cf7796","#7d7896","#e61e96","#af2296","#4f8c96","#6ead96","#8ba196","#4f4996","#5f8796","#6fa796","#f74396","#7d4e96","#866396","#a1d096","#b24196","#6f2396","#f72896","#4ee396","#ea6b96","#569996","#8e9c96","#dc6696","#c3b096","#49d596","#a48496","#4caa96","#6a6496","#f68c96","#6d9896","#347696","#807f96","#402696","#755196","#3f3f96","#5a2096","#aedb96","#622a96","#a03596","#4a5e96","#3a3796","#8e6496","#a48a96","#e8a196","#e99b96","#b48a96","#c52096","#80c396","#c67996","#c9b696","#ada396","#69a396","#46ae96","#a6da96","#484b96","#67df96","#c65a96","#ecde96","#f8d996","#b9d996","#d76296","#35ce96","#4cb396","#cb7696","#747296","#f79b96","#4e8196","#f13196","#ef7d96","#e85796","#7d2e96","#738296","#367096","#3bb596","#342596","#b8c796","#eb4f96","#654296","#bcc196","#535196","#3e4f96","#98e596","#7cc896","#e87696","#a5e596","#b1d596","#717d96","#e4d796","#a5b696","#67e196","#a0d796","#338796","#969596","#8e4096","#c07b96","#eddc96","#7e6896","#f7b596","#536796","#952796","#dac196","#4c5096","#63c996","#3b2796","#b87696","#386596","#d2c696","#8c7096","#cf6d96","#971f96","#4a3696","#708096","#a05a96","#b85896","#95be96","#d3cb96","#ad6a96","#58b596","#db9c96","#574e96","#e08796","#b43896","#acbc96","#ef3c96","#622096","#b52b96","#99ae96","#405f96","#b8cc96","#4f7296","#cb6b96","#9c6e96","#a85796","#e65496","#f75f96","#ed8696","#54bf96","#618496","#4e4d96","#d36c96","#c29f96","#4d2896","#a47496","#c9b796","#b33e96","#62e296","#dd9c96","#be7c96","#6dc696","#62bb96","#d28f96","#f77196","#eb2896","#f56696","#6a7696","#d24196","#59d096","#409996","#e42b96","#a1d096","#8ce596","#d92d96","#cccc96","#a42896","#76c496","#a5bd96","#677e96","#ad9396","#52a996","#76d896","#86bc96","#d47296","#bc7b96","#4b8196","#64d596","#473396","#6a9c96","#6d2396","#72c796","#e0d696","#925496","#bf6096","#5c2296","#b95e96","#e0c796","#f0ce96","#ad9d96","#9c2996","#717e96","#db6496","#e19496","#86c796","#4c9996","#33b596","#c2ae96","#3aa496","#356a96","#7cae96","#f6a896","#384e96","#bad196","#444596","#732796","#65c796","#6b9896","#625396","#81af96","#81bf96","#cf7a96","#63dc96","#d74096","#c2cd96","#873996","#f97096","#70c196","#ab4296","#f73496","#b58f96","#83e396","#623d96","#33c096","#8fab96","#dead96","#bce196","#ae5796","#66b296","#bd7e96","#9d8996","#756f96","#43ba96","#a78696","#a8c496","#47ce96","#5f7d96","#bd4596","#523296","#7ee296","#899596","#682796","#529296","#918796","#becf96","#f49096","#8bb996","#f0be96","#b89196","#bc3c96","#7ed696","#7e4896","#afc596","#cc2b96","#397f96","#e7c196","#c9c496","#a4bf96","#938596","#7e3096","#99d196","#3cd796","#4c7096","#526b96","#c18796","#f8d996","#49b196","#512a96","#e6d996","#a04c96","#ed9696","#769c96","#5e4696","#6b9296","#627196","#c8b596","#549996","#d0db96","#4a3a96","#ddb296","#43dd96","#7c8996","#aa2c96","#e7c196","#a0c396","#6cb196","#67d596","#4f3a96","#df6c96","#e06d96","#9c2396","#bf7a96","#c3ad96","#be4096","#409296","#d48996","#c26996","#8bcb96","#e68496","#92c496","#bf6c96","#5e2d96","#d38296","#65b296","#5d6c96","#334696","#723c96","#a45e96","#83e596","#48e396","#9ad896","#8c8b96","#a62b96","#cc8696","#5a6296","#7b8396","#332c96","#d8b396","#638b96","#f89696","#62c096","#9ec796","#72be96","#7ca296","#913a96","#ad2696","#b4c596","#a98596","#8d4c96","#6d6196","#424e96","#58bb96","#ac5496","#f1cf96","#d42796","#f56c96","#46dd96","#c77296","#dc3296","#6dad96","#354c96","#3b8e96","#a5bf96","#998096","#e4bc96","#734e96","#a3a396","#48ca96","#ac6b96","#cfc796","#c16196","#b55096","#aacb96","#cbe496","#a3ce96","#73ad96","#b5ca96","#78c796","#8d2496","#d28996","#53e396","#986096","#445a96","#dcbf96","#dbaf96","#7b4196","#b8c996","#455196","#398396","#53be96","#ca5b96","#f88c96","#35bf96","#88a296","#ee3596","#e5c896","#e97996","#536096","#618196","#b8ae96","#f52596","#b28396","#9d9896","#9c9896","#ed6396","#cd2596","#c97796","#a8e496","#eab496","#d7df96","#ce9e96","#9d7396","#b32496","#ee5c96","#da2896","#baa296","#5ea896","#cc2f96","#896c96","#c76d96","#3b4f96","#aa6296","#ebbf96","#3d2296","#ed7a96","#b5a496","#3bd496","#365b96","#b34c96","#802296","#f99296","#e8a796","#a52996","#49cb96","#e05396","#db8696","#836a96","#9b3b96","#674e96","#bc7b96","#ae2696","#d1a796","#b08c96","#6d2796","#e0c396","#ae5796","#904296","#527996","#936e96","#4fbc96","#f09696","#e4b096","#8eda96","#a53b96","#b38796","#d15396","#dc9d96","#348396","#f7a796","#52bf96","#3cd596","#a59c96","#9bda96","#f73396","#a5d796","#be6796","#c28496","#a43c96","#644596","#3cb396","#902796","#a66f96","#c36696","#aa5996","#972396","#d0ca96","#967a96","#b1a196","#427796","#5a9b96","#865696","#95d696","#7c8b96","#cc4f96","#6ce296","#e8c796","#852096","#32de96","#5e8d96","#a7d396","#872496","#5f6596","#d0c396","#7a3296","#e62296","#a0cf96","#a15796","#7cd696","#98dc96","#f5c696","#dbda96","#766996","#b03796","#f96696","#724f96","#93bd96","#ab7696","#549996","#d8b296","#e38496","#556496","#c95c96","#e04096","#803d96","#93b996","#ce9896","#895696","#32a296","#b4a396","#344596","#902496","#907496","#de9f96","#837696","#d57496","#d97596","#f23d96","#d8df96","#ef6396","#5a6f96","#9d8e96","#c58d96","#ea7a96","#df8a96","#51bb96","#532a96","#7c7a96","#d25296","#c38f96","#965c96","#60e396","#b77696","#c2e596","#f12496","#559a96","#a29c96","#75e596","#6dd996","#968f96","#b65d96","#b2ca96","#52d296","#b4bd96","#707d96","#385696","#7a7396","#cfb396","#3d2b96","#556696","#79a696","#803096","#5e9496","#eb8a96","#8d6096","#ecd096","#c8b596","#46dd96","#d9c896","#779c96","#ec4b96","#d36096","#d07b96","#488896","#f36a96","#c21e96","#907796","#846196","#7acb96","#d3a096","#447396","#d2ab96","#5ae196","#a32896","#487096","#87c196","#c02196","#436c96","#e44496","#8a2796","#cdb396","#b64e96","#bcb496","#d32396","#644196","#701f96","#6a9d96","#c97796","#34ab96","#48d496","#f42596","#804396","#a67896","#d67796","#8a3896","#d83e96","#ee5996","#c9df96","#a38196","#bb6a96","#7a4396","#d59896","#977196","#92a696","#6eb996","#f36996","#f0df96","#33ba96","#82da96","#ce8c96","#dd5d96","#356a96","#385696","#384f96","#33a096","#53d396","#6e7d96","#d15796","#e88a96","#a8a696","#92b996","#857b96","#73b696","#b9a296","#614796","#e6c696","#d85a96","#ba4796","#accd96","#d39b96","#513496","#787996","#b4da96","#bda596","#57d596","#d35a96","#94b696","#f8a796","#4b4a96","#a12996","#3f7f96","#f6e396","#584f96","#3c5696","#3aa196","#4fa396","#a4b196","#a53a96","#d06a96","#835f96","#456a96","#cb9f96","#d94d96","#d4df96","#42b296","#79c396","#ca2096","#524896","#b57396","#409296","#b7b096","#4fd496","#b54596","#426196","#647796","#e57896","#6d8d96","#dd7696","#a46096","#ed7396","#695496","#6dcb96","#c0a796","#608396","#b0ce96","#352a96","#9b1f96","#789696","#ac2d96","#4c8696","#7d3896","#469696","#805996","#d3bf96","#de5796","#d53e96","#cdc296","#dbd696","#c65996","#b22b96","#5f2096","#9d7b96","#e0a196","#c1c096","#cc9196","#789196","#3dd996","#3ce296","#3bcd96","#a68596","#7ab996","#cbb096","#a2b596","#4a4b96","#406796","#f96696","#ddc896","#d86e96","#e18096","#7fcc96","#c7c596","#867696","#c1a496","#b33096","#e0d596","#743e96","#a0b096","#de2f96","#373696","#8c3496","#a14f96","#b7d296","#bc8a96","#4b3f96","#49c296","#e64396","#bf3096","#362396","#9fa096","#5c7296","#deb896","#b3ad96","#e4d396","#3e4096","#327d96","#6f3896","#826596","#6f2196","#c65696","#596696","#584696","#6fc196","#992396","#b98e96","#c1e296","#995396","#695696","#942e96","#928d96","#b6d696","#6cb196","#c63c96","#bb7196","#bcb796","#d13c96","#792d96","#dab896","#90ba96","#89e196","#e3c096","#ea7796","#55c096","#3da496","#ba2196","#9ba896","#d33196","#58b096","#584196","#568b96","#a4b396","#424396","#a75096","#a57c96","#4f7096","#b68696","#64ca96","#bb1f96","#b05896","#f02296","#96bf96","#3a3096","#cdd796","#cdb496","#75a296","#46ab96","#a04596","#54e496","#7daa96","#6f9796","#84d796","#d3d496","#e8d296","#e95596","#d21e96","#922796","#a48396","#af7f96","#c24696","#60d896","#95c696","#ad5396","#d1ac96","#8b4896","#86b596","#85e296","#4d4c96","#69e496","#afa596","#8aaa96","#dd2296","#662f96","#8fdf96","#535596","#477c96","#abd696","#da4396","#5dcc96","#e09f96","#3a6396","#67e296","#4b8d96","#e4c496","#d4e296","#e34096","#ac9696","#c95496","#733f96","#be4c96","#652496","#5cbe96","#e7dd96","#6b4696","#8ec396","#49cf96","#b8cc96","#c9ac96","#d54596","#733996","#4c3596","#c9ce96","#e1b296","#ab9696","#dc8396","#35d396","#d4c596","#a4d696","#a08c96","#646596","#7d2096","#968896","#f62e96","#495b96","#669d96","#402a96","#613e96","#ebb496","#72aa96","#8d4296","#b82b96","#c4e196","#614a96","#951e96","#e0c496","#d8b896","#d11f96","#d08496","#c36d96","#b7a496","#369996","#4f4696","#e8d596","#7c3796","#a86e96","#b57296","#bf2e96","#ec5396","#492296","#b17396","#c75396","#85aa96","#a3a096","#f9a596","#682196","#e26d96","#427a96","#a72196","#937696","#953596","#488a96","#589396","#9d3c96","#b92896","#3e9796","#c62796","#682296","#947e96","#9f6796"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}},"selected":{"id":"ff5141d2-8f1b-4430-9b4e-fa6599cb20d5","type":"Selection"},"selection_policy":{"id":"3310d581-36cf-46fb-8596-a09f5c2b5724","type":"UnionRenderers"}},"id":"b9287222-db62-4a68-a178-135924e81b9b","type":"ColumnDataSource"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"f910e061-c2be-49ef-95ff-ed1933524d2f","type":"Circle"},{"attributes":{"below":[{"id":"9e12edf4-17df-4840-ae72-8ee42103d100","type":"LinearAxis"}],"js_event_callbacks":{"doubletap":[{"id":"a69dd64c-0e4e-4271-bc3a-dfbd6693773b","type":"CustomJS"}],"lodend":[{"id":"7b3accf0-257a-4ee5-b50f-e60c369b4871","type":"CustomJS"}],"lodstart":[{"id":"d74ab214-b12f-4962-85e1-07a991b4c537","type":"CustomJS"}],"mouseenter":[{"id":"ec1a0f02-1ddf-47c6-bec7-f4f0ec5a6d28","type":"CustomJS"}],"mouseleave":[{"id":"05c7090a-0d92-45d3-8cf9-97e2011a19c0","type":"CustomJS"}],"mousemove":[{"id":"edef48bc-eff3-496f-8457-200f2b8ac4b9","type":"CustomJS"}],"pan":[{"id":"df9cc861-b312-4039-8c02-db4a4e8e8d41","type":"CustomJS"}],"panend":[{"id":"71b45ba8-2263-4315-9837-0a6c4d3beaf6","type":"CustomJS"}],"panstart":[{"id":"7b02b9f0-18fd-4a5c-a1a3-3b3cf1d3506e","type":"CustomJS"}],"pinch":[{"id":"ed2849a1-4fce-4eb5-af2e-7ce4c0708b2a","type":"CustomJS"}],"pinchend":[{"id":"dcb9e441-7fb8-40eb-b834-869c88274861","type":"CustomJS"}],"pinchstart":[{"id":"3e4f974e-84db-4415-bf9a-1667c5c2d315","type":"CustomJS"}],"press":[{"id":"7549a749-6172-4f60-b446-265b4b05bb3e","type":"CustomJS"}],"tap":[{"id":"e61a0791-8e88-46df-b919-1b7703d54a82","type":"CustomJS"}],"wheel":[{"id":"edcadc7b-0b14-42fc-97be-86e55524f8c3","type":"CustomJS"}]},"left":[{"id":"001ea795-43be-4a23-b3bb-2e93d8488fbf","type":"LinearAxis"}],"renderers":[{"id":"9e12edf4-17df-4840-ae72-8ee42103d100","type":"LinearAxis"},{"id":"9bdb5b59-5086-44b3-be0d-c705000e7c52","type":"Grid"},{"id":"001ea795-43be-4a23-b3bb-2e93d8488fbf","type":"LinearAxis"},{"id":"77a01e5d-2c2e-47da-a3eb-8c96bae25ac2","type":"Grid"},{"id":"a058bb9c-e448-4ba2-ba80-1b8aeaaf2a9f","type":"GlyphRenderer"}],"title":{"id":"79fd281b-1844-4207-84ab-17204a231fd9","type":"Title"},"toolbar":{"id":"5da76a90-8725-45c3-943a-d29f51f39de1","type":"Toolbar"},"x_range":{"id":"28826f71-82a5-4478-8bbd-8ebeea2d916f","type":"DataRange1d"},"x_scale":{"id":"5eeb6eb5-be3d-4b6c-924d-2ffaac5d92d2","type":"LinearScale"},"y_range":{"id":"11b31021-feea-4f96-9ba0-12fadcd9a0a0","type":"DataRange1d"},"y_scale":{"id":"f06df174-9bec-495d-92ea-33a259e1e398","type":"LinearScale"}},"id":"216baf6d-73da-4468-b311-f868de61e530","subtype":"Figure","type":"Plot"},{"attributes":{"callback":null},"id":"11b31021-feea-4f96-9ba0-12fadcd9a0a0","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"71b45ba8-2263-4315-9837-0a6c4d3beaf6","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"3e4f974e-84db-4415-bf9a-1667c5c2d315","type":"CustomJS"},{"attributes":{},"id":"5eeb6eb5-be3d-4b6c-924d-2ffaac5d92d2","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"dcb9e441-7fb8-40eb-b834-869c88274861","type":"CustomJS"},{"attributes":{},"id":"f06df174-9bec-495d-92ea-33a259e1e398","type":"LinearScale"},{"attributes":{"plot":null,"text":""},"id":"79fd281b-1844-4207-84ab-17204a231fd9","type":"Title"},{"attributes":{"plot":{"id":"216baf6d-73da-4468-b311-f868de61e530","subtype":"Figure","type":"Plot"},"ticker":{"id":"4f52cddd-3437-44e5-8e97-f035449f44de","type":"BasicTicker"}},"id":"9bdb5b59-5086-44b3-be0d-c705000e7c52","type":"Grid"},{"attributes":{"args":{"div":{"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;scale&#x27;]; var args = [];\\n        for (var i = 0; i&lt;attrs.length; i++) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=10pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if (lines.length &gt; 35)\\n            lines.shift();\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"ed2849a1-4fce-4eb5-af2e-7ce4c0708b2a","type":"CustomJS"},{"attributes":{"formatter":{"id":"51de875a-1fd7-4648-842c-eff7c5b07e8c","type":"BasicTickFormatter"},"plot":{"id":"216baf6d-73da-4468-b311-f868de61e530","subtype":"Figure","type":"Plot"},"ticker":{"id":"4f52cddd-3437-44e5-8e97-f035449f44de","type":"BasicTicker"}},"id":"9e12edf4-17df-4840-ae72-8ee42103d100","type":"LinearAxis"},{"attributes":{},"id":"4f52cddd-3437-44e5-8e97-f035449f44de","type":"BasicTicker"},{"attributes":{},"id":"3310d581-36cf-46fb-8596-a09f5c2b5724","type":"UnionRenderers"},{"attributes":{"formatter":{"id":"72f1e003-27dc-44b3-b9a1-81ecbc8663b0","type":"BasicTickFormatter"},"plot":{"id":"216baf6d-73da-4468-b311-f868de61e530","subtype":"Figure","type":"Plot"},"ticker":{"id":"8266ef7b-f9d1-4fb2-a9f5-1eebf2b82c7e","type":"BasicTicker"}},"id":"001ea795-43be-4a23-b3bb-2e93d8488fbf","type":"LinearAxis"},{"attributes":{},"id":"51de875a-1fd7-4648-842c-eff7c5b07e8c","type":"BasicTickFormatter"},{"attributes":{},"id":"8266ef7b-f9d1-4fb2-a9f5-1eebf2b82c7e","type":"BasicTicker"},{"attributes":{},"id":"72f1e003-27dc-44b3-b9a1-81ecbc8663b0","type":"BasicTickFormatter"},{"attributes":{"dimension":1,"plot":{"id":"216baf6d-73da-4468-b311-f868de61e530","subtype":"Figure","type":"Plot"},"ticker":{"id":"8266ef7b-f9d1-4fb2-a9f5-1eebf2b82c7e","type":"BasicTicker"}},"id":"77a01e5d-2c2e-47da-a3eb-8c96bae25ac2","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"fb698c9e-c06f-400f-a6b3-74b330af22e6","type":"Circle"},{"attributes":{},"id":"ff5141d2-8f1b-4430-9b4e-fa6599cb20d5","type":"Selection"},{"attributes":{"width":1000},"id":"d6b48e7a-9005-4c67-9612-c7a9cb53e740","type":"Div"},{"attributes":{"source":{"id":"b9287222-db62-4a68-a178-135924e81b9b","type":"ColumnDataSource"}},"id":"d7cc5934-1da5-4a79-82f3-375a93e2b6dd","type":"CDSView"},{"attributes":{},"id":"b239eafd-11f9-424d-b5df-f1e6c35e1da8","type":"PanTool"},{"attributes":{"data_source":{"id":"b9287222-db62-4a68-a178-135924e81b9b","type":"ColumnDataSource"},"glyph":{"id":"f910e061-c2be-49ef-95ff-ed1933524d2f","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"fb698c9e-c06f-400f-a6b3-74b330af22e6","type":"Circle"},"selection_glyph":null,"view":{"id":"d7cc5934-1da5-4a79-82f3-375a93e2b6dd","type":"CDSView"}},"id":"a058bb9c-e448-4ba2-ba80-1b8aeaaf2a9f","type":"GlyphRenderer"},{"attributes":{},"id":"909d475e-76af-43f6-8f41-644be63e3cf4","type":"WheelZoomTool"},{"attributes":{},"id":"642aad91-243b-4f5f-b510-6dde676237a1","type":"ZoomInTool"},{"attributes":{},"id":"5ca1ca4f-2d2c-43d8-810e-95b2a4cdd46d","type":"ZoomOutTool"},{"attributes":{},"id":"782d8c59-18a6-4d57-800f-13ed4421c698","type":"ResetTool"}],"root_ids":["ca667a1d-2c4e-470b-b028-4e7c9afd11bb"]},"title":"Bokeh Application","version":"0.12.16"}}';
                  var render_items = [{"docid":"46b52bf0-3f58-4805-bccf-aed3ed6d2268","elementid":"05f12b48-f37d-4e34-8f3d-f9d00b0d8c4f","modelid":"ca667a1d-2c4e-470b-b028-4e7c9afd11bb"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.16.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.16.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.16.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.16.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.16.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.16.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();