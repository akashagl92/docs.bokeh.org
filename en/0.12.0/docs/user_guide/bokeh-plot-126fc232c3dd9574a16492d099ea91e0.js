document.addEventListener("DOMContentLoaded", function(event) {
    
    (function(global) {
      function now() {
        return new Date();
      }
    
      if (typeof (window._bokeh_onload_callbacks) === "undefined") {
        window._bokeh_onload_callbacks = [];
      }
    
      function run_callbacks() {
        window._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        delete window._bokeh_onload_callbacks
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        window._bokeh_onload_callbacks.push(callback);
        if (window._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        window._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            window._bokeh_is_loading--;
            if (window._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("70595d35-462b-40ce-a66b-735968211a89");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '70595d35-462b-40ce-a66b-735968211a89' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ['https://cdn.bokeh.org/bokeh/release/bokeh-0.12.0.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.0.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-compiler-0.12.0.min.js'];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          
          (function outer(modules, cache, entry) {
            if (typeof Bokeh !== "undefined") {
              for (var name in modules) {
                var module = modules[name];
          
                if (typeof(module) === "string") {
                  try {
                    coffee = Bokeh.require("coffee-script")
                  } catch (e) {
                    throw new Error("Compiler requested but failed to import. Make sure bokeh-compiler(-min).js was included.")
                  }
          
                  function compile(code) {
                    var body = coffee.compile(code, {bare: true, shiftLine: true});
                    return new Function("require", "module", "exports", body);
                  }
          
                  modules[name] = [compile(module), {}];
                }
              }
          
              for (var name in modules) {
                Bokeh.require.modules[name] = modules[name];
              }
          
              for (var i = 0; i < entry.length; i++) {
                Bokeh.Models.register_locations(Bokeh.require(entry[i]));
              }
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })({
           "custom/main":[function(require,module,exports){
             module.exports = { Custom: require("custom/custom"),
          DrawTool: require("custom/draw_tool"),
          MyFormatter: require("custom/my_formatter"),
          Surface3d: require("custom/surface3d") };
           }, {}],
           "custom/custom": "\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\nclass CustomView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    @render()\n\n    # Set Backbone listener so that when the Bokeh slider has a change\n    # event, we can process the new data\n    @listenTo(@model.slider, \'change\', () => @render())\n\n  render: () ->\n    # Backbone Views create <div> elements by default, accessible as @$el.\n    # Many Bokeh views ignore this default <div>, and instead do things\n    # like draw to the HTML canvas. In this case though, we change the\n    # contents of the <div>, based on the current slider value.\n    @$el.html(\"<h1>#{ @model.text }: #{ @model.slider.value }</h1>\")\n    @$(\'h1\').css({ \'color\': \'#686d8e\', \'background-color\': \'#2a3153\' })\n\nclass Custom extends LayoutDOM.Model\n\n  # If there is an associated view, this is boilerplate.\n  default_view: CustomView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Custom\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. bokeh.core.properties.String will be\n  # p.String in the JS implementation. Where the JS type system is not yet\n  # as rich, you can use p.Any as a \"wildcard\" property type.\n  @define {\n    text:   [ p.String ]\n    slider: [ p.Any    ]\n  }\n\n# This is boilerplate. Every implementation should export a Model\n# and (when applicable) also a View.\nmodule.exports =\n  Model: Custom\n  View: CustomView\n",
          "custom/draw_tool": "\np = require \"core/properties\"\nGestureTool = require \"models/tools/gestures/gesture_tool\"\n\nclass DrawToolView extends GestureTool.View\n\n  # this is executed when the pan/drag event starts\n  _pan_start: (e) ->\n    @model.source.data = {x: [], y: []}\n\n  # this is executed on subsequent mouse/touch moves\n  _pan: (e) ->\n    frame = @plot_model.frame\n    canvas = @plot_view.canvas\n\n    vx = canvas.sx_to_vx(e.bokeh.sx)\n    vy = canvas.sy_to_vy(e.bokeh.sy)\n    if not frame.contains(vx, vy)\n      return null\n\n    x = frame.get(\'x_mappers\').default.map_from_target(vx)\n    y = frame.get(\'y_mappers\').default.map_from_target(vy)\n\n    @model.source.data.x.push(x)\n    @model.source.data.y.push(y)\n    @model.source.trigger(\'change\')\n\n  # this is executed then the pan/drag ends\n  _pan_end: (e) -> return null\n\nclass DrawTool extends GestureTool.Model\n  default_view: DrawToolView\n  type: \"DrawTool\"\n\n  tool_name: \"Drag Span\"\n  icon: \"bk-tool-icon-lasso-select\"\n  event_type: \"pan\"\n  default_order: 12\n\n  @define { source: [ p.Instance ] }\n\nmodule.exports =\n  Model: DrawTool\n  View: DrawToolView\n",
          "custom/my_formatter": "\nTickFormatter = require \"models/formatters/tick_formatter\"\n\nclass MyFormatter extends TickFormatter.Model\n  type: \"MyFormatter\"\n\n  # TickFormatters should implement this method, which accepts a lisst\n  # of numbers (ticks) and returns a list of strings\n  doFormat: (ticks) ->\n    # format the first tick as-is\n    formatted = [\"#{ticks[0]}\"]\n\n    # format the remaining ticks as a difference from the first\n    for i in [1...ticks.length]\n       formatted.push(\"+#{(ticks[i]-ticks[0]).toPrecision(2)}\")\n\n    return formatted\n\nmodule.exports =\n  Model: MyFormatter\n",
          "custom/surface3d": "\n# This file contains the JavaScript (CoffeeScript) implementation\n# for a Bokeh custom extension. The \"surface3d.py\" contains the\n# python counterpart.\n#\n# This custom model wraps one part of the third-party vis.js library:\n#\n#     http://visjs.org/index.html\n#\n# Making it easy to hook up python data analytics tools (NumPy, SciPy,\n# Pandas, etc.) to web presentations using the Bokeh server.\n\n# These \"require\" lines are similar to python \"import\" statements\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\n# This defines some default options for the Graph3d feature of vis.js\n# See: http://visjs.org/graph3d_examples.html for more details.\nOPTIONS =\n  width:  \'600px\'\n  height: \'600px\'\n  style: \'surface\'\n  showPerspective: true\n  showGrid: true\n  keepAspectRatio: true\n  verticalRatio: 1.0\n  legendLabel: \'stuff\'\n  cameraPosition:\n    horizontal: -0.35\n    vertical: 0.22\n    distance: 1.8\n\n# To create custom model extensions that will render on to the HTML canvas\n# or into the DOM, we must create a View subclass for the model. Currently\n# Bokeh models and views are based on BackBone. More information about\n# using Backbone can be found here:\n#\n#     http://backbonejs.org/\n#\n# In this case we will subclass from the existing BokehJS ``LayoutDOM.View``,\n# corresponding to our\nclass Surface3dView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    url = \"https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js\"\n    $.getScript(url).done(@_init)\n\n  # NOTE: we have to use the \"fat arrow\" => here so that \"this\" is bound correctly\n  _init: () =>\n    # Create a new Graph3s using the vis.js API. This assumes the vis.js has\n    # already been loaded (e.g. in a custom app template). In the future Bokeh\n    # models will be able to specify and load external scripts automatically.\n    #\n    # Backbone Views create <div> elements by default, accessible as @$el. Many\n    # Bokeh views ignore this default <div>, and instead do things like draw\n    # to the HTML canvas. In this case though, we use the <div> to attach a\n    # Graph3d to the DOM.\n    @_graph = new vis.Graph3d(@$el[0], @get_data(), OPTIONS)\n\n    # Set Backbone listener so that when the Bokeh data source has a change\n    # event, we can process the new data\n    @listenTo(@model.data_source, \'change\', () =>\n        @_graph.setData(@get_data())\n    )\n\n  # This is the callback executed when the Bokeh data has an change. Its basic\n  # function is to adapt the Bokeh data source to the vis.js DataSet format.\n  get_data: () ->\n    data = new vis.DataSet()\n    source = @model.data_source\n    for i in [0...source.get_length()]\n      data.add({\n        x:     source.get_column(@model.x)[i]\n        y:     source.get_column(@model.y)[i]\n        z:     source.get_column(@model.z)[i]\n        style: source.get_column(@model.color)[i]\n      })\n    return data\n\n# We must also create a corresponding JavaScript Backbone model sublcass to\n# correspond to the python Bokeh model subclass. In this case, since we want\n# an element that can position itself in the DOM according to a Bokeh layout,\n# we subclass from ``LayoutDOM.model``\nclass Surface3d extends LayoutDOM.Model\n\n  # This is usually boilerplate. In some cases there may not be a view.\n  default_view: Surface3dView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Surface3d\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. ``bokeh.core.properties.String`` will be\n  # ``p.String`` in the JS implementatin. Where the JS type system is not yet\n  # as rich, you can use ``p.Any`` as a \"wildcard\" property type.\n  @define {\n    x:           [ p.String           ]\n    y:           [ p.String           ]\n    z:           [ p.String           ]\n    color:       [ p.String           ]\n    data_source: [ p.Instance         ]\n  }\n\n# This is boilerplate. Every implementation should \"export\" a ``Model``\n# and (when applicable) also a ``View``.\nmodule.exports =\n  Model: Surface3d\n  View: Surface3dView\n"
          }, {}, ["custom/main"]);
        },
        
        function(Bokeh) {
          Bokeh.$(function() {
              var docs_json = {"60e68a5e-855c-4831-813c-441b35593863":{"roots":{"references":[{"attributes":{},"id":"2a62cf92-22f8-4814-824f-07de6d8187f7","type":"BasicTicker"},{"attributes":{"formatter":{"id":"8b80bf8c-ca21-4da3-965f-8d2c41fd21da","type":"BasicTickFormatter"},"plot":{"id":"cb07f8f1-2952-47b7-9e52-8ac07dae3198","subtype":"Figure","type":"Plot"},"ticker":{"id":"2d34290d-3bcf-4720-9ac4-c9ff76aa006a","type":"BasicTicker"}},"id":"37edee6b-6ba0-4f8e-b303-efbe765c912f","type":"LinearAxis"},{"attributes":{"callback":{"id":"d47e4a67-b1fc-4faa-96a8-d3bbff9dfb5a","type":"CustomJS"},"column_names":["color","y","x"],"data":{"color":["navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy","navy"],"x":[0.40548481804954084,0.7479023609099876,0.45201432454499,0.13930541226022464,0.888897086739492,0.6376057266265887,0.13835563142057528,0.6265269727476498,0.4707686128298916,0.5510245536294314,0.7055766556559364,0.17438597155718005,0.14115075584690673,0.4232800633149061,0.5791355765232363,0.5142997015082249,0.08452367750582979,0.6698512728594553,0.42507343425119215,0.06583587928320056,0.1456113748390312,0.7150087672407698,0.4672106747788004,0.14079295192271268,0.8112615269228075,0.09191013181156082,0.3438399104574049,0.7419363355620222,0.8401514647586911,0.8067147843484012,0.03840284017634177,0.8355113231061131,0.2761088827266258,0.1895024661688236,0.9565490764181495,0.380836303433597,0.13083926846457816,0.2163888981485429,0.21282942064846277,0.38062327170551,0.18398988708227304,0.4915053579892007,0.8913600728654825,0.1433817120274017,0.011802179015007352,0.26526717629426855,0.6854967011002799,0.039338930458998944,0.24133303936344896,0.7060020463972535,0.044037308020433374,0.17325693752641635,0.7144679128105276,0.054267734666466505,0.23742100070397332,0.5606055619704273,0.3647439897407464,0.1175096270973548,0.9867090310604784,0.13772440875884884,0.18174612321544126,0.10294250786219816,0.03708944254842195,0.9804118439072769,0.47474205048000384,0.07825000705761509,0.34334288371826094,0.8541335754001608,0.08542902532059737,0.4176026038823072,0.6803218726446013,0.78589054147598,0.9529712475521571,0.4790613800771064,0.5729946311686815,0.7408234390906179,0.42720269872711836,0.8812597302760525,0.4081342685193735,0.6773029580703837,0.07865094995122612,0.12191433639896221,0.9963157167324715,0.5207766632207632,0.9783377269837595,0.018879521976865044,0.7612457205870615,0.5281965879006766,0.8734776702212655,0.2964987156085671,0.3710046172274083,0.6284963246842264,0.0020200525841013173,0.8690459566621794,0.0941397760996181,0.7789551130262359,0.7471162519201467,0.5276781722130736,0.8096113504255751,0.7134963129793556,0.5667054694763722,0.24368388650171224,0.10081449741736681,0.65116232195289,0.3903838799010373,0.17316414067641983,0.7090226810048963,0.595932898736348,0.24398319008747904,0.48612407213179354,0.4228399652112277,0.3520808179685365,0.1883581909622427,0.6055606684804687,0.9017954739102111,0.6326658204203702,0.9548323652252494,0.008438470396833764,0.7057752829666956,0.37705685611348827,0.4351928479790861,0.05770749509870854,0.5423898067748887,0.3802271229174915,0.6157381354233744,0.45184352493940283,0.7205851393669788,0.7102730319473535,0.2900367037263517,0.20265119196003012,0.8554690464193127,0.297546302670017,0.9263031355095882,0.15975558825321634,0.8714018901956049,0.11452207348955068,0.993329540617753,0.6898867428751343,0.9561966146951469,0.015064887716495057,0.7921674269089153,0.17951649296965422,0.8310194405240171,0.7147172272500755,0.6536892111141207,0.31970261357153595,0.5535472928382501,0.7191001825669693,0.5870852762733508,0.11952185250263081,0.8770654160922866,0.6440843574092572,0.46651291562693586,0.9904813398429346,0.04373423382585129,0.21579679720802902,0.469289947388544,0.1257057541108323,0.23825414990437488,0.8352861345106708,0.6078128220507034,0.42742046212746065,0.028244224818871233,0.574474844995876,0.6032125624486767,0.13076803312841712,0.42494909066870334,0.7741151721706155,0.6965117514807477,0.4412175820828207,0.492502730242515,0.11294343187588518,0.2445628666498909,0.25140773929217697,0.8589045680865189,0.35083485056044905,0.8869444268799588,0.3015236347723901,0.9155580870922178,0.7990324874840229,0.858832099702,0.7361371114570331,0.49990400877368324,0.6417464593537726,0.3817953421308453,0.5829624003765604,0.13773709454283267,0.6944904250516984,0.25824546877853916,0.3569241432329425,0.2329942649747897,0.5494900886782866,0.6256701151799056,0.6312953549236336,0.7680905417711801,0.9272711688509321,0.14588954871943238,0.6312136419961378,0.03517248067375223,0.7160856353464712,0.003854610748507903,0.8037961684911755,0.592043710002519,0.6323256282555411,0.1985612894449329,0.7250493016425775,0.3202596809169531,0.4943358660252448,0.6271005873522469,0.26773396546291295,0.8681317269638232,0.27067212065414603,0.5232497050199172,0.8987792170891957,0.3425311258597348,0.04364807316355257,0.9240473601480074,0.3832507884837387,0.44529378072295744,0.4075752459498517,0.006107860015544753,0.9431318797757934,0.42296151790752257,0.11430202882032725,0.6087630080854064,0.767086539576265,0.5228066799321641,0.7253432240865415,0.07705244111130238,0.46643260650662,0.5305204188187875,0.36951313155473964,0.16229617743971292,0.1428736540868979,0.015647905064018697,0.05141132364782153,0.6664737935644254,0.5062957413518524,0.6984236375880707,0.15995898626884764,0.1448574404219849,0.05509788617778777,0.5757939061604987,0.7544421179467067,0.06137432753697225,0.6209885268668981,0.5426306236247467,0.31959356746868284,0.5918027740125454,0.5428020153573996,0.5984427800716025,0.39129741003297336,0.9626315529586956,0.4146157768272879,0.23386263290076392,0.7317942572326793,0.9155842244126159,0.0349483491543765,0.2012205502821206,0.03260038949499755,0.022062454398925846,0.2725285470887182,0.7116823733319473,0.9978012859838314,0.19320825203422953,0.9614049830525271,0.3343488643477982,0.6223399744572694,0.4664307805032699,0.24013012623088226,0.551118130418506,0.5869669859698592,0.9341072688553825,0.34008628487972425,0.2612710549460857,0.4930545720475876,0.36150331559521187,0.3828653417745319,0.1297832118463197,0.4608043720081526,0.6364006706427086,0.23690185327569258,0.6026829958213655,0.046405905111818746,0.8379513986792944,0.3507229627211963,0.16891932473094728,0.2867754135439724,0.9382970816811417,0.672656224749517,0.30194241688205536,0.010512384653939444,0.18745286997833444,0.5985850559898673,0.9263489622810889,0.013014137137515647,0.4779778098789076,0.106001313589287,0.20914939518842224,0.040083717679828545,0.9397709261279595,0.31559054151611154,0.018503852330274406,0.028721121270100736,0.5653998471978818,0.3608462344714989,0.3039481630270453,0.36522817179905,0.03042014932092707,0.5669756952173994,0.48911911547492515,0.030843115882518313,0.20350566971078166,0.1788641109001563,0.3276032738843102,0.4743749001680373,0.17132670456122412,0.4690543725612669,0.29315564029557195,0.3192519352746398,0.29471125813349397,0.45562163641740083,0.3090247947180117,0.5778211664523436,0.7157297290592789,0.9941407733555153,0.05917035343525001,0.6662843238262175,0.7998339858302996,0.35151688237877166,0.6227744289126107,0.37665094361655915,0.9665085078873729,0.24559763120323141,0.7514337823964107,0.004842430969498657,0.15965080422519895,0.15355099097134428,0.23463567652120787,0.2653696610005041,0.9108937925843522,0.768335806586828,0.8351953768693369,0.34191119573141504,0.9643009680366156,0.9840837977501816,0.08524227557898245,0.43979243130628964,0.48273284154664464,0.9419687867674482,0.5224997794912342,0.23364894671356629,0.8534169107074063,0.33590938317595254,0.4728146999925207,0.4841851880545651,0.10499253683516252,0.4846600532780654,0.6302988046351808,0.4730031041015743,0.9079514091145151,0.5339630397595411,0.9145305375779673,0.6631210226455081,0.8677492685796763,0.8494791651959409,0.9687680163196835,0.11967524260067264,0.9991164426507776,0.26895068611776174,0.09620436877942384,0.828859867985412,0.29786814794947813,0.010403894768980848,0.255804419939647,0.2774997580613925,0.5711268580600048,0.7364394558469074,0.5697302516616618,0.4427437518931301,0.48539300851677736,0.6204278951668108,0.322414983456099,0.676788343827324,0.7940217528035494,0.7094865070614103,0.7800997026017508,0.8900495004173666,0.9497022432658262,0.44374699895889846,0.30546320643076774,0.6868376931111577,0.6680684606896675,0.7786540040251911,0.40658187025873815,0.7561134403223558,0.7724378785567287,0.5565116396182028,0.1668259256629765,0.6500928567007263,0.15951277756805238,0.4622449773240168,0.8336684291760502,0.6178599573242964,0.5931258769548792,0.8007550069019717,0.6159929382558488,0.43961341123290554,0.023626055443560334,0.2167582466806791,0.5387146588917849,0.6756889334629003,0.2300027453856216,0.838525469840599,0.6208928927118978,0.7137073437629208,0.9050213826120423,0.8003758936808043,0.826321855299835,0.9729792406518322,0.5803389887598449,0.9277472791249219,0.5616385337355135,0.0013876868218735128,0.4365104521862858,0.5700982271037908,0.03784816574389671,0.6334084676336188,0.7418468209439194,0.7850907883396752,0.7708545358739751,0.18869269493610497,0.3766689079570352,0.16532999012633798,0.772659081675243,0.2724215506364709,0.15823826548967213,0.8871423990477754,0.7559714762026604,0.13018140081110563,0.8214824126503353,0.5666879428915508,0.3368531254127983,0.7232217994609175,0.6074338903543949,0.24238357561069213,0.12455895293803232,0.6398829150985845,0.5733291929506904,0.7277977436814713,0.1429272767552806,0.18814916120078062,0.03754104390401669,0.361141809769706,0.34316527412052666,0.7806556452804173,0.6958422967899243,0.07374645370422228,0.7090632594057547,0.06517425021222367,0.9955136335191381,0.16484349908974194,0.23639573249908918,0.7654250546153064,0.505332961521576,0.48824146317159767,0.5593407211638461,0.24127090166415444,0.9789844409683089,0.963135739193172,0.7753728512990256,0.39938592090925673,0.4481616804666909,0.8986123966200509,0.8319525023927608,0.002215443559732244,0.3398660248602611,0.30683402211366484,0.7931719046321647,0.7240486393921567,0.29879411447710336,0.9018508264243839,0.025566798688316128,0.7070094458005503,0.36511658649221546,0.6128325573901228,0.8183128042147514,0.10143392005215424,0.4262727468877454,0.9285707890096648,0.9054456372827457,0.43268164678439214,0.4381713147791717,0.9543482146570319,0.2052377632460669,0.9490031049276163,0.9026223011784156,0.550728220641008,0.36135135021269316,0.20378540397492606],"y":[0.9521736854094963,0.8793080697026011,0.4268716034919231,0.17675474737086927,0.1279579004341247,0.8113286977493593,0.61886745213035,0.3377882463157278,0.5320357184216967,0.5209434517949917,0.7741962650952529,0.5601574830961655,0.1616666927684911,0.18446875722826894,0.6529956739841285,0.45852707037962903,0.013700516877579783,0.6183367455925876,0.7920912272757259,0.49815591825853045,0.342553621854223,0.48261349371927253,0.5338670101514708,0.29985930311182973,0.467411882319437,0.8415593895886124,0.919505328514362,0.4496739911535781,0.08520599791514782,0.9178211721448926,0.6481233948156137,0.41962760060188276,0.20057749541319203,0.9798631038675872,0.5492878406049102,0.1935711992164536,0.8954906939880662,0.08732748047931937,0.34452838413876286,0.05646376692790711,0.5289047130455994,0.016156784106137856,0.5630555620658075,0.14987620209474461,0.8890837760219642,0.03249697916294958,0.14656533338505073,0.850192712061823,0.32649044226260726,0.3778638199289307,0.19271988727001477,0.44486638319160965,0.534708629013154,0.48977516985862146,0.834318432734219,0.96561233581663,0.8932468588633533,0.07979988422419992,0.33080923849177124,0.7946394543250151,0.6081582011869637,0.9486014871962676,0.5679840144255461,0.5906156123972216,0.9539868872123758,0.22370281091399613,0.28044159078336717,0.5851241512628192,0.4036442714386964,0.1875668937563948,0.49204854017380284,0.950561507350769,0.6655053112511964,0.8024813210769365,0.5183830529995208,0.297517359730781,0.2465517478453475,0.17232737893592165,0.5792123592942956,0.7025342855939662,0.8439449802102869,0.8308828800715624,0.11862046501373169,0.5961068634490804,0.025377735253427902,0.8843361177833672,0.3557883266500137,0.05096859556926003,0.7387458340121767,0.048433332053364975,0.36060932149637226,0.785095784229579,0.787097992798784,0.5483498520059651,0.2387919389710098,0.07465754621549525,0.9694395755069365,0.5204470323946223,0.8765599579074804,0.10473272362422315,0.29952578102741934,0.5056808455059124,0.7263805311833156,0.1186870229647623,0.26431641291314834,0.6903207620576919,0.0807079431570572,0.3954747989298265,0.12111413219335132,0.5833074946599129,0.20747784006488135,0.7823355922677439,0.5948130497572522,0.4471513015286269,0.7525991549360906,0.8399726896316009,0.5936142278259506,0.9415473862658059,0.977054592924013,0.8480028426577317,0.5485078952222756,0.4002304867784545,0.1719247199838676,0.03297659336380376,0.9267991586809349,0.16709552335649158,0.8300184439037601,0.3458355806179729,0.6334736606348939,0.40476799860236945,0.1315255050858941,0.43804878442615847,0.07624846095356219,0.26159174774913196,0.2508618429970271,0.33877678084617235,0.5079269931004444,0.13903899404575282,0.5075094673373236,0.4708823069692607,0.20836168272463462,0.44725931934509533,0.08539259969400748,0.21769696866743482,0.7676859657005392,0.1473451885667837,0.36254271166116314,0.13664338616380345,0.6178404518310322,0.8013825338034978,0.965544053703243,0.8257714139408895,0.22870236041918635,0.40659713983372536,0.3632768797732897,0.13127187028320697,0.5378029343027901,0.18695081366427158,0.2951115878077418,0.894910381906926,0.7344765928101089,0.3746017212753818,0.30598953763779724,0.7121545697038232,0.8311165654264975,0.4370987671327988,0.360179091768568,0.22166449569219915,0.8038196503138606,0.1260364172805054,0.42253829142329447,0.041316644276980674,0.6746606642223085,0.036815968959908574,0.9235517981684612,0.10660677748211422,0.9233113613017303,0.8621437828039697,0.36354040416072975,0.6107957712186708,0.10781196761328593,0.4227884945190423,0.4774375678392049,0.5115930854891366,0.3941169567658481,0.6887109425569412,0.17348978270018423,0.09629731680257159,0.17026492156929085,0.8187983752468102,0.9712254278333341,0.06676112111803312,0.9731763350472267,0.9738505312380684,0.22477327145497983,0.35798142061087235,0.7706246428487418,0.6401357578649477,0.18910771669606175,0.8316087894267408,0.11963058420319883,0.30368345248570083,0.38885190113390355,0.24943066375867717,0.5917345737186115,0.3734444457065764,0.25606577127906915,0.0013550019130528224,0.6888269612689826,0.6863027165801932,0.6052005260608739,0.11599820875471845,0.7024550452070056,0.9136038595535114,0.8521227802096182,0.9331361672836855,0.517229799951854,0.1131684292184496,0.5056670786660523,0.139589394530359,0.4130885586891666,0.8094887882654035,0.7431511897191942,0.960760757391507,0.9708377345718302,0.4957267152987632,0.9432876899504743,0.20701788942950206,0.9572347592296899,0.47216192100008014,0.7174206440662051,0.3540631071182081,0.03536927264728473,0.36265126011582416,0.9825338653933515,0.7193285818046444,0.45881201637231106,0.8205319445250372,0.538935266751041,0.1848491039045992,0.8632685458110445,0.36786994979537646,0.6763285070667412,0.6157294465434108,0.34975974615467476,0.9476413906325856,0.6677855101422703,0.9254455450224096,0.8728734173371643,0.9823276427824544,0.7037078532767386,0.3699252685365839,0.9100542280084895,0.7606222153699603,0.949058661999611,0.7642690581471434,0.5327473038793988,0.565142151531659,0.9554034407210871,0.322772874513259,0.9680721603853035,0.9229988881389194,0.3150619011171898,0.6556888907121857,0.4548110615773169,0.4670014806183884,0.6302679695033045,0.0367992667461442,0.163959565253478,0.8140789443036464,0.7954044172386812,0.673456649671691,0.3369311619039307,0.5820155621221393,0.8267484813278322,0.735783175465221,0.5903756388924241,0.18925139508245103,0.08864626526715402,0.12334172514132469,0.13451316738886454,0.5001166207025259,0.43083071384204696,0.23529165351503645,0.8614270209286918,0.2338056736190658,0.11336014895727986,0.7834829768309494,0.9066439060766627,0.9388266319198862,0.8298877498759719,0.4134472324884877,0.5235149976138663,0.005839294984722687,0.0787154227268897,0.2858933953219208,0.8419202028501591,0.3188803487446784,0.648356370734678,0.5425588583387897,0.1720451679711703,0.028342057444527557,0.5770018054693989,0.3647132797458237,0.82758735971957,0.630182509585064,0.43530568203931264,0.1480010433193235,0.6384683667606936,0.45937017703617,0.20975935072468843,0.9713556818578495,0.5299470771103527,0.08872365073585686,0.5347515497254995,0.9272894217367224,0.8301342557194269,0.06242827092587888,0.9461386150757056,0.14106300540448347,0.44189935130099156,0.5170218639163883,0.26094506077670143,0.0823613809182403,0.03809358824449238,0.9818571952565986,0.28154455036440995,0.7268203288288722,0.9843044468689753,0.24651033998285654,0.7726634889491045,0.4206251534476544,0.4121815440620915,0.34700984225392095,0.7093556119256181,0.9540073189228563,0.9743710427232214,0.8497340142734205,0.8605507279145996,0.028847477655891796,0.23381695411663284,0.0572330507989971,0.5634691878155019,0.9647579148831721,0.9504426428552547,0.41974283363875464,0.9406329015421326,0.32791629200338446,0.29017994237565126,0.9777693710827278,0.1589222087547969,0.4613898978951937,0.6919741826656314,0.9578677386309844,0.36043426147584934,0.7591946830748824,0.5908474503677832,0.8819797208362591,0.421808398807513,0.4365963985782616,0.4318698474079179,0.8238750510961464,0.7613821115582831,0.43574456418687735,0.8797689435776038,0.17603011862741413,0.962784015020189,0.8638323738127124,0.37688180296684803,0.6551796726660738,0.7975638253339811,0.3530226596362902,0.2737379884456351,0.06485945165788498,0.87247335988504,0.648556336037969,0.10426748489765125,0.3412444899145324,0.16905376526440818,0.6834590801459457,0.7909376880466268,0.35855047681519814,0.16763325609382307,0.18674784263955801,0.3031703946987505,0.6407654034680975,0.9705999415087667,0.28791229384513817,0.2234970271529827,0.510278026883058,0.6629397714993758,0.7543800080684856,0.16107534891055686,0.33272148255850975,0.7037533105466288,0.9591059904175229,0.299202968061412,0.9397001918755875,0.2930389072507056,0.9203775297284372,0.708140419970269,0.30608085253689066,0.16005038105598524,0.2117959358807221,0.3556085143492349,0.8006532050124666,0.032993087451873904,0.4376247968949186,0.6261292501857373,0.514022174953622,0.03733638873818024,0.9676398969817409,0.018553599180788027,0.04695264247739317,0.898311445634184,0.9863964724122252,0.05390620952976477,0.7270462138312868,0.7089212560715603,0.6165296363218964,0.45636043197242004,0.5359265922623353,0.38657859257076155,0.01557508630464799,0.42242317461047585,0.9118888607918578,0.9911427426718971,0.8457717609040385,0.03156567105247876,0.9344868587381547,0.7268510773416237,0.7814497099930574,0.14850700537230366,0.9244695759533103,0.6497291815158599,0.5776749065164631,0.9578554751135842,0.8542113413364048,0.8842554921108933,0.8552836337087067,0.5728852288410751,0.6656367848406906,0.14788683876051734,0.7042685097921886,0.7747055298478336,0.05875801868627706,0.7300425385745322,0.017745217562772364,0.9870250105848676,0.44633477659054843,0.7904171465682015,0.31208898806026153,0.6469429917587345,0.3028705892327297,0.8743267108343885,0.36676301777209575,0.7228460206013304,0.5639993847818067,0.690419484186984,0.6727888713564494,0.8769421351263205,0.33841676081956673,0.1345374615039695,0.6692168958373661,0.9678549835287233,0.35885288610146815,0.5443376004430215,0.38210707343928596,0.7333065455562655,0.7611505477335617,0.734369857216883,0.9095560581792509,0.030939541520272118,0.9547661584927064,0.4743857545711616,0.26174083219685396,0.7687079574888759,0.6850801303459568,0.9225335972468258,0.16786259901601386,0.22996064851415388,0.27007997361211644,0.5067457757002386,0.11309669553729429,0.8690988551681486,0.5452535705290844,0.07403147825322787,0.019932569193528926,0.6070998641748757,0.1686843426493948,0.9919007890523389,0.5853120912921929,0.49792651785403474,0.5771464301312903,0.380682367492046,0.5148840689648301,0.2395085582875227,0.7036938185555407,0.06913393489985065,0.8122854510880482]}},"id":"06d87650-c66c-4c9b-b720-2e273c02d10a","type":"ColumnDataSource"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":8},"x":{"field":"x"},"y":{"field":"y"}},"id":"b8ef9f5c-4aa7-444c-b1a5-dad3f8a29737","type":"Circle"},{"attributes":{"data_source":{"id":"631b3889-4272-4817-9b12-44cb09b6bd85","type":"ColumnDataSource"},"glyph":{"id":"cad4a6f7-85e1-4bb3-b707-99d3eb3edbaa","type":"Line"},"hover_glyph":null,"nonselection_glyph":{"id":"efb8e3f2-57a6-4a35-b133-e97516819beb","type":"Line"},"selection_glyph":null},"id":"a767d9f6-82fa-43f2-904c-60b72e57b66f","type":"GlyphRenderer"},{"attributes":{"plot":{"id":"cb07f8f1-2952-47b7-9e52-8ac07dae3198","subtype":"Figure","type":"Plot"},"ticker":{"id":"2d34290d-3bcf-4720-9ac4-c9ff76aa006a","type":"BasicTicker"}},"id":"d885d2bd-bdee-46c5-b149-e4d63c4c65a9","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"xs_units":"screen","ys_units":"screen"},"id":"8aea5b5e-cdee-4749-9c43-230632b72a3b","type":"PolyAnnotation"},{"attributes":{"plot":null,"text":"Select Here"},"id":"3433b913-0baa-483b-b887-3b873c4ff3b3","type":"Title"},{"attributes":{},"id":"d06fb68c-e265-4082-98bd-3f8657e11e72","type":"ToolEvents"},{"attributes":{"callback":null},"id":"437c461e-2018-4781-bea1-af596c81c944","type":"DataRange1d"},{"attributes":{"callback":null,"overlay":{"id":"8aea5b5e-cdee-4749-9c43-230632b72a3b","type":"PolyAnnotation"},"plot":{"id":"cb07f8f1-2952-47b7-9e52-8ac07dae3198","subtype":"Figure","type":"Plot"}},"id":"cb1f64c1-721a-4796-a415-2f10cf670736","type":"LassoSelectTool"},{"attributes":{"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"line_width":{"value":5},"x":{"field":"x"},"y":{"field":"ym"}},"id":"efb8e3f2-57a6-4a35-b133-e97516819beb","type":"Line"},{"attributes":{"callback":null,"column_names":["ym","x"],"data":{"x":[0,1],"ym":[0.5,0.5]}},"id":"631b3889-4272-4817-9b12-44cb09b6bd85","type":"ColumnDataSource"},{"attributes":{"dimension":1,"plot":{"id":"cb07f8f1-2952-47b7-9e52-8ac07dae3198","subtype":"Figure","type":"Plot"},"ticker":{"id":"2a62cf92-22f8-4814-824f-07de6d8187f7","type":"BasicTicker"}},"id":"cec3b8f9-af12-4bfd-9827-f157fbc5f7c7","type":"Grid"},{"attributes":{},"id":"2d34290d-3bcf-4720-9ac4-c9ff76aa006a","type":"BasicTicker"},{"attributes":{"callback":null},"id":"5bd8ab14-3e2b-462a-ba66-e8228fe001a0","type":"DataRange1d"},{"attributes":{},"id":"8b80bf8c-ca21-4da3-965f-8d2c41fd21da","type":"BasicTickFormatter"},{"attributes":{"args":{"s2":{"id":"631b3889-4272-4817-9b12-44cb09b6bd85","type":"ColumnDataSource"}},"code":"\n        var inds = cb_obj.get('selected')['1d'].indices;\n        var d = cb_obj.get('data');\n        var ym = 0\n\n        if (inds.length == 0) { return; }\n\n        for (i = 0; i < d['color'].length; i++) {\n            d['color'][i] = \"navy\"\n        }\n        for (i = 0; i < inds.length; i++) {\n            d['color'][inds[i]] = \"firebrick\"\n            ym += d['y'][inds[i]]\n        }\n\n        ym /= inds.length\n        s2.get('data')['ym'] = [ym, ym]\n\n        cb_obj.trigger('change');\n        s2.trigger('change');\n    "},"id":"d47e4a67-b1fc-4faa-96a8-d3bbff9dfb5a","type":"CustomJS"},{"attributes":{"fill_alpha":{"value":0.4},"fill_color":{"field":"color"},"line_alpha":{"value":0.4},"line_color":{"field":"color"},"size":{"units":"screen","value":8},"x":{"field":"x"},"y":{"field":"y"}},"id":"6c76a8b8-525a-43b9-99a1-15e24114ea09","type":"Circle"},{"attributes":{"data_source":{"id":"06d87650-c66c-4c9b-b720-2e273c02d10a","type":"ColumnDataSource"},"glyph":{"id":"6c76a8b8-525a-43b9-99a1-15e24114ea09","type":"Circle"},"hover_glyph":null,"nonselection_glyph":{"id":"b8ef9f5c-4aa7-444c-b1a5-dad3f8a29737","type":"Circle"},"selection_glyph":null},"id":"9d1b4501-f330-4609-9a18-a2e129612d89","type":"GlyphRenderer"},{"attributes":{"below":[{"id":"37edee6b-6ba0-4f8e-b303-efbe765c912f","type":"LinearAxis"}],"left":[{"id":"b6a6525a-a25f-4994-aaae-b2869b392ad6","type":"LinearAxis"}],"plot_height":400,"plot_width":400,"renderers":[{"id":"37edee6b-6ba0-4f8e-b303-efbe765c912f","type":"LinearAxis"},{"id":"d885d2bd-bdee-46c5-b149-e4d63c4c65a9","type":"Grid"},{"id":"b6a6525a-a25f-4994-aaae-b2869b392ad6","type":"LinearAxis"},{"id":"cec3b8f9-af12-4bfd-9827-f157fbc5f7c7","type":"Grid"},{"id":"8aea5b5e-cdee-4749-9c43-230632b72a3b","type":"PolyAnnotation"},{"id":"9d1b4501-f330-4609-9a18-a2e129612d89","type":"GlyphRenderer"},{"id":"a767d9f6-82fa-43f2-904c-60b72e57b66f","type":"GlyphRenderer"}],"title":{"id":"3433b913-0baa-483b-b887-3b873c4ff3b3","type":"Title"},"tool_events":{"id":"d06fb68c-e265-4082-98bd-3f8657e11e72","type":"ToolEvents"},"toolbar":{"id":"e9cfc911-4015-494e-a4dc-f0c8dccc1cf6","type":"Toolbar"},"x_range":{"id":"5bd8ab14-3e2b-462a-ba66-e8228fe001a0","type":"DataRange1d"},"y_range":{"id":"437c461e-2018-4781-bea1-af596c81c944","type":"DataRange1d"}},"id":"cb07f8f1-2952-47b7-9e52-8ac07dae3198","subtype":"Figure","type":"Plot"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"cb1f64c1-721a-4796-a415-2f10cf670736","type":"LassoSelectTool"}]},"id":"e9cfc911-4015-494e-a4dc-f0c8dccc1cf6","type":"Toolbar"},{"attributes":{"line_alpha":{"value":0.6},"line_color":{"value":"orange"},"line_width":{"value":5},"x":{"field":"x"},"y":{"field":"ym"}},"id":"cad4a6f7-85e1-4bb3-b707-99d3eb3edbaa","type":"Line"},{"attributes":{"formatter":{"id":"26c1d76f-b0e5-472b-81ab-756f2829d43e","type":"BasicTickFormatter"},"plot":{"id":"cb07f8f1-2952-47b7-9e52-8ac07dae3198","subtype":"Figure","type":"Plot"},"ticker":{"id":"2a62cf92-22f8-4814-824f-07de6d8187f7","type":"BasicTicker"}},"id":"b6a6525a-a25f-4994-aaae-b2869b392ad6","type":"LinearAxis"},{"attributes":{},"id":"26c1d76f-b0e5-472b-81ab-756f2829d43e","type":"BasicTickFormatter"}],"root_ids":["cb07f8f1-2952-47b7-9e52-8ac07dae3198"]},"title":"Bokeh Application","version":"0.12.0.9128"}};
              var render_items = [{"docid":"60e68a5e-855c-4831-813c-441b35593863","elementid":"70595d35-462b-40ce-a66b-735968211a89","modelid":"cb07f8f1-2952-47b7-9e52-8ac07dae3198"}];
              
              Bokeh.embed.embed_items(docs_json, render_items);
          });
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.0.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.0.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.0.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.0.min.css");
        }
      ];
    
      function run_inline_js() {
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i](window.Bokeh);
        }
      }
    
      if (window._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(this));
});