document.addEventListener("DOMContentLoaded", function(event) {
    
    (function(global) {
      function now() {
        return new Date();
      }
    
      var force = "";
    
      if (typeof (window._bokeh_onload_callbacks) === "undefined" || force !== "") {
        window._bokeh_onload_callbacks = [];
        window._bokeh_is_loading = undefined;
      }
    
    
      
      
    
      function run_callbacks() {
        window._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        delete window._bokeh_onload_callbacks
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        window._bokeh_onload_callbacks.push(callback);
        if (window._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        window._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            window._bokeh_is_loading--;
            if (window._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("84e6c540-a16f-4f6d-af19-ca005664f40b");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '84e6c540-a16f-4f6d-af19-ca005664f40b' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ['https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-compiler-0.12.2.min.js', 'https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js'];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          
          (function outer(modules, cache, entry) {
            if (typeof Bokeh !== "undefined") {
              for (var name in modules) {
                var module = modules[name];
          
                if (typeof(module) === "string") {
                  try {
                    coffee = Bokeh.require("coffee-script")
                  } catch (e) {
                    throw new Error("Compiler requested but failed to import. Make sure bokeh-compiler(-min).js was included.")
                  }
          
                  function compile(code) {
                    var body = coffee.compile(code, {bare: true, shiftLine: true});
                    return new Function("require", "module", "exports", body);
                  }
          
                  modules[name] = [compile(module), {}];
                }
              }
          
              for (var name in modules) {
                Bokeh.require.modules[name] = modules[name];
              }
          
              for (var i = 0; i < entry.length; i++) {
                Bokeh.Models.register_locations(Bokeh.require(entry[i]));
              }
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })({
           "custom/main":[function(require,module,exports){
             module.exports = { Custom: require("custom/custom"),
          DrawTool: require("custom/draw_tool"),
          LatexLabel: require("custom/latex_label"),
          MyFormatter: require("custom/my_formatter"),
          Surface3d: require("custom/surface3d") };
           }, {}],
           "custom/custom": "\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\nclass CustomView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    @render()\n\n    # Set Backbone listener so that when the Bokeh slider has a change\n    # event, we can process the new data\n    @listenTo(@model.slider, \'change\', () => @render())\n\n  render: () ->\n    # Backbone Views create <div> elements by default, accessible as @$el.\n    # Many Bokeh views ignore this default <div>, and instead do things\n    # like draw to the HTML canvas. In this case though, we change the\n    # contents of the <div>, based on the current slider value.\n    @$el.html(\"<h1>#{ @model.text }: #{ @model.slider.value }</h1>\")\n    @$(\'h1\').css({ \'color\': \'#686d8e\', \'background-color\': \'#2a3153\' })\n\nclass Custom extends LayoutDOM.Model\n\n  # If there is an associated view, this is boilerplate.\n  default_view: CustomView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Custom\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. bokeh.core.properties.String will be\n  # p.String in the JS implementation. Where the JS type system is not yet\n  # as rich, you can use p.Any as a \"wildcard\" property type.\n  @define {\n    text:   [ p.String ]\n    slider: [ p.Any    ]\n  }\n\n# This is boilerplate. Every implementation should export a Model\n# and (when applicable) also a View.\nmodule.exports =\n  Model: Custom\n  View: CustomView\n",
          "custom/draw_tool": "\np = require \"core/properties\"\nGestureTool = require \"models/tools/gestures/gesture_tool\"\n\nclass DrawToolView extends GestureTool.View\n\n  # this is executed when the pan/drag event starts\n  _pan_start: (e) ->\n    @model.source.data = {x: [], y: []}\n\n  # this is executed on subsequent mouse/touch moves\n  _pan: (e) ->\n    frame = @plot_model.frame\n    canvas = @plot_view.canvas\n\n    vx = canvas.sx_to_vx(e.bokeh.sx)\n    vy = canvas.sy_to_vy(e.bokeh.sy)\n    if not frame.contains(vx, vy)\n      return null\n\n    x = frame.get(\'x_mappers\').default.map_from_target(vx)\n    y = frame.get(\'y_mappers\').default.map_from_target(vy)\n\n    @model.source.data.x.push(x)\n    @model.source.data.y.push(y)\n    @model.source.trigger(\'change\')\n\n  # this is executed then the pan/drag ends\n  _pan_end: (e) -> return null\n\nclass DrawTool extends GestureTool.Model\n  default_view: DrawToolView\n  type: \"DrawTool\"\n\n  tool_name: \"Drag Span\"\n  icon: \"bk-tool-icon-lasso-select\"\n  event_type: \"pan\"\n  default_order: 12\n\n  @define { source: [ p.Instance ] }\n\nmodule.exports =\n  Model: DrawTool\n  View: DrawToolView\n",
          "custom/latex_label": "\nLabel = require \"models/annotations/label\"\n\nclass LatexLabelView extends Label.View\n  render: () ->\n\n    #--- Start of copied section from ``Label.render`` implementation\n\n    ctx = @plot_view.canvas_view.ctx\n\n    # Here because AngleSpec does units tranform and label doesn\'t support specs\n    switch @mget(\'angle_units\')\n      when \"rad\" then angle = -1 * @mget(\'angle\')\n      when \"deg\" then angle = -1 * @mget(\'angle\') * Math.PI/180.0\n\n    if @mget(\'x_units\') == \"data\"\n      vx = @xmapper.map_to_target(@mget(\'x\'))\n    else\n      vx = @mget(\'x\')\n    sx = @canvas.vx_to_sx(vx)\n\n    if @mget(\'y_units\') == \"data\"\n      vy = @ymapper.map_to_target(@mget(\'y\'))\n    else\n      vy = @mget(\'y\')\n    sy = @canvas.vy_to_sy(vy)\n\n    if @model.panel?\n      panel_offset = @_get_panel_offset()\n      sx += panel_offset.x\n      sy += panel_offset.y\n\n    #--- End of copied section from ``Label.render`` implementation\n\n    # ``katex`` is loaded into the global window at runtime\n    # katex.renderToString returns a html ``span`` element\n    latex = katex.renderToString(@mget(\'text\'), {displayMode: true})\n\n    # Must render as superpositioned div (not on canvas) so that KaTex\n    # css can properly style the text\n    @_css_text(ctx, latex, sx + @mget(\'x_offset\'), sy - @mget(\'y_offset\'), angle)\n\nclass LatexLabel extends Label.Model\n  type: \'LatexLabel\'\n  default_view: LatexLabelView\n\nmodule.exports =\n  Model: LatexLabel\n  View: LatexLabelView\n",
          "custom/my_formatter": "\nTickFormatter = require \"models/formatters/tick_formatter\"\n\nclass MyFormatter extends TickFormatter.Model\n  type: \"MyFormatter\"\n\n  # TickFormatters should implement this method, which accepts a lisst\n  # of numbers (ticks) and returns a list of strings\n  doFormat: (ticks) ->\n    # format the first tick as-is\n    formatted = [\"#{ticks[0]}\"]\n\n    # format the remaining ticks as a difference from the first\n    for i in [1...ticks.length]\n       formatted.push(\"+#{(ticks[i]-ticks[0]).toPrecision(2)}\")\n\n    return formatted\n\nmodule.exports =\n  Model: MyFormatter\n",
          "custom/surface3d": "\n# This file contains the JavaScript (CoffeeScript) implementation\n# for a Bokeh custom extension. The \"surface3d.py\" contains the\n# python counterpart.\n#\n# This custom model wraps one part of the third-party vis.js library:\n#\n#     http://visjs.org/index.html\n#\n# Making it easy to hook up python data analytics tools (NumPy, SciPy,\n# Pandas, etc.) to web presentations using the Bokeh server.\n\n# These \"require\" lines are similar to python \"import\" statements\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\n# This defines some default options for the Graph3d feature of vis.js\n# See: http://visjs.org/graph3d_examples.html for more details.\nOPTIONS =\n  width:  \'600px\'\n  height: \'600px\'\n  style: \'surface\'\n  showPerspective: true\n  showGrid: true\n  keepAspectRatio: true\n  verticalRatio: 1.0\n  legendLabel: \'stuff\'\n  cameraPosition:\n    horizontal: -0.35\n    vertical: 0.22\n    distance: 1.8\n\n# To create custom model extensions that will render on to the HTML canvas\n# or into the DOM, we must create a View subclass for the model. Currently\n# Bokeh models and views are based on BackBone. More information about\n# using Backbone can be found here:\n#\n#     http://backbonejs.org/\n#\n# In this case we will subclass from the existing BokehJS ``LayoutDOM.View``,\n# corresponding to our\nclass Surface3dView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    url = \"https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js\"\n    $.getScript(url).done(@_init)\n\n  # NOTE: we have to use the \"fat arrow\" => here so that \"this\" is bound correctly\n  _init: () =>\n    # Create a new Graph3s using the vis.js API. This assumes the vis.js has\n    # already been loaded (e.g. in a custom app template). In the future Bokeh\n    # models will be able to specify and load external scripts automatically.\n    #\n    # Backbone Views create <div> elements by default, accessible as @$el. Many\n    # Bokeh views ignore this default <div>, and instead do things like draw\n    # to the HTML canvas. In this case though, we use the <div> to attach a\n    # Graph3d to the DOM.\n    @_graph = new vis.Graph3d(@$el[0], @get_data(), OPTIONS)\n\n    # Set Backbone listener so that when the Bokeh data source has a change\n    # event, we can process the new data\n    @listenTo(@model.data_source, \'change\', () =>\n        @_graph.setData(@get_data())\n    )\n\n  # This is the callback executed when the Bokeh data has an change. Its basic\n  # function is to adapt the Bokeh data source to the vis.js DataSet format.\n  get_data: () ->\n    data = new vis.DataSet()\n    source = @model.data_source\n    for i in [0...source.get_length()]\n      data.add({\n        x:     source.get_column(@model.x)[i]\n        y:     source.get_column(@model.y)[i]\n        z:     source.get_column(@model.z)[i]\n        style: source.get_column(@model.color)[i]\n      })\n    return data\n\n# We must also create a corresponding JavaScript Backbone model sublcass to\n# correspond to the python Bokeh model subclass. In this case, since we want\n# an element that can position itself in the DOM according to a Bokeh layout,\n# we subclass from ``LayoutDOM.model``\nclass Surface3d extends LayoutDOM.Model\n\n  # This is usually boilerplate. In some cases there may not be a view.\n  default_view: Surface3dView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Surface3d\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. ``bokeh.core.properties.String`` will be\n  # ``p.String`` in the JS implementatin. Where the JS type system is not yet\n  # as rich, you can use ``p.Any`` as a \"wildcard\" property type.\n  @define {\n    x:           [ p.String           ]\n    y:           [ p.String           ]\n    z:           [ p.String           ]\n    color:       [ p.String           ]\n    data_source: [ p.Instance         ]\n  }\n\n# This is boilerplate. Every implementation should \"export\" a ``Model``\n# and (when applicable) also a ``View``.\nmodule.exports =\n  Model: Surface3d\n  View: Surface3dView\n"
          }, {}, ["custom/main"]);
        },
        
        function(Bokeh) {
          Bokeh.$(function() {
              Bokeh.safely(function() {
                  var docs_json = {"25005de2-a450-4438-831f-0d1267ab62e4":{"roots":{"references":[{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"ed1b7415-949d-4697-b0c5-2bea86986916","type":"Square"},{"attributes":{},"id":"e323ce96-9f03-4ea4-a96b-6577dbf0c089","type":"ToolEvents"},{"attributes":{"formatter":{"id":"682d0786-6a10-4bf5-91fd-bd6b41232706","type":"BasicTickFormatter"},"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"},"ticker":{"id":"0ae9426e-4de9-454c-aa9f-8d2e3ed0e3e5","type":"BasicTicker"}},"id":"e50c3ee0-eddf-4a80-9b32-3761cbdd8d20","type":"LinearAxis"},{"attributes":{"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}},"id":"53105606-2da3-458f-9896-050fc02242e5","type":"ResetTool"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"b766fd26-2b00-42e6-bf9e-8f0e68242516","type":"PanTool"},{"id":"cae98f91-0b28-4ae9-a861-5fcb14019358","type":"WheelZoomTool"},{"id":"5ab63b1a-fcf0-4a12-a31f-fc7d84299007","type":"BoxZoomTool"},{"id":"05c11997-e454-42b7-9f5a-decfd64ab914","type":"SaveTool"},{"id":"53105606-2da3-458f-9896-050fc02242e5","type":"ResetTool"},{"id":"13b71f11-5ebc-4eaa-893c-10b5eb574aca","type":"HelpTool"}]},"id":"c61f347d-947e-4cca-8b1e-b72f9125ee14","type":"Toolbar"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"c017b085-3c3f-4785-8505-b2dfa9c2d391","type":"BoxAnnotation"},{"attributes":{"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"}},"id":"d08ea443-3d93-466b-91b6-de868433faed","type":"WheelZoomTool"},{"attributes":{"callback":null,"column_names":["x","y"],"data":{"x":[0,1,2,3,4,5,6,7,8,9,10],"y":[10,9,8,7,6,5,4,3,2,1,0]}},"id":"4e161e2e-4026-487e-adec-7dfd09c68ccc","type":"ColumnDataSource"},{"attributes":{"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"}},"id":"9c21195c-3515-4a2d-af99-42d877fc43f6","type":"SaveTool"},{"attributes":{"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}},"id":"13b71f11-5ebc-4eaa-893c-10b5eb574aca","type":"HelpTool"},{"attributes":{"callback":null},"id":"84936c8e-4cce-4f01-8573-45562296a429","type":"DataRange1d"},{"attributes":{},"id":"1615f258-ef43-4715-8af1-130dcaae876b","type":"BasicTickFormatter"},{"attributes":{"formatter":{"id":"1615f258-ef43-4715-8af1-130dcaae876b","type":"BasicTickFormatter"},"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"},"ticker":{"id":"68ea1766-5e29-4731-b2d9-9d9d734ad557","type":"BasicTicker"}},"id":"eb2a3907-1f10-427f-9f0f-7e52323e437e","type":"LinearAxis"},{"attributes":{"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}},"id":"cae98f91-0b28-4ae9-a861-5fcb14019358","type":"WheelZoomTool"},{"attributes":{},"id":"49c9f043-4a2a-45d6-a5b9-10a18316ed32","type":"BasicTicker"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"fc0a29e9-0a14-4841-9e36-cc3e53c7d0ec","type":"Triangle"},{"attributes":{"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"}},"id":"6224c171-76b0-4961-99e8-cf7e809c433b","type":"PanTool"},{"attributes":{"callback":null,"column_names":["x","y"],"data":{"x":[0,1,2,3,4,5,6,7,8,9,10],"y":[5,4,3,2,1,0,1,2,3,4,5]}},"id":"187880ac-0043-4283-b867-01a6a06e15b7","type":"ColumnDataSource"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"olive"},"line_alpha":{"value":0.5},"line_color":{"value":"olive"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"eb175745-a63c-45af-9e41-d8b270146fc0","type":"Square"},{"attributes":{"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"}},"id":"a0925464-328f-4f0e-9248-61464292ca2f","type":"ResetTool"},{"attributes":{},"id":"ae534238-0782-465b-9409-f52624195454","type":"BasicTicker"},{"attributes":{},"id":"682d0786-6a10-4bf5-91fd-bd6b41232706","type":"BasicTickFormatter"},{"attributes":{"formatter":{"id":"876acf07-a184-4758-9ca3-2d4b10f3bceb","type":"BasicTickFormatter"},"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"},"ticker":{"id":"49c9f043-4a2a-45d6-a5b9-10a18316ed32","type":"BasicTicker"}},"id":"28e59bd0-1d67-444e-8dc8-d58283e5251b","type":"LinearAxis"},{"attributes":{},"id":"68ea1766-5e29-4731-b2d9-9d9d734ad557","type":"BasicTicker"},{"attributes":{"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"}},"id":"1d594ddc-db79-456c-a93f-3f7e57767e71","type":"WheelZoomTool"},{"attributes":{"overlay":{"id":"c017b085-3c3f-4785-8505-b2dfa9c2d391","type":"BoxAnnotation"},"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"}},"id":"5d6580dc-6b1c-4815-9fdc-6e90b6324ca2","type":"BoxZoomTool"},{"attributes":{"callback":null},"id":"7cd6099b-ab2b-4092-bff5-a6a197848dc8","type":"DataRange1d"},{"attributes":{"dimension":1,"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"},"ticker":{"id":"f252f94c-bb8a-4c94-8df0-30d9095f76de","type":"BasicTicker"}},"id":"0cae9cbd-d0cd-49a7-99ef-7aeb3288ad3e","type":"Grid"},{"attributes":{"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"}},"id":"9d683184-184e-4629-bb50-c44e9792b601","type":"SaveTool"},{"attributes":{"dimension":1,"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"},"ticker":{"id":"68ea1766-5e29-4731-b2d9-9d9d734ad557","type":"BasicTicker"}},"id":"9f62a1de-6da9-4355-8267-fdaed27e1037","type":"Grid"},{"attributes":{"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}},"id":"05c11997-e454-42b7-9f5a-decfd64ab914","type":"SaveTool"},{"attributes":{"overlay":{"id":"e1cb2a41-0943-46da-b67d-3135c870b0a0","type":"BoxAnnotation"},"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}},"id":"5ab63b1a-fcf0-4a12-a31f-fc7d84299007","type":"BoxZoomTool"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"76dd2afb-76cd-4ee0-84e6-9ce30200b59b","type":"PanTool"},{"id":"1d594ddc-db79-456c-a93f-3f7e57767e71","type":"WheelZoomTool"},{"id":"e1ede9e5-41ad-44ce-8e29-a98504515883","type":"BoxZoomTool"},{"id":"9d683184-184e-4629-bb50-c44e9792b601","type":"SaveTool"},{"id":"aeddeb89-92a3-498e-be5c-dd5f096b46a9","type":"ResetTool"},{"id":"a06d1b84-e6fc-4e1f-befa-0bf9d9487e2c","type":"HelpTool"}]},"id":"cdb981ff-a489-4bb9-b3fd-2e72ca933654","type":"Toolbar"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"6224c171-76b0-4961-99e8-cf7e809c433b","type":"PanTool"},{"id":"d08ea443-3d93-466b-91b6-de868433faed","type":"WheelZoomTool"},{"id":"5d6580dc-6b1c-4815-9fdc-6e90b6324ca2","type":"BoxZoomTool"},{"id":"9c21195c-3515-4a2d-af99-42d877fc43f6","type":"SaveTool"},{"id":"a0925464-328f-4f0e-9248-61464292ca2f","type":"ResetTool"},{"id":"53839171-7936-478e-b805-570a8438adee","type":"HelpTool"}]},"id":"7015f2ee-8464-4cf3-b63d-0335ba32ebed","type":"Toolbar"},{"attributes":{},"id":"5e2ad87c-d15f-4547-b8d3-c90804e72ffd","type":"ToolEvents"},{"attributes":{"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}},"id":"b766fd26-2b00-42e6-bf9e-8f0e68242516","type":"PanTool"},{"attributes":{"dimension":1,"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"},"ticker":{"id":"ae534238-0782-465b-9409-f52624195454","type":"BasicTicker"}},"id":"ad47b2e7-4585-4a1e-b1ec-abe8d4e3fc19","type":"Grid"},{"attributes":{"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"}},"id":"aeddeb89-92a3-498e-be5c-dd5f096b46a9","type":"ResetTool"},{"attributes":{"below":[{"id":"e50c3ee0-eddf-4a80-9b32-3761cbdd8d20","type":"LinearAxis"}],"left":[{"id":"eb2a3907-1f10-427f-9f0f-7e52323e437e","type":"LinearAxis"}],"plot_height":250,"plot_width":250,"renderers":[{"id":"e50c3ee0-eddf-4a80-9b32-3761cbdd8d20","type":"LinearAxis"},{"id":"59bfb50d-8be5-4442-955c-8e5518dcd552","type":"Grid"},{"id":"eb2a3907-1f10-427f-9f0f-7e52323e437e","type":"LinearAxis"},{"id":"9f62a1de-6da9-4355-8267-fdaed27e1037","type":"Grid"},{"id":"e1cb2a41-0943-46da-b67d-3135c870b0a0","type":"BoxAnnotation"},{"id":"7efcd951-4628-4ce9-ad68-e005fd443653","type":"GlyphRenderer"}],"title":{"id":"6b7d185f-bdc7-459e-be9e-96b652cba30c","type":"Title"},"tool_events":{"id":"5e2ad87c-d15f-4547-b8d3-c90804e72ffd","type":"ToolEvents"},"toolbar":{"id":"c61f347d-947e-4cca-8b1e-b72f9125ee14","type":"Toolbar"},"x_range":{"id":"ca0bb8a1-9c55-44f7-83ab-6713cbddf1db","type":"DataRange1d"},"y_range":{"id":"84936c8e-4cce-4f01-8573-45562296a429","type":"DataRange1d"}},"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"},{"attributes":{"formatter":{"id":"75981d1d-b33c-4101-a8d6-ea5977ff977a","type":"BasicTickFormatter"},"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"},"ticker":{"id":"f252f94c-bb8a-4c94-8df0-30d9095f76de","type":"BasicTicker"}},"id":"14a044e6-c985-4cd2-954c-9b92cf8a23da","type":"LinearAxis"},{"attributes":{"plot":{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"},"ticker":{"id":"0ae9426e-4de9-454c-aa9f-8d2e3ed0e3e5","type":"BasicTicker"}},"id":"59bfb50d-8be5-4442-955c-8e5518dcd552","type":"Grid"},{"attributes":{},"id":"75981d1d-b33c-4101-a8d6-ea5977ff977a","type":"BasicTickFormatter"},{"attributes":{"callback":null},"id":"ca0bb8a1-9c55-44f7-83ab-6713cbddf1db","type":"DataRange1d"},{"attributes":{"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"}},"id":"a06d1b84-e6fc-4e1f-befa-0bf9d9487e2c","type":"HelpTool"},{"attributes":{"callback":null,"column_names":["x","y"],"data":{"x":[0,1,2,3,4,5,6,7,8,9,10],"y":[0,1,2,3,4,5,6,7,8,9,10]}},"id":"e4dd4e87-1c7d-49a4-a5de-734ef096023f","type":"ColumnDataSource"},{"attributes":{"plot":null,"text":null},"id":"3d46db41-33ee-476f-9ccf-f707e79208b5","type":"Title"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"e1cb2a41-0943-46da-b67d-3135c870b0a0","type":"BoxAnnotation"},{"attributes":{},"id":"c7c7d68c-3d60-4f4e-923e-87dad9720883","type":"BasicTicker"},{"attributes":{},"id":"5cfb1b6b-2173-460f-9e0e-75ddd41d9b4e","type":"BasicTickFormatter"},{"attributes":{"callback":null},"id":"842cb510-d2b8-42ca-880a-b6955a19d02e","type":"DataRange1d"},{"attributes":{"plot":null,"text":null},"id":"bfcfc09c-a0fa-46d1-bed2-496bfa580fae","type":"Title"},{"attributes":{"plot":null,"text":null},"id":"6b7d185f-bdc7-459e-be9e-96b652cba30c","type":"Title"},{"attributes":{"formatter":{"id":"5cfb1b6b-2173-460f-9e0e-75ddd41d9b4e","type":"BasicTickFormatter"},"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"},"ticker":{"id":"ae534238-0782-465b-9409-f52624195454","type":"BasicTicker"}},"id":"652929e0-7436-4516-9114-73e9b6f874e5","type":"LinearAxis"},{"attributes":{"children":[{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"},{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"},{"id":"63273d02-54ec-4d46-9b68-34cff3404bdb","subtype":"Figure","type":"Plot"}]},"id":"fc932c05-ed79-4277-a914-54f3e900d125","type":"Row"},{"attributes":{},"id":"0ae9426e-4de9-454c-aa9f-8d2e3ed0e3e5","type":"BasicTicker"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"navy"},"line_alpha":{"value":0.5},"line_color":{"value":"navy"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"638badcb-642d-4382-ad97-982561df33b2","type":"Circle"},{"attributes":{"data_source":{"id":"e4dd4e87-1c7d-49a4-a5de-734ef096023f","type":"ColumnDataSource"},"glyph":{"id":"638badcb-642d-4382-ad97-982561df33b2","type":"Circle"},"hover_glyph":null,"nonselection_glyph":{"id":"bd9e652f-6ecb-4f73-b12c-f9db02fe391c","type":"Circle"},"selection_glyph":null},"id":"74d27148-c041-4c13-a499-b410036c5d55","type":"GlyphRenderer"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"aad0f272-74f0-4863-9556-208d433e9e74","type":"BoxAnnotation"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"bd9e652f-6ecb-4f73-b12c-f9db02fe391c","type":"Circle"},{"attributes":{"below":[{"id":"f9b7d9f9-3ecd-418e-9a69-6f5a770cfffb","type":"LinearAxis"}],"left":[{"id":"652929e0-7436-4516-9114-73e9b6f874e5","type":"LinearAxis"}],"plot_height":250,"plot_width":250,"renderers":[{"id":"f9b7d9f9-3ecd-418e-9a69-6f5a770cfffb","type":"LinearAxis"},{"id":"53617170-73b1-4800-9923-8cabe8c67293","type":"Grid"},{"id":"652929e0-7436-4516-9114-73e9b6f874e5","type":"LinearAxis"},{"id":"ad47b2e7-4585-4a1e-b1ec-abe8d4e3fc19","type":"Grid"},{"id":"c017b085-3c3f-4785-8505-b2dfa9c2d391","type":"BoxAnnotation"},{"id":"74d27148-c041-4c13-a499-b410036c5d55","type":"GlyphRenderer"}],"title":{"id":"bfcfc09c-a0fa-46d1-bed2-496bfa580fae","type":"Title"},"tool_events":{"id":"e323ce96-9f03-4ea4-a96b-6577dbf0c089","type":"ToolEvents"},"toolbar":{"id":"7015f2ee-8464-4cf3-b63d-0335ba32ebed","type":"Toolbar"},"x_range":{"id":"c08cf175-53ad-43fe-8b01-c0764bc8d196","type":"DataRange1d"},"y_range":{"id":"7cd6099b-ab2b-4092-bff5-a6a197848dc8","type":"DataRange1d"}},"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"7904b76e-0b80-4f80-b492-9cd217ebf74b","type":"BasicTickFormatter"},{"attributes":{"callback":null},"id":"c5d05a57-bdd9-4a50-8cb4-d94bd7eef9a0","type":"DataRange1d"},{"attributes":{"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"},"ticker":{"id":"c7c7d68c-3d60-4f4e-923e-87dad9720883","type":"BasicTicker"}},"id":"53617170-73b1-4800-9923-8cabe8c67293","type":"Grid"},{"attributes":{"below":[{"id":"28e59bd0-1d67-444e-8dc8-d58283e5251b","type":"LinearAxis"}],"left":[{"id":"14a044e6-c985-4cd2-954c-9b92cf8a23da","type":"LinearAxis"}],"plot_height":250,"plot_width":250,"renderers":[{"id":"28e59bd0-1d67-444e-8dc8-d58283e5251b","type":"LinearAxis"},{"id":"c16753de-7f06-4c1c-afc4-77208d714f89","type":"Grid"},{"id":"14a044e6-c985-4cd2-954c-9b92cf8a23da","type":"LinearAxis"},{"id":"0cae9cbd-d0cd-49a7-99ef-7aeb3288ad3e","type":"Grid"},{"id":"aad0f272-74f0-4863-9556-208d433e9e74","type":"BoxAnnotation"},{"id":"4a39e340-afb6-484b-87fe-071aae69361e","type":"GlyphRenderer"}],"title":{"id":"3d46db41-33ee-476f-9ccf-f707e79208b5","type":"Title"},"tool_events":{"id":"6fb0c1c0-a499-4b32-8473-4fb51abf296c","type":"ToolEvents"},"toolbar":{"id":"cdb981ff-a489-4bb9-b3fd-2e72ca933654","type":"Toolbar"},"x_range":{"id":"842cb510-d2b8-42ca-880a-b6955a19d02e","type":"DataRange1d"},"y_range":{"id":"c5d05a57-bdd9-4a50-8cb4-d94bd7eef9a0","type":"DataRange1d"}},"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"},{"attributes":{"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"},"ticker":{"id":"49c9f043-4a2a-45d6-a5b9-10a18316ed32","type":"BasicTicker"}},"id":"c16753de-7f06-4c1c-afc4-77208d714f89","type":"Grid"},{"attributes":{"data_source":{"id":"4e161e2e-4026-487e-adec-7dfd09c68ccc","type":"ColumnDataSource"},"glyph":{"id":"b8ff9b1d-84d1-4e1f-9e1a-49a1dca813bc","type":"Triangle"},"hover_glyph":null,"nonselection_glyph":{"id":"fc0a29e9-0a14-4841-9e36-cc3e53c7d0ec","type":"Triangle"},"selection_glyph":null},"id":"4a39e340-afb6-484b-87fe-071aae69361e","type":"GlyphRenderer"},{"attributes":{},"id":"f252f94c-bb8a-4c94-8df0-30d9095f76de","type":"BasicTicker"},{"attributes":{"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"}},"id":"76dd2afb-76cd-4ee0-84e6-9ce30200b59b","type":"PanTool"},{"attributes":{},"id":"876acf07-a184-4758-9ca3-2d4b10f3bceb","type":"BasicTickFormatter"},{"attributes":{"callback":null},"id":"c08cf175-53ad-43fe-8b01-c0764bc8d196","type":"DataRange1d"},{"attributes":{},"id":"6fb0c1c0-a499-4b32-8473-4fb51abf296c","type":"ToolEvents"},{"attributes":{"data_source":{"id":"187880ac-0043-4283-b867-01a6a06e15b7","type":"ColumnDataSource"},"glyph":{"id":"eb175745-a63c-45af-9e41-d8b270146fc0","type":"Square"},"hover_glyph":null,"nonselection_glyph":{"id":"ed1b7415-949d-4697-b0c5-2bea86986916","type":"Square"},"selection_glyph":null},"id":"7efcd951-4628-4ce9-ad68-e005fd443653","type":"GlyphRenderer"},{"attributes":{"overlay":{"id":"aad0f272-74f0-4863-9556-208d433e9e74","type":"BoxAnnotation"},"plot":{"id":"dd307c89-722e-4e2e-a8cc-50e525192032","subtype":"Figure","type":"Plot"}},"id":"e1ede9e5-41ad-44ce-8e29-a98504515883","type":"BoxZoomTool"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"firebrick"},"line_alpha":{"value":0.5},"line_color":{"value":"firebrick"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"b8ff9b1d-84d1-4e1f-9e1a-49a1dca813bc","type":"Triangle"},{"attributes":{"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"}},"id":"53839171-7936-478e-b805-570a8438adee","type":"HelpTool"},{"attributes":{"formatter":{"id":"7904b76e-0b80-4f80-b492-9cd217ebf74b","type":"BasicTickFormatter"},"plot":{"id":"11908a8f-3ef8-4a80-b3c5-9d294f725e72","subtype":"Figure","type":"Plot"},"ticker":{"id":"c7c7d68c-3d60-4f4e-923e-87dad9720883","type":"BasicTicker"}},"id":"f9b7d9f9-3ecd-418e-9a69-6f5a770cfffb","type":"LinearAxis"}],"root_ids":["fc932c05-ed79-4277-a914-54f3e900d125"]},"title":"Bokeh Application","version":"0.12.2.9747"}};
                  var render_items = [{"docid":"25005de2-a450-4438-831f-0d1267ab62e4","elementid":"84e6c540-a16f-4f6d-af19-ca005664f40b","modelid":"fc932c05-ed79-4277-a914-54f3e900d125"}];
                  
                  Bokeh.embed.embed_items(docs_json, render_items);
              });
          });
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i](window.Bokeh);
        }
        
      }
    
      if (window._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(this));
});