document.addEventListener("DOMContentLoaded", function(event) {
    
    (function(global) {
      function now() {
        return new Date();
      }
    
      var force = "";
    
      if (typeof (window._bokeh_onload_callbacks) === "undefined" || force !== "") {
        window._bokeh_onload_callbacks = [];
        window._bokeh_is_loading = undefined;
      }
    
    
      
      
    
      function run_callbacks() {
        window._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        delete window._bokeh_onload_callbacks
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        window._bokeh_onload_callbacks.push(callback);
        if (window._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        window._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            window._bokeh_is_loading--;
            if (window._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("021104f0-6fd1-4664-a159-8f5d723efb82");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '021104f0-6fd1-4664-a159-8f5d723efb82' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ['https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-compiler-0.12.2.min.js', 'https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js'];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          
          (function outer(modules, cache, entry) {
            if (typeof Bokeh !== "undefined") {
              for (var name in modules) {
                var module = modules[name];
          
                if (typeof(module) === "string") {
                  try {
                    coffee = Bokeh.require("coffee-script")
                  } catch (e) {
                    throw new Error("Compiler requested but failed to import. Make sure bokeh-compiler(-min).js was included.")
                  }
          
                  function compile(code) {
                    var body = coffee.compile(code, {bare: true, shiftLine: true});
                    return new Function("require", "module", "exports", body);
                  }
          
                  modules[name] = [compile(module), {}];
                }
              }
          
              for (var name in modules) {
                Bokeh.require.modules[name] = modules[name];
              }
          
              for (var i = 0; i < entry.length; i++) {
                Bokeh.Models.register_locations(Bokeh.require(entry[i]));
              }
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })({
           "custom/main":[function(require,module,exports){
             module.exports = { Custom: require("custom/custom"),
          DrawTool: require("custom/draw_tool"),
          LatexLabel: require("custom/latex_label"),
          MyFormatter: require("custom/my_formatter"),
          Surface3d: require("custom/surface3d") };
           }, {}],
           "custom/custom": "\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\nclass CustomView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    @render()\n\n    # Set Backbone listener so that when the Bokeh slider has a change\n    # event, we can process the new data\n    @listenTo(@model.slider, \'change\', () => @render())\n\n  render: () ->\n    # Backbone Views create <div> elements by default, accessible as @$el.\n    # Many Bokeh views ignore this default <div>, and instead do things\n    # like draw to the HTML canvas. In this case though, we change the\n    # contents of the <div>, based on the current slider value.\n    @$el.html(\"<h1>#{ @model.text }: #{ @model.slider.value }</h1>\")\n    @$(\'h1\').css({ \'color\': \'#686d8e\', \'background-color\': \'#2a3153\' })\n\nclass Custom extends LayoutDOM.Model\n\n  # If there is an associated view, this is boilerplate.\n  default_view: CustomView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Custom\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. bokeh.core.properties.String will be\n  # p.String in the JS implementation. Where the JS type system is not yet\n  # as rich, you can use p.Any as a \"wildcard\" property type.\n  @define {\n    text:   [ p.String ]\n    slider: [ p.Any    ]\n  }\n\n# This is boilerplate. Every implementation should export a Model\n# and (when applicable) also a View.\nmodule.exports =\n  Model: Custom\n  View: CustomView\n",
          "custom/draw_tool": "\np = require \"core/properties\"\nGestureTool = require \"models/tools/gestures/gesture_tool\"\n\nclass DrawToolView extends GestureTool.View\n\n  # this is executed when the pan/drag event starts\n  _pan_start: (e) ->\n    @model.source.data = {x: [], y: []}\n\n  # this is executed on subsequent mouse/touch moves\n  _pan: (e) ->\n    frame = @plot_model.frame\n    canvas = @plot_view.canvas\n\n    vx = canvas.sx_to_vx(e.bokeh.sx)\n    vy = canvas.sy_to_vy(e.bokeh.sy)\n    if not frame.contains(vx, vy)\n      return null\n\n    x = frame.get(\'x_mappers\').default.map_from_target(vx)\n    y = frame.get(\'y_mappers\').default.map_from_target(vy)\n\n    @model.source.data.x.push(x)\n    @model.source.data.y.push(y)\n    @model.source.trigger(\'change\')\n\n  # this is executed then the pan/drag ends\n  _pan_end: (e) -> return null\n\nclass DrawTool extends GestureTool.Model\n  default_view: DrawToolView\n  type: \"DrawTool\"\n\n  tool_name: \"Drag Span\"\n  icon: \"bk-tool-icon-lasso-select\"\n  event_type: \"pan\"\n  default_order: 12\n\n  @define { source: [ p.Instance ] }\n\nmodule.exports =\n  Model: DrawTool\n  View: DrawToolView\n",
          "custom/latex_label": "\nLabel = require \"models/annotations/label\"\n\nclass LatexLabelView extends Label.View\n  render: () ->\n\n    #--- Start of copied section from ``Label.render`` implementation\n\n    ctx = @plot_view.canvas_view.ctx\n\n    # Here because AngleSpec does units tranform and label doesn\'t support specs\n    switch @mget(\'angle_units\')\n      when \"rad\" then angle = -1 * @mget(\'angle\')\n      when \"deg\" then angle = -1 * @mget(\'angle\') * Math.PI/180.0\n\n    if @mget(\'x_units\') == \"data\"\n      vx = @xmapper.map_to_target(@mget(\'x\'))\n    else\n      vx = @mget(\'x\')\n    sx = @canvas.vx_to_sx(vx)\n\n    if @mget(\'y_units\') == \"data\"\n      vy = @ymapper.map_to_target(@mget(\'y\'))\n    else\n      vy = @mget(\'y\')\n    sy = @canvas.vy_to_sy(vy)\n\n    if @model.panel?\n      panel_offset = @_get_panel_offset()\n      sx += panel_offset.x\n      sy += panel_offset.y\n\n    #--- End of copied section from ``Label.render`` implementation\n\n    # ``katex`` is loaded into the global window at runtime\n    # katex.renderToString returns a html ``span`` element\n    latex = katex.renderToString(@mget(\'text\'), {displayMode: true})\n\n    # Must render as superpositioned div (not on canvas) so that KaTex\n    # css can properly style the text\n    @_css_text(ctx, latex, sx + @mget(\'x_offset\'), sy - @mget(\'y_offset\'), angle)\n\nclass LatexLabel extends Label.Model\n  type: \'LatexLabel\'\n  default_view: LatexLabelView\n\nmodule.exports =\n  Model: LatexLabel\n  View: LatexLabelView\n",
          "custom/my_formatter": "\nTickFormatter = require \"models/formatters/tick_formatter\"\n\nclass MyFormatter extends TickFormatter.Model\n  type: \"MyFormatter\"\n\n  # TickFormatters should implement this method, which accepts a lisst\n  # of numbers (ticks) and returns a list of strings\n  doFormat: (ticks) ->\n    # format the first tick as-is\n    formatted = [\"#{ticks[0]}\"]\n\n    # format the remaining ticks as a difference from the first\n    for i in [1...ticks.length]\n       formatted.push(\"+#{(ticks[i]-ticks[0]).toPrecision(2)}\")\n\n    return formatted\n\nmodule.exports =\n  Model: MyFormatter\n",
          "custom/surface3d": "\n# This file contains the JavaScript (CoffeeScript) implementation\n# for a Bokeh custom extension. The \"surface3d.py\" contains the\n# python counterpart.\n#\n# This custom model wraps one part of the third-party vis.js library:\n#\n#     http://visjs.org/index.html\n#\n# Making it easy to hook up python data analytics tools (NumPy, SciPy,\n# Pandas, etc.) to web presentations using the Bokeh server.\n\n# These \"require\" lines are similar to python \"import\" statements\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\n# This defines some default options for the Graph3d feature of vis.js\n# See: http://visjs.org/graph3d_examples.html for more details.\nOPTIONS =\n  width:  \'600px\'\n  height: \'600px\'\n  style: \'surface\'\n  showPerspective: true\n  showGrid: true\n  keepAspectRatio: true\n  verticalRatio: 1.0\n  legendLabel: \'stuff\'\n  cameraPosition:\n    horizontal: -0.35\n    vertical: 0.22\n    distance: 1.8\n\n# To create custom model extensions that will render on to the HTML canvas\n# or into the DOM, we must create a View subclass for the model. Currently\n# Bokeh models and views are based on BackBone. More information about\n# using Backbone can be found here:\n#\n#     http://backbonejs.org/\n#\n# In this case we will subclass from the existing BokehJS ``LayoutDOM.View``,\n# corresponding to our\nclass Surface3dView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    url = \"https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js\"\n    $.getScript(url).done(@_init)\n\n  # NOTE: we have to use the \"fat arrow\" => here so that \"this\" is bound correctly\n  _init: () =>\n    # Create a new Graph3s using the vis.js API. This assumes the vis.js has\n    # already been loaded (e.g. in a custom app template). In the future Bokeh\n    # models will be able to specify and load external scripts automatically.\n    #\n    # Backbone Views create <div> elements by default, accessible as @$el. Many\n    # Bokeh views ignore this default <div>, and instead do things like draw\n    # to the HTML canvas. In this case though, we use the <div> to attach a\n    # Graph3d to the DOM.\n    @_graph = new vis.Graph3d(@$el[0], @get_data(), OPTIONS)\n\n    # Set Backbone listener so that when the Bokeh data source has a change\n    # event, we can process the new data\n    @listenTo(@model.data_source, \'change\', () =>\n        @_graph.setData(@get_data())\n    )\n\n  # This is the callback executed when the Bokeh data has an change. Its basic\n  # function is to adapt the Bokeh data source to the vis.js DataSet format.\n  get_data: () ->\n    data = new vis.DataSet()\n    source = @model.data_source\n    for i in [0...source.get_length()]\n      data.add({\n        x:     source.get_column(@model.x)[i]\n        y:     source.get_column(@model.y)[i]\n        z:     source.get_column(@model.z)[i]\n        style: source.get_column(@model.color)[i]\n      })\n    return data\n\n# We must also create a corresponding JavaScript Backbone model sublcass to\n# correspond to the python Bokeh model subclass. In this case, since we want\n# an element that can position itself in the DOM according to a Bokeh layout,\n# we subclass from ``LayoutDOM.model``\nclass Surface3d extends LayoutDOM.Model\n\n  # This is usually boilerplate. In some cases there may not be a view.\n  default_view: Surface3dView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Surface3d\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. ``bokeh.core.properties.String`` will be\n  # ``p.String`` in the JS implementatin. Where the JS type system is not yet\n  # as rich, you can use ``p.Any`` as a \"wildcard\" property type.\n  @define {\n    x:           [ p.String           ]\n    y:           [ p.String           ]\n    z:           [ p.String           ]\n    color:       [ p.String           ]\n    data_source: [ p.Instance         ]\n  }\n\n# This is boilerplate. Every implementation should \"export\" a ``Model``\n# and (when applicable) also a ``View``.\nmodule.exports =\n  Model: Surface3d\n  View: Surface3dView\n"
          }, {}, ["custom/main"]);
        },
        
        function(Bokeh) {
          Bokeh.$(function() {
              Bokeh.safely(function() {
                  var docs_json = {"b74a41db-568f-4661-a1bb-73b8af6516e3":{"roots":{"references":[{"attributes":{"data_source":{"id":"3112e448-eb59-487b-8447-ee61cd83ecd7","type":"ColumnDataSource"},"glyph":{"id":"404b09dd-93ce-4fa0-98cb-789088914ed5","type":"Circle"},"hover_glyph":null,"nonselection_glyph":{"id":"678d46ae-5941-43d5-a6fd-d4c6503071f2","type":"Circle"},"selection_glyph":null},"id":"07b4ab97-0f44-4caa-ac04-6b7f15a354d1","type":"GlyphRenderer"},{"attributes":{},"id":"ec10bb05-7583-4162-8682-1d86e617f9dd","type":"BasicTicker"},{"attributes":{},"id":"d168ca98-b3da-468b-9b27-d143d0495bec","type":"BasicTickFormatter"},{"attributes":{},"id":"1b983206-274b-41ce-a40c-65ddc2683e0f","type":"BasicTicker"},{"attributes":{"callback":null},"id":"a23d31be-38b9-4b88-a668-4bbe3d3868af","type":"DataRange1d"},{"attributes":{"callback":{"id":"0b1173b9-3b74-4f1d-8cdb-a3a5de6af58e","type":"CustomJS"},"column_names":["y","x"],"data":{"x":[0.8910871147285798,0.13238531454169467,0.6813609192662677,0.26496324976957564,0.36094088019250514,0.616731236807947,0.3284127878051888,0.634735217162272,0.04257034523664005,0.12326760212415211,0.4872639840796572,0.2750883522776072,0.8778458512937369,0.09400336881392701,0.233565434878366,0.12092864739427345,0.029625779654936957,0.4361002900040183,0.5347057790780453,0.3914132005511062,0.00863059422835144,0.9035777115276588,0.14446602429064237,0.8872782246657857,0.6114114428549766,0.5696140816294415,0.4600716339598603,0.8212753823851273,0.9310413384709891,0.42683571948466936,0.5511307809905187,0.9047197246826564,0.19057330219140745,0.7049022728981741,0.6650789147167857,0.520958860494837,0.9739595582385152,0.8346547659170717,0.04452528324784055,0.5527539730419967,0.2265268221111777,0.22379651034588466,0.8217813869377525,0.24194860054150868,0.7650685195336471,0.0676777227224521,0.9401499894176429,0.6286646684673404,0.38182179404591143,0.03610051557441052,0.9640765316599159,0.3201047392355322,0.5898689355845276,0.16866114248555253,0.48130607832422934,0.8340528702814131,0.02762808139626305,0.9183398757722593,0.8661795738964345,0.3374467112946016,0.5718805730357662,0.3405906189608169,0.8127627572739397,0.4008146892474672,0.5923629902653499,0.6857863525714306,0.5586913960133655,0.6385265383832791,0.890260914722267,0.36661852266956996,0.11642005013303935,0.23035263765159253,0.043243468089819936,0.1127873961381457,0.07610130486575084,0.468628360274139,0.8073588000039316,0.9261521232939284,0.3069073624264883,0.6145740043353054,0.5146502076285606,0.6127011222402989,0.36652685701117627,0.1135063440765286,0.4501452364033197,0.8707751731447393,0.46088598465531816,0.12602256083922414,0.5324073919900797,0.44106138789213856,0.21961487177789552,0.23597309078201512,0.9527182869675298,0.562589084199726,0.6801515864533334,0.05392487660334977,0.23654285043474532,0.7692417931578635,0.2518891634714605,0.09442581550261453,0.33888456551652635,0.7565716396485949,0.9455413528976697,0.03556852464393412,0.8024189996082742,0.5143833796206908,0.05939868163609052,0.16207612851045994,0.7825726630345263,0.7345237404686631,0.010401265169692753,0.4643797481980311,0.3019391155839658,0.591291012857929,0.07109580491251699,0.7354722872143763,0.17006269202451962,0.33789882096025414,0.6216067804891764,0.3922084495759759,0.7984461155777249,0.6013334025568439,0.23424640332136193,0.361780629642527,0.7555911473059614,0.5926959152776242,0.9718205822594276,0.1717562413032332,0.968612726241695,0.7609921259081007,0.7213958242467394,0.4067436805587441,0.25549896062479094,0.801171971789211,0.87403012018758,0.8788101587730078,0.7219539310810442,0.07278776014977151,0.8418242221034538,0.9556868075010384,0.11033681170989662,0.6823476297853346,0.4017898431504294,0.018056240351202457,0.17591082447143724,0.34218118207379755,0.8184416043833477,0.3723037013242182,0.7336894971193779,0.033518607003739875,0.9910845198259584,0.2206399315772446,0.2964960212501925,0.5360512856422589,0.3876555382822703,0.6905515493614004,0.1601218608458057,0.336559198238892,0.322270916054174,0.33967947252174213,0.24895895320963357,0.23744524880792361,0.430387793414555,0.3219713169652664,0.11717570688928236,0.6621384356037446,0.8641156939652375,0.6906390266685197,0.856484903155232,0.2336197553339434,0.8624116918982633,0.4374371686358052,0.1507795137154897,0.4299597797539775,0.9200759605212352,0.40518322692952524,0.5417642662506101,0.924201838047309,0.19079592819336877,0.10458652815440206,0.4381430196889341,0.17057339357822543,0.44566806339654597,0.7362160563469886,0.4539402736426179,0.16809701404305022,0.9227922178913966,0.052997559513458525,0.48873742928987207,0.8622886343732281,0.3057948746215867,0.7483208323460949,0.04709502060349413,0.22427743378734266,0.5902475482517039,0.3406184831701007,0.5657684154894008,0.5094763292432016,0.4397014720258804,0.5450648281653345,0.9070154486452187,0.3205534017483539,0.7541983748854338,0.17917659355549276,0.795468854842772,0.3951989589073658,0.2825371930712809,0.48998757117969505,0.24485664479180924,0.769596306215981,0.21523905085879957,0.3043549579514284,0.19343616340427072,0.010496603021043938,0.9462482851726303,0.8646009813472915,0.9383937481623095,0.7134615289531033,0.5440607257973643,0.322941341756397,0.8169207718569156,0.4042543807107044,0.6945264625995214,0.3706950190708047,0.14535796104700727,0.8117088234943144,0.9905797612768019,0.5048251196486409,0.38101042232566895,0.3554730538239059,0.026710610830279702,0.1863532916686218,0.6397921181519938,0.6236160090397904,0.5563688917881779,0.5932041950253288,0.8284563979529452,0.6971035968863143,0.39691346350437995,0.001266078070091936,0.6732728199001432,0.049499999295607666,0.5002555396163948,0.08062640242118901,0.21784624381432682,0.36741048110043273,0.40641919693350403,0.9739743530965587,0.31673756509014783,0.7235968669625196,0.4242582430315933,0.16604023542199486,0.9956310648384178,0.3721904017826684,0.0531308370779755,0.26626403579164337,0.23154142443072068,0.1521882869788207,0.32321894739766466,0.010608850588587848,0.4423627366724878,0.17562043857376453,0.9178653518937055,0.10566235926658829,0.34220466083248613,0.27610433575773285,0.645442669808775,0.293827042860747,0.7316115214000094,0.7807012716519112,0.2574202572018164,0.42443759120967917,0.2526603882516464,0.9981934319384632,0.39608932944233666,0.22589183604048235,0.2921499845435991,0.744147603895303,0.8563638390117255,0.49356282841469756,0.6312955946475732,0.21946316800723553,0.04509491698903334,0.11760885349502126,0.9902294384761328,0.7210353083466583,0.6773332858194153,0.9219074402512734,0.5624236847388512,0.21750985430139358,0.4062941603384478,0.25421209137468026,0.036611248556264075,0.3920809260244894,0.42390077061118625,0.08649984996904614,0.09043186950962456,0.013516068746267873,0.9732608858791214,0.8044285202511616,0.5078804128763769,0.45616591827519704,0.9735639736804632,0.524868137781925,0.74200767692652,0.6331075190771855,0.38865146798926886,0.9141934427423292,0.5405870836144753,0.6242460348691772,0.8939963877097888,0.7937752949491225,0.385599800232606,0.8994713111850545,0.6557755024574542,0.3696075713899414,0.8140526659384931,0.6573244883845828,0.5854287707656718,0.6313901741531126,0.24581112557224905,0.8731210108006162,0.9131438815786683,0.06140603229775399,0.037196503172668205,0.6513438168360384,0.8839780025724391,0.6774874492587242,0.575260491169269,0.36592202637478033,0.37969738496482675,0.9655034675817875,0.0461568989640303,0.857277927543653,0.6900766415385129,0.7263032777755316,0.6145741436412482,0.427501089281615,0.13821100657962226,0.2526469017616406,0.509955698065329,0.5178889660144187,0.4044244239652216,0.47854052852919093,0.8453852152279155,0.7878359680854685,0.6104209888052629,0.5206204801269362,0.17354928823440652,0.531247663656507,0.21035268271548446,0.5201335212210976,0.4712051877723201,0.6742672779560096,0.6768135634610064,0.8154064052797803,0.4838277442079243,0.24653303324754539,0.528588732705834,0.7932271249270958,0.8637529244073512,0.7368588201326093,0.6732231442889178,0.6891145226105209,0.7592388667250308,0.32564422844714214,0.2784818061633386,0.2331500291062275,0.21521041749656789,0.48282917456669994,0.5410294756037322,0.02308313001077522,0.7819159515126541,0.8083072057023479,0.5054725599624177,0.6180836434576045,0.25071475495455975,0.36622424786546615,0.10254746653853719,0.7951267710751473,0.3153353514174898,0.7834465649028423,0.7338818331251936,0.2814657876516399,0.3149356473677841,0.8406782231976175,0.5204686544629646,0.11895043882224454,0.5592436080921156,0.6510708396720153,0.24641486943114843,0.39926846747698863,0.23755062718621278,0.018642988028603313,0.0005086491835600837,0.8992419421170474,0.6471089684437029,0.9064553041932917,0.6427198682973532,0.3523075106816018,0.14210877680708955,0.6676176346813383,0.39454037418214505,0.5832109547587239,0.3878904042949014,0.8868190145420688,0.1104560601638982,0.828941480397515,0.5655100511034356,0.248354210265316,0.6423969466962973,0.7754299718169684,0.051322388257063256,0.4266213574372151,0.34354700630956014,0.02739191502499716,0.8835478292908141,0.093158354993092,0.4235846398477995,0.9805335774176676,0.7499409669881434,0.9300090604348443,0.7781904260252007,0.39322674733514196,0.7171695505324307,0.7376034418918687,0.9727618094125438,0.8625645224579247,0.5278891042367947,0.3673442076288719,0.8115465677229124,0.5796495932352718,0.2922082717386073,0.03012610058776588,0.8644113179042424,0.39577255201626527,0.5263317320037634,0.8680176036463746,0.6045121791193978,0.10759485069020447,0.7624975650665431,0.25945052011812564,0.9295436565530562,0.3710029882945026,0.6520674178265138,0.8229349896234386,0.47895188825363755,0.38998498796359427,0.40092734925481976,0.47735439760308984,0.25163666807614504,0.1852739164909103,0.6328066676500785,0.31439249580719586,0.3863761862900257,0.4653842505930119,0.5049566558175348,0.9261956522202495,0.10691100240567675,0.7489451553350828,0.44701511172991026,0.9895126213382895,0.040887172146256034,0.7387927496573161,0.7572085201039552,0.2856573563254202,0.17830160552594054,0.3795956354168625,0.9780399038192351,0.6117598745941896,0.13841798516417259,0.7866950485265326,0.019694214030797297,0.5665134944482988,0.7228825768330073,0.9188535338889088,0.9426568446043226,0.9601269473232781,0.7251696373132772,0.35834244145896377,0.9515416793519473,0.5409481898791102,0.3561343401195902,0.3197893407844835,0.2129737218985368,0.3813023545308233,0.49932971344715993,0.13208093778996488,0.16968268269586906,0.7645778005910135,0.001267707104141147,0.059422362116342,0.5456544060481195,0.34128917961176897,0.18623670656817115,0.537476936205674,0.8018366198605866,0.8488324303326465,0.516548974354008,0.6284267038459496],"y":[0.8035976464435339,0.33607837823939923,0.752304132500377,0.039081820595247785,0.889292496727905,0.6663136130811713,0.5801596138599814,0.2570800090977291,0.21324098386445722,0.08073589317123642,0.998848225220485,0.31236304481200994,0.24373850432497657,0.756923469298051,0.4810050870331787,0.5110929728974136,0.978515895737806,0.15229129002836417,0.7055802707336055,0.1962227613814751,0.4012651040153886,0.36901186475986325,0.863458150555898,0.5537803527323915,0.3444043728569668,0.5376370511286663,0.5966482030573576,0.2708132921823194,0.8124816769387616,0.4557177586624429,0.3697706996405512,0.07435437317598237,0.9124591558885076,0.06729646293682456,0.10097200812632545,0.48014899375327,0.41776946848969665,0.0639909117021159,0.023398698812177376,0.5126505538547957,0.03675732577379498,0.8771665668889613,0.8003744143079325,0.29610675268987074,0.5541887410102181,0.5428667251403563,0.4419472886096585,0.8605708746415751,0.5251807525259337,0.7966893203221306,0.6355141830611863,0.0537446009387188,0.20331583551306864,0.9032348964329012,0.42330305004690805,0.999435384752031,0.22840707635267976,0.8776624519404599,0.0905735537912763,0.5487940178955678,0.8824823969212169,0.40966951481056746,0.8618657372664799,0.5612187010210133,0.8535289436895684,0.47125087582386316,0.46322466853817057,0.5112984297267396,0.3489472666609921,0.7756063537451872,0.2170120679034584,0.1727023181785734,0.13802499304003746,0.6110182913805253,0.9406012509457508,0.42132107268275343,0.8290293050564841,0.5882018142412451,0.9564050249950455,0.04949790260259723,0.84106025931489,0.7605709975340943,0.020103857347668508,0.3377313142648485,0.8917112471834426,0.5037334204734147,0.6934600795498254,0.46937787620861027,0.5738454214914459,0.7448400229506146,0.5285831831652912,0.8246971554241208,0.11964338216441572,0.4883070427641527,0.8872778607661149,0.5519724803277155,0.6897465191350518,0.0743615682867107,0.32298145072999185,0.5292988368051491,0.49154413704453825,0.580173443077677,0.6374254892768735,0.23923594941272763,0.7825217609240255,0.06330223141264057,0.8275536472101841,0.2617216407575669,0.7321423025275847,0.4610071386610781,0.13944431529484502,0.4258800607729929,0.6165107359848396,0.859332427811446,0.5154849873189843,0.24596112789539348,0.07417547238623057,0.08249031637176907,0.07518121324927407,0.48740810942894086,0.9875346104556543,0.42482643526590824,0.05014811819557463,0.026662497137906027,0.4673785768917953,0.3721092361610987,0.08067589710361756,0.8188852999733893,0.7069310270919484,0.30402659559012457,0.4858851131675066,0.867029116313347,0.3839170301756478,0.6672850481109659,0.26207701500993896,0.5189053649238795,0.34567764011073365,0.44750141353364614,0.8896684596228821,0.035707156766827675,0.4084027829280835,0.9106800069877914,0.8933333328844562,0.5527357758560395,0.19976230599438072,0.15560036363209706,0.853485675460575,0.39560469834727485,0.9591909201980008,0.23953025125631455,0.3824390423840588,0.9517712024366289,0.4550772373763795,0.7655793367000304,0.127800759108335,0.27476636508357666,0.43800356673949925,0.6552795721420829,0.3286360754740031,0.3456490403419473,0.053424502222268244,0.22920497617129032,0.9327998926870326,0.5767837921378262,0.4267957762073782,0.09011329117530087,0.5084480882185315,0.8205635992487998,0.929987553075729,0.9780614379272828,0.021737648844037505,0.14091260241644388,0.735320160891054,0.551842112961153,0.42924215368830854,0.1559160471729688,0.8624853381585277,0.1322020702198552,0.16476954324708237,0.9603073995240423,0.6223202793399472,0.22941071974798233,0.47207671206697,0.5346330816718047,0.8002903871752286,0.9133703544740925,0.05717531764874473,0.010763036334967002,0.5746734589353936,0.4533057921271437,0.9386762320231603,0.5635372595713336,0.624069480278621,0.9491337761643811,0.9952143923352633,0.7644429132145649,0.5778726022595461,0.12509575846610432,0.3616857178357479,0.19581473146533135,0.36576713192879373,0.557236638822929,0.7056389186429985,0.1394693299275389,0.861593034999228,0.6821870076688714,0.10136687801608568,0.03741364975266448,0.6633424527621611,0.9812713609003137,0.1997318369187039,0.6880105495482084,0.7284145958033019,0.2601160517874005,0.768719572519872,0.09425078284418287,0.6321782273716838,0.20330542506439442,0.043264101420158574,0.3958115457635214,0.8383535514572575,0.7838764742662346,0.4419817452296353,0.8516573313644831,0.7893009752145178,0.5137850523010831,0.801174848646366,0.19349254130044669,0.06353181903498195,0.8678952340119063,0.0015547835164841928,0.9749183872205299,0.078961361667652,0.40444699062424017,0.9709045363168141,0.3300409953422111,0.7414666576098431,0.5365612670197603,0.012107110770446683,0.7293871036674894,0.5427758803814936,0.5067890581055793,0.6904645668509027,0.6758761908766373,0.4432774878008676,0.07843771514827058,0.4177111723788205,0.7786323367574218,0.08454843551083102,0.4749214192755056,0.32189915361825117,0.8109746099411187,0.6222856615313787,0.23012235205486975,0.41055359459183227,0.6505246592421878,0.8301150450661262,0.7993924918610384,0.8511382364821835,0.0983870348336443,0.6826817928738109,0.7191774528068801,0.8317490270124444,0.9085824741305747,0.41953926656819074,0.3651508347754666,0.7082911907381446,0.4143515283669773,0.009903537471904977,0.6836783948740174,0.541230032618439,0.5037173756608353,0.7740583473674517,0.04944666167681577,0.08564774474949843,0.8492735113789052,0.5069070722398851,0.237708511179077,0.6233701847497387,0.243189085025606,0.017000292085581292,0.8272422538879961,0.31248988386568644,0.2955868904287484,0.4746361281815088,0.828091414021643,0.32179699122373906,0.5739137999988203,0.5035570294202788,0.16458841969187554,0.4444437318182989,0.8905403744955013,0.22640999898775738,0.7412431088809515,0.8245129053549842,0.2709550536375327,0.8274512174734344,0.35402341813091665,0.17682976765122116,0.521273766430072,0.2590180376446509,0.23690951002296523,0.917786580520321,0.797638629623937,0.23664429907969609,0.5316759678435625,0.8088910272224004,0.10944126084173966,0.3630468724822715,0.9466079842569443,0.19475683558961743,0.04840031612948659,0.07318019542383791,0.45755568456029694,0.15997880739661297,0.7085091093315891,0.3160954918834986,0.18708912140026512,0.1837772174278861,0.30343201447953183,0.15280342965601046,0.3788800698631375,0.2881991771265008,0.4101229680015024,0.8828785503291647,0.9590205413943593,0.16263432196669392,0.29540443464409705,0.03722658889868635,0.02448511793336683,0.48253539768271847,0.701579966027693,0.9834362188205328,0.19499714962508452,0.789460152985033,0.5951335343686287,0.7808690014017691,0.42222289133065016,0.18704160863702646,0.6463478099647079,0.1191685357449983,0.4437334405033365,0.7667495685002013,0.6631843066820384,0.5660845917768863,0.22548302610813753,0.7326524496603769,0.2560827415448179,0.12014330801263484,0.41367186219241137,0.8702009933457422,0.6923220172173328,0.8797405941194187,0.8709395252091877,0.5692525992322869,0.9940104982286427,0.025030601540326214,0.381251880669931,0.46454160492107677,0.9232975387893241,0.025234491296420303,0.4179037571576989,0.3352240906838426,0.01852355256283822,0.04483628236001691,0.5063619915493646,0.08327706478336205,0.6233877499867525,0.5976850433344153,0.4648949208497093,0.023974235048525694,0.7205323472150552,0.422314775930806,0.6546900761649762,0.33392313012620234,0.7073275773270034,0.22548522040713903,0.46698679543423716,0.4468462296617035,0.11945550852983755,0.37601098174424585,0.0691236008899967,0.41814197296842526,0.16429103699121517,0.1487656237540328,0.07711606561131357,0.6485365785026411,0.022728207020728086,0.07646621088330297,0.29284111087170417,0.15654239514609758,0.8980580443769867,0.6511476108902048,0.5215605997305534,0.8258402237394212,0.7826522424109876,0.08075268447236017,0.9983468850915669,0.9149435953651817,0.33114385588831796,0.9812478077252503,0.07894433049372951,0.7102147139161151,0.6238963394828075,0.4128807609415369,0.2727104731155129,0.9617275409421815,0.7685054933499436,0.9736588298166059,0.4499698652627153,0.26219335034418556,0.3676457741562288,0.6428302007820134,0.7864626735520592,0.896659444539124,0.0867191261540392,0.03426442553641951,0.5524855472376847,0.05600194287262983,0.2611514074194672,0.6473553154459897,0.4546181412049797,0.0386921444042172,0.4348467940183546,0.08429376903346675,0.9318089120179939,0.6821209342044283,0.5481544299189435,0.3287986920117737,0.11201158038178438,0.785572759340396,0.3344971799416123,0.710779510785462,0.5183629852736399,0.4043673004532288,0.0454456255974548,0.13522007846964978,0.6262990318547895,0.7602822813972834,0.262250911472109,0.42919056593334304,0.6580501035362009,0.36947565148134953,0.7918839487313846,0.5142367982074996,0.09974498453905334,0.17357625053297399,0.7128404523223386,0.8375651319969722,0.9545328141339029,0.05370697349188425,0.44919721276835045,0.38984468846121656,0.6725109157058387,0.4597655377420603,0.46052889645454986,0.6739974772251071,0.8798443933953299,0.8619698039356772,0.9254430528856322,0.967258573755225,0.8617370055683932,0.9240632022875195,0.7184753766128511,0.2681797655633409,0.05749323907792636,0.19426411428892698,0.0564264420899967,0.6788368731150841,0.08663614390983143,0.8067992670338051,0.8126174538536187,0.9326194078066429,0.1357642816310577,0.8260342088131345,0.773222533268344,0.026765482366876814,0.7277672884065138,0.11369984787576293,0.26668427391498706,0.13825962040782136,0.12809324874928663,0.1106112826152883,0.5669835449321097,0.8195432273543702,0.42904671448456166,0.2397354039886591,0.09394246678420315,0.16334429543911788,0.6703865197708574,0.4298906520165997,0.14163430079662098,0.49041726646172734,0.5175206648579481,0.8927872187211957,0.6998991596167508,0.3166949502894758,0.30425374587040355,0.23060244113756,0.39712760931236124]}},"id":"88f67088-7c1b-4f81-afe5-7deaa0ef434b","type":"ColumnDataSource"},{"attributes":{"args":{"s2":{"id":"3112e448-eb59-487b-8447-ee61cd83ecd7","type":"ColumnDataSource"}},"code":"\n        var inds = cb_obj.get('selected')['1d'].indices;\n        var d1 = cb_obj.get('data');\n        var d2 = s2.get('data');\n        d2['x'] = []\n        d2['y'] = []\n        for (i = 0; i < inds.length; i++) {\n            d2['x'].push(d1['x'][inds[i]])\n            d2['y'].push(d1['y'][inds[i]])\n        }\n        s2.trigger('change');\n    "},"id":"0b1173b9-3b74-4f1d-8cdb-a3a5de6af58e","type":"CustomJS"},{"attributes":{"formatter":{"id":"96b165f3-c57c-494d-a2a9-f98c3c6c91c1","type":"BasicTickFormatter"},"plot":{"id":"2852af67-484e-4a82-838a-55a173892e2c","subtype":"Figure","type":"Plot"},"ticker":{"id":"1b983206-274b-41ce-a40c-65ddc2683e0f","type":"BasicTicker"}},"id":"15c776df-b692-4ce1-aa20-4cfc82826381","type":"LinearAxis"},{"attributes":{"formatter":{"id":"3ec4ee36-1bf9-4944-8723-b2d3f24d285e","type":"BasicTickFormatter"},"plot":{"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"},"ticker":{"id":"ec10bb05-7583-4162-8682-1d86e617f9dd","type":"BasicTicker"}},"id":"1687ef43-b1b6-4ea6-aa52-1ce4c9e48032","type":"LinearAxis"},{"attributes":{},"id":"bc92f9bd-2252-4d26-b956-3f0f78ea90cd","type":"BasicTickFormatter"},{"attributes":{"callback":null,"overlay":{"id":"0490f049-3d1e-4b96-9c56-14618d97176f","type":"PolyAnnotation"},"plot":{"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"}},"id":"95abda3e-7e31-40b4-a7d2-75799ab6eb80","type":"LassoSelectTool"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"xs_units":"screen","ys_units":"screen"},"id":"0490f049-3d1e-4b96-9c56-14618d97176f","type":"PolyAnnotation"},{"attributes":{"below":[{"id":"79efcc41-ff83-4363-ac4b-615a9f1d02e8","type":"LinearAxis"}],"left":[{"id":"1687ef43-b1b6-4ea6-aa52-1ce4c9e48032","type":"LinearAxis"}],"plot_height":400,"plot_width":400,"renderers":[{"id":"79efcc41-ff83-4363-ac4b-615a9f1d02e8","type":"LinearAxis"},{"id":"f7e76c52-5283-452b-a381-0e45b1ad1556","type":"Grid"},{"id":"1687ef43-b1b6-4ea6-aa52-1ce4c9e48032","type":"LinearAxis"},{"id":"33bc27ea-8ff5-4734-8141-36828b801a7b","type":"Grid"},{"id":"0490f049-3d1e-4b96-9c56-14618d97176f","type":"PolyAnnotation"},{"id":"cda4f1ec-97be-4373-ab96-49b8804620cd","type":"GlyphRenderer"}],"title":{"id":"443e3ffa-f37f-48e6-aff1-f7fce651aaeb","type":"Title"},"tool_events":{"id":"2a071a2f-e03e-469b-85ba-bc6653264dd8","type":"ToolEvents"},"toolbar":{"id":"5633e76e-db4a-42e5-b0fd-5963ad445abe","type":"Toolbar"},"x_range":{"id":"a23d31be-38b9-4b88-a668-4bbe3d3868af","type":"DataRange1d"},"y_range":{"id":"67d7a8fe-208c-4efe-820c-3386e2c4700c","type":"DataRange1d"}},"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"},{"attributes":{"plot":{"id":"2852af67-484e-4a82-838a-55a173892e2c","subtype":"Figure","type":"Plot"},"ticker":{"id":"8ff97073-e1f9-49de-83d1-39325576bb98","type":"BasicTicker"}},"id":"a8a16745-8d36-4787-867e-9866732ffc5a","type":"Grid"},{"attributes":{"plot":null,"text":"Watch Here"},"id":"3e374f26-7c92-4b04-9f28-1851d692ba4b","type":"Title"},{"attributes":{},"id":"96b165f3-c57c-494d-a2a9-f98c3c6c91c1","type":"BasicTickFormatter"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"x":{"field":"x"},"y":{"field":"y"}},"id":"2dce64f6-7849-48cc-8790-15f37be52d6f","type":"Circle"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto"},"id":"9a243fe3-636d-4cc7-bf6f-bd32ba63962f","type":"Toolbar"},{"attributes":{"plot":{"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"},"ticker":{"id":"f5a89b67-9403-4356-96d7-626946f61ca1","type":"BasicTicker"}},"id":"f7e76c52-5283-452b-a381-0e45b1ad1556","type":"Grid"},{"attributes":{"data_source":{"id":"88f67088-7c1b-4f81-afe5-7deaa0ef434b","type":"ColumnDataSource"},"glyph":{"id":"d3a5ce91-a626-4449-94d2-9039ef73a80d","type":"Circle"},"hover_glyph":null,"nonselection_glyph":{"id":"2dce64f6-7849-48cc-8790-15f37be52d6f","type":"Circle"},"selection_glyph":null},"id":"cda4f1ec-97be-4373-ab96-49b8804620cd","type":"GlyphRenderer"},{"attributes":{},"id":"8ff97073-e1f9-49de-83d1-39325576bb98","type":"BasicTicker"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"95abda3e-7e31-40b4-a7d2-75799ab6eb80","type":"LassoSelectTool"}]},"id":"5633e76e-db4a-42e5-b0fd-5963ad445abe","type":"Toolbar"},{"attributes":{"formatter":{"id":"d168ca98-b3da-468b-9b27-d143d0495bec","type":"BasicTickFormatter"},"plot":{"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"},"ticker":{"id":"f5a89b67-9403-4356-96d7-626946f61ca1","type":"BasicTicker"}},"id":"79efcc41-ff83-4363-ac4b-615a9f1d02e8","type":"LinearAxis"},{"attributes":{"callback":null},"id":"67d7a8fe-208c-4efe-820c-3386e2c4700c","type":"DataRange1d"},{"attributes":{"formatter":{"id":"bc92f9bd-2252-4d26-b956-3f0f78ea90cd","type":"BasicTickFormatter"},"plot":{"id":"2852af67-484e-4a82-838a-55a173892e2c","subtype":"Figure","type":"Plot"},"ticker":{"id":"8ff97073-e1f9-49de-83d1-39325576bb98","type":"BasicTicker"}},"id":"c15cd9b3-acff-49cc-96be-f0c6cec43ea5","type":"LinearAxis"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.6},"line_color":{"value":"#1f77b4"},"x":{"field":"x"},"y":{"field":"y"}},"id":"d3a5ce91-a626-4449-94d2-9039ef73a80d","type":"Circle"},{"attributes":{},"id":"3ec4ee36-1bf9-4944-8723-b2d3f24d285e","type":"BasicTickFormatter"},{"attributes":{"dimension":1,"plot":{"id":"2852af67-484e-4a82-838a-55a173892e2c","subtype":"Figure","type":"Plot"},"ticker":{"id":"1b983206-274b-41ce-a40c-65ddc2683e0f","type":"BasicTicker"}},"id":"ce3a7b9f-e325-4628-8017-b69e7ce978fd","type":"Grid"},{"attributes":{"dimension":1,"plot":{"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"},"ticker":{"id":"ec10bb05-7583-4162-8682-1d86e617f9dd","type":"BasicTicker"}},"id":"33bc27ea-8ff5-4734-8141-36828b801a7b","type":"Grid"},{"attributes":{"callback":null},"id":"bc0a4295-6225-40d0-a84f-21c9a6cf6687","type":"Range1d"},{"attributes":{"callback":null},"id":"051b1df2-ded8-4b75-868d-7afc63f5182c","type":"Range1d"},{"attributes":{"callback":null,"column_names":["y","x"],"data":{"x":[],"y":[]}},"id":"3112e448-eb59-487b-8447-ee61cd83ecd7","type":"ColumnDataSource"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.6},"line_color":{"value":"#1f77b4"},"x":{"field":"x"},"y":{"field":"y"}},"id":"404b09dd-93ce-4fa0-98cb-789088914ed5","type":"Circle"},{"attributes":{"children":[{"id":"5691d0fb-b2b8-4d59-9ce7-458a68188086","subtype":"Figure","type":"Plot"},{"id":"2852af67-484e-4a82-838a-55a173892e2c","subtype":"Figure","type":"Plot"}]},"id":"8f94e8ca-e886-48c8-a8e5-e1d2a8c5d9e3","type":"Row"},{"attributes":{"below":[{"id":"c15cd9b3-acff-49cc-96be-f0c6cec43ea5","type":"LinearAxis"}],"left":[{"id":"15c776df-b692-4ce1-aa20-4cfc82826381","type":"LinearAxis"}],"plot_height":400,"plot_width":400,"renderers":[{"id":"c15cd9b3-acff-49cc-96be-f0c6cec43ea5","type":"LinearAxis"},{"id":"a8a16745-8d36-4787-867e-9866732ffc5a","type":"Grid"},{"id":"15c776df-b692-4ce1-aa20-4cfc82826381","type":"LinearAxis"},{"id":"ce3a7b9f-e325-4628-8017-b69e7ce978fd","type":"Grid"},{"id":"07b4ab97-0f44-4caa-ac04-6b7f15a354d1","type":"GlyphRenderer"}],"title":{"id":"3e374f26-7c92-4b04-9f28-1851d692ba4b","type":"Title"},"tool_events":{"id":"0e4ebea2-7106-44a6-a858-95f1f1a708ed","type":"ToolEvents"},"toolbar":{"id":"9a243fe3-636d-4cc7-bf6f-bd32ba63962f","type":"Toolbar"},"x_range":{"id":"bc0a4295-6225-40d0-a84f-21c9a6cf6687","type":"Range1d"},"y_range":{"id":"051b1df2-ded8-4b75-868d-7afc63f5182c","type":"Range1d"}},"id":"2852af67-484e-4a82-838a-55a173892e2c","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"2a071a2f-e03e-469b-85ba-bc6653264dd8","type":"ToolEvents"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"x":{"field":"x"},"y":{"field":"y"}},"id":"678d46ae-5941-43d5-a6fd-d4c6503071f2","type":"Circle"},{"attributes":{},"id":"f5a89b67-9403-4356-96d7-626946f61ca1","type":"BasicTicker"},{"attributes":{},"id":"0e4ebea2-7106-44a6-a858-95f1f1a708ed","type":"ToolEvents"},{"attributes":{"plot":null,"text":"Select Here"},"id":"443e3ffa-f37f-48e6-aff1-f7fce651aaeb","type":"Title"}],"root_ids":["8f94e8ca-e886-48c8-a8e5-e1d2a8c5d9e3"]},"title":"Bokeh Application","version":"0.12.2.9747"}};
                  var render_items = [{"docid":"b74a41db-568f-4661-a1bb-73b8af6516e3","elementid":"021104f0-6fd1-4664-a159-8f5d723efb82","modelid":"8f94e8ca-e886-48c8-a8e5-e1d2a8c5d9e3"}];
                  
                  Bokeh.embed.embed_items(docs_json, render_items);
              });
          });
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i](window.Bokeh);
        }
        
      }
    
      if (window._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(this));
});