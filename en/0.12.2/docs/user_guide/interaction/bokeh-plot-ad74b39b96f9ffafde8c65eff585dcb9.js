document.addEventListener("DOMContentLoaded", function(event) {
    
    (function(global) {
      function now() {
        return new Date();
      }
    
      var force = "";
    
      if (typeof (window._bokeh_onload_callbacks) === "undefined" || force !== "") {
        window._bokeh_onload_callbacks = [];
        window._bokeh_is_loading = undefined;
      }
    
    
      
      
    
      function run_callbacks() {
        window._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        delete window._bokeh_onload_callbacks
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        window._bokeh_onload_callbacks.push(callback);
        if (window._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        window._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            window._bokeh_is_loading--;
            if (window._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("1aa328f7-62e2-41c5-a318-f33515c5045b");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '1aa328f7-62e2-41c5-a318-f33515c5045b' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ['https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.js', 'https://cdn.bokeh.org/bokeh/release/bokeh-compiler-0.12.2.min.js', 'https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js'];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          
          (function outer(modules, cache, entry) {
            if (typeof Bokeh !== "undefined") {
              for (var name in modules) {
                var module = modules[name];
          
                if (typeof(module) === "string") {
                  try {
                    coffee = Bokeh.require("coffee-script")
                  } catch (e) {
                    throw new Error("Compiler requested but failed to import. Make sure bokeh-compiler(-min).js was included.")
                  }
          
                  function compile(code) {
                    var body = coffee.compile(code, {bare: true, shiftLine: true});
                    return new Function("require", "module", "exports", body);
                  }
          
                  modules[name] = [compile(module), {}];
                }
              }
          
              for (var name in modules) {
                Bokeh.require.modules[name] = modules[name];
              }
          
              for (var i = 0; i < entry.length; i++) {
                Bokeh.Models.register_locations(Bokeh.require(entry[i]));
              }
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })({
           "custom/main":[function(require,module,exports){
             module.exports = { Custom: require("custom/custom"),
          DrawTool: require("custom/draw_tool"),
          LatexLabel: require("custom/latex_label"),
          MyFormatter: require("custom/my_formatter"),
          Surface3d: require("custom/surface3d") };
           }, {}],
           "custom/custom": "\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\nclass CustomView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    @render()\n\n    # Set Backbone listener so that when the Bokeh slider has a change\n    # event, we can process the new data\n    @listenTo(@model.slider, \'change\', () => @render())\n\n  render: () ->\n    # Backbone Views create <div> elements by default, accessible as @$el.\n    # Many Bokeh views ignore this default <div>, and instead do things\n    # like draw to the HTML canvas. In this case though, we change the\n    # contents of the <div>, based on the current slider value.\n    @$el.html(\"<h1>#{ @model.text }: #{ @model.slider.value }</h1>\")\n    @$(\'h1\').css({ \'color\': \'#686d8e\', \'background-color\': \'#2a3153\' })\n\nclass Custom extends LayoutDOM.Model\n\n  # If there is an associated view, this is boilerplate.\n  default_view: CustomView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Custom\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. bokeh.core.properties.String will be\n  # p.String in the JS implementation. Where the JS type system is not yet\n  # as rich, you can use p.Any as a \"wildcard\" property type.\n  @define {\n    text:   [ p.String ]\n    slider: [ p.Any    ]\n  }\n\n# This is boilerplate. Every implementation should export a Model\n# and (when applicable) also a View.\nmodule.exports =\n  Model: Custom\n  View: CustomView\n",
          "custom/draw_tool": "\np = require \"core/properties\"\nGestureTool = require \"models/tools/gestures/gesture_tool\"\n\nclass DrawToolView extends GestureTool.View\n\n  # this is executed when the pan/drag event starts\n  _pan_start: (e) ->\n    @model.source.data = {x: [], y: []}\n\n  # this is executed on subsequent mouse/touch moves\n  _pan: (e) ->\n    frame = @plot_model.frame\n    canvas = @plot_view.canvas\n\n    vx = canvas.sx_to_vx(e.bokeh.sx)\n    vy = canvas.sy_to_vy(e.bokeh.sy)\n    if not frame.contains(vx, vy)\n      return null\n\n    x = frame.get(\'x_mappers\').default.map_from_target(vx)\n    y = frame.get(\'y_mappers\').default.map_from_target(vy)\n\n    @model.source.data.x.push(x)\n    @model.source.data.y.push(y)\n    @model.source.trigger(\'change\')\n\n  # this is executed then the pan/drag ends\n  _pan_end: (e) -> return null\n\nclass DrawTool extends GestureTool.Model\n  default_view: DrawToolView\n  type: \"DrawTool\"\n\n  tool_name: \"Drag Span\"\n  icon: \"bk-tool-icon-lasso-select\"\n  event_type: \"pan\"\n  default_order: 12\n\n  @define { source: [ p.Instance ] }\n\nmodule.exports =\n  Model: DrawTool\n  View: DrawToolView\n",
          "custom/latex_label": "\nLabel = require \"models/annotations/label\"\n\nclass LatexLabelView extends Label.View\n  render: () ->\n\n    #--- Start of copied section from ``Label.render`` implementation\n\n    ctx = @plot_view.canvas_view.ctx\n\n    # Here because AngleSpec does units tranform and label doesn\'t support specs\n    switch @mget(\'angle_units\')\n      when \"rad\" then angle = -1 * @mget(\'angle\')\n      when \"deg\" then angle = -1 * @mget(\'angle\') * Math.PI/180.0\n\n    if @mget(\'x_units\') == \"data\"\n      vx = @xmapper.map_to_target(@mget(\'x\'))\n    else\n      vx = @mget(\'x\')\n    sx = @canvas.vx_to_sx(vx)\n\n    if @mget(\'y_units\') == \"data\"\n      vy = @ymapper.map_to_target(@mget(\'y\'))\n    else\n      vy = @mget(\'y\')\n    sy = @canvas.vy_to_sy(vy)\n\n    if @model.panel?\n      panel_offset = @_get_panel_offset()\n      sx += panel_offset.x\n      sy += panel_offset.y\n\n    #--- End of copied section from ``Label.render`` implementation\n\n    # ``katex`` is loaded into the global window at runtime\n    # katex.renderToString returns a html ``span`` element\n    latex = katex.renderToString(@mget(\'text\'), {displayMode: true})\n\n    # Must render as superpositioned div (not on canvas) so that KaTex\n    # css can properly style the text\n    @_css_text(ctx, latex, sx + @mget(\'x_offset\'), sy - @mget(\'y_offset\'), angle)\n\nclass LatexLabel extends Label.Model\n  type: \'LatexLabel\'\n  default_view: LatexLabelView\n\nmodule.exports =\n  Model: LatexLabel\n  View: LatexLabelView\n",
          "custom/my_formatter": "\nTickFormatter = require \"models/formatters/tick_formatter\"\n\nclass MyFormatter extends TickFormatter.Model\n  type: \"MyFormatter\"\n\n  # TickFormatters should implement this method, which accepts a lisst\n  # of numbers (ticks) and returns a list of strings\n  doFormat: (ticks) ->\n    # format the first tick as-is\n    formatted = [\"#{ticks[0]}\"]\n\n    # format the remaining ticks as a difference from the first\n    for i in [1...ticks.length]\n       formatted.push(\"+#{(ticks[i]-ticks[0]).toPrecision(2)}\")\n\n    return formatted\n\nmodule.exports =\n  Model: MyFormatter\n",
          "custom/surface3d": "\n# This file contains the JavaScript (CoffeeScript) implementation\n# for a Bokeh custom extension. The \"surface3d.py\" contains the\n# python counterpart.\n#\n# This custom model wraps one part of the third-party vis.js library:\n#\n#     http://visjs.org/index.html\n#\n# Making it easy to hook up python data analytics tools (NumPy, SciPy,\n# Pandas, etc.) to web presentations using the Bokeh server.\n\n# These \"require\" lines are similar to python \"import\" statements\n_ = require \"underscore\"\n$ = require \"jquery\"\n\np = require \"core/properties\"\nLayoutDOM = require \"models/layouts/layout_dom\"\n\n# This defines some default options for the Graph3d feature of vis.js\n# See: http://visjs.org/graph3d_examples.html for more details.\nOPTIONS =\n  width:  \'600px\'\n  height: \'600px\'\n  style: \'surface\'\n  showPerspective: true\n  showGrid: true\n  keepAspectRatio: true\n  verticalRatio: 1.0\n  legendLabel: \'stuff\'\n  cameraPosition:\n    horizontal: -0.35\n    vertical: 0.22\n    distance: 1.8\n\n# To create custom model extensions that will render on to the HTML canvas\n# or into the DOM, we must create a View subclass for the model. Currently\n# Bokeh models and views are based on BackBone. More information about\n# using Backbone can be found here:\n#\n#     http://backbonejs.org/\n#\n# In this case we will subclass from the existing BokehJS ``LayoutDOM.View``,\n# corresponding to our\nclass Surface3dView extends LayoutDOM.View\n\n  initialize: (options) ->\n    super(options)\n\n    url = \"https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js\"\n    $.getScript(url).done(@_init)\n\n  # NOTE: we have to use the \"fat arrow\" => here so that \"this\" is bound correctly\n  _init: () =>\n    # Create a new Graph3s using the vis.js API. This assumes the vis.js has\n    # already been loaded (e.g. in a custom app template). In the future Bokeh\n    # models will be able to specify and load external scripts automatically.\n    #\n    # Backbone Views create <div> elements by default, accessible as @$el. Many\n    # Bokeh views ignore this default <div>, and instead do things like draw\n    # to the HTML canvas. In this case though, we use the <div> to attach a\n    # Graph3d to the DOM.\n    @_graph = new vis.Graph3d(@$el[0], @get_data(), OPTIONS)\n\n    # Set Backbone listener so that when the Bokeh data source has a change\n    # event, we can process the new data\n    @listenTo(@model.data_source, \'change\', () =>\n        @_graph.setData(@get_data())\n    )\n\n  # This is the callback executed when the Bokeh data has an change. Its basic\n  # function is to adapt the Bokeh data source to the vis.js DataSet format.\n  get_data: () ->\n    data = new vis.DataSet()\n    source = @model.data_source\n    for i in [0...source.get_length()]\n      data.add({\n        x:     source.get_column(@model.x)[i]\n        y:     source.get_column(@model.y)[i]\n        z:     source.get_column(@model.z)[i]\n        style: source.get_column(@model.color)[i]\n      })\n    return data\n\n# We must also create a corresponding JavaScript Backbone model sublcass to\n# correspond to the python Bokeh model subclass. In this case, since we want\n# an element that can position itself in the DOM according to a Bokeh layout,\n# we subclass from ``LayoutDOM.model``\nclass Surface3d extends LayoutDOM.Model\n\n  # This is usually boilerplate. In some cases there may not be a view.\n  default_view: Surface3dView\n\n  # The ``type`` class attribute should generally match exactly the name\n  # of the corresponding Python class.\n  type: \"Surface3d\"\n\n  # The @define block adds corresponding \"properties\" to the JS model. These\n  # should basically line up 1-1 with the Python model class. Most property\n  # types have counterparts, e.g. ``bokeh.core.properties.String`` will be\n  # ``p.String`` in the JS implementatin. Where the JS type system is not yet\n  # as rich, you can use ``p.Any`` as a \"wildcard\" property type.\n  @define {\n    x:           [ p.String           ]\n    y:           [ p.String           ]\n    z:           [ p.String           ]\n    color:       [ p.String           ]\n    data_source: [ p.Instance         ]\n  }\n\n# This is boilerplate. Every implementation should \"export\" a ``Model``\n# and (when applicable) also a ``View``.\nmodule.exports =\n  Model: Surface3d\n  View: Surface3dView\n"
          }, {}, ["custom/main"]);
        },
        
        function(Bokeh) {
          Bokeh.$(function() {
              Bokeh.safely(function() {
                  var docs_json = {"4aa4f8c5-c177-4996-8857-c4a6de24b00c":{"roots":{"references":[{"attributes":{"overlay":{"id":"7890d6f1-5b24-4858-80d5-836bd952001e","type":"BoxAnnotation"},"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"}},"id":"891d137b-f0ab-4ab0-8586-6833175a49af","type":"BoxZoomTool"},{"attributes":{},"id":"9f16e115-19f9-4f1f-a982-12e50c674044","type":"ToolEvents"},{"attributes":{"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"}},"id":"e314d964-4913-4a40-95bc-445c400b7729","type":"WheelZoomTool"},{"attributes":{"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}},"id":"23d17603-6391-4fc1-a2b3-6fd050085af5","type":"PanTool"},{"attributes":{"plot":null,"text":null},"id":"4561b6a2-52bb-43d5-83b9-9526a149ec5c","type":"Title"},{"attributes":{"formatter":{"id":"cb79558f-800f-4761-be4a-6d4be7237f3a","type":"BasicTickFormatter"},"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"},"ticker":{"id":"37a45227-9f4e-428f-b55e-e80cce44e3a0","type":"BasicTicker"}},"id":"4007d8a6-c382-44ff-8ca7-5aa565ebbee1","type":"LinearAxis"},{"attributes":{"dimension":1,"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"},"ticker":{"id":"01b0b35f-ebaa-4b07-84b9-4cacd516cfdb","type":"BasicTicker"}},"id":"4aa4caed-7ee4-4775-b1d9-b45178fabe15","type":"Grid"},{"attributes":{"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"}},"id":"9221536b-2be9-4bab-bec7-3ba30a1e09a8","type":"HelpTool"},{"attributes":{"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"},"ticker":{"id":"c5e77569-bccb-4a75-9558-deebe5f0dcd3","type":"BasicTicker"}},"id":"2ea48d66-3ec5-4d32-9070-b35d3e470678","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"bb41d902-554c-4feb-8deb-41497e0a85a2","type":"Circle"},{"attributes":{"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"}},"id":"de2ed77e-27cd-46e9-9d72-79949dfde47f","type":"ResetTool"},{"attributes":{"data_source":{"id":"222f10b2-26d4-42bd-afe9-5bf525b54b7a","type":"ColumnDataSource"},"glyph":{"id":"8ed0bf6d-a4a3-41b9-996d-d728f374b4a7","type":"Square"},"hover_glyph":null,"nonselection_glyph":{"id":"fe4def16-554a-4f8c-a489-853aa4ccb52c","type":"Square"},"selection_glyph":null},"id":"065a3f16-2463-434f-9c11-8456e1ea6546","type":"GlyphRenderer"},{"attributes":{"data_source":{"id":"063642a3-b8d4-430d-9ef5-b50fc46cbb09","type":"ColumnDataSource"},"glyph":{"id":"e887219d-ddcf-4979-b0d3-40a38c58b703","type":"Circle"},"hover_glyph":null,"nonselection_glyph":{"id":"bb41d902-554c-4feb-8deb-41497e0a85a2","type":"Circle"},"selection_glyph":null},"id":"edfb3c09-0222-4fec-a845-0aee3a4632c7","type":"GlyphRenderer"},{"attributes":{"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"}},"id":"d333978c-d414-43e7-9862-98d243aab660","type":"PanTool"},{"attributes":{"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"},"ticker":{"id":"f7ea932f-1ae2-49f5-a597-554aabc81236","type":"BasicTicker"}},"id":"8ef05759-f1f9-431c-afd6-f29320e82b54","type":"Grid"},{"attributes":{"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"}},"id":"fc195273-96d2-4352-8a9a-67a425f7fa90","type":"PanTool"},{"attributes":{},"id":"c5e77569-bccb-4a75-9558-deebe5f0dcd3","type":"BasicTicker"},{"attributes":{"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"}},"id":"94af80d8-7267-4143-ac13-dd068e6d8410","type":"SaveTool"},{"attributes":{"overlay":{"id":"6724a5ed-b34b-41d7-bc01-e4eefad6aad5","type":"BoxAnnotation"},"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}},"id":"b889b05b-2453-49ff-a851-ad499daacd2f","type":"BoxZoomTool"},{"attributes":{},"id":"f7ea932f-1ae2-49f5-a597-554aabc81236","type":"BasicTicker"},{"attributes":{"formatter":{"id":"a26d0320-7113-41e9-ad22-18c9f555508c","type":"BasicTickFormatter"},"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"},"ticker":{"id":"01b0b35f-ebaa-4b07-84b9-4cacd516cfdb","type":"BasicTicker"}},"id":"78c041d0-864a-4240-8775-01ef3768db52","type":"LinearAxis"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"e520f500-b941-4ace-ab2a-814abeea17ae","type":"BoxAnnotation"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"firebrick"},"line_alpha":{"value":0.5},"line_color":{"value":"firebrick"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"ee6cb754-7634-4bfb-96fd-b5267965f67d","type":"Triangle"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"olive"},"line_alpha":{"value":0.5},"line_color":{"value":"olive"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"8ed0bf6d-a4a3-41b9-996d-d728f374b4a7","type":"Square"},{"attributes":{},"id":"79b35e0e-84cc-4ffc-8b78-7677513920d2","type":"ToolEvents"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"6724a5ed-b34b-41d7-bc01-e4eefad6aad5","type":"BoxAnnotation"},{"attributes":{"plot":null,"text":null},"id":"fa902120-6c89-433d-a67d-71b2021cf725","type":"Title"},{"attributes":{"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"}},"id":"f8345a00-4f33-42b2-88eb-db7ac2aaa6db","type":"SaveTool"},{"attributes":{"callback":null},"id":"73b09ab6-5a03-4a9b-b470-6057ed385832","type":"DataRange1d"},{"attributes":{"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}},"id":"b48273c6-13a5-4e08-bbf1-a643e110cbc6","type":"HelpTool"},{"attributes":{},"id":"b1cee5eb-fb81-420e-b3ef-3dd13b039193","type":"BasicTickFormatter"},{"attributes":{"formatter":{"id":"7f1afb9f-f378-4cb7-8115-4944b78afd81","type":"BasicTickFormatter"},"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"},"ticker":{"id":"c7055676-0f43-46ec-aa05-fa579a42b786","type":"BasicTicker"}},"id":"cc29331d-3244-4965-ac5e-9549bdd51b14","type":"LinearAxis"},{"attributes":{"formatter":{"id":"326430bc-76d7-4fc5-a07a-d61ec9647851","type":"BasicTickFormatter"},"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"},"ticker":{"id":"c5e77569-bccb-4a75-9558-deebe5f0dcd3","type":"BasicTicker"}},"id":"edfacd88-78ee-4d41-b29a-c547a7bf7d29","type":"LinearAxis"},{"attributes":{"data_source":{"id":"29278a1e-a9f2-4fb6-b6ca-269756b97c17","type":"ColumnDataSource"},"glyph":{"id":"ee6cb754-7634-4bfb-96fd-b5267965f67d","type":"Triangle"},"hover_glyph":null,"nonselection_glyph":{"id":"53c0867a-1f99-428d-b5ff-4d5e1f80551d","type":"Triangle"},"selection_glyph":null},"id":"3265f381-84f0-43fa-8c1e-9f5878a25f28","type":"GlyphRenderer"},{"attributes":{},"id":"cb79558f-800f-4761-be4a-6d4be7237f3a","type":"BasicTickFormatter"},{"attributes":{},"id":"774feadf-fd0f-42e7-89d1-0921f1fbdbdc","type":"BasicTicker"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"fe4def16-554a-4f8c-a489-853aa4ccb52c","type":"Square"},{"attributes":{},"id":"01b0b35f-ebaa-4b07-84b9-4cacd516cfdb","type":"BasicTicker"},{"attributes":{},"id":"c7055676-0f43-46ec-aa05-fa579a42b786","type":"BasicTicker"},{"attributes":{"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}},"id":"a6212433-b9db-47b9-800b-1b10a0a2ab9c","type":"SaveTool"},{"attributes":{"dimension":1,"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"},"ticker":{"id":"37a45227-9f4e-428f-b55e-e80cce44e3a0","type":"BasicTicker"}},"id":"6878174e-a6b8-4740-8d16-0e8e86b1c2bf","type":"Grid"},{"attributes":{"plot":null,"text":null},"id":"fc182d52-48bc-4246-82d3-d97fab07aa96","type":"Title"},{"attributes":{"below":[{"id":"17d83d62-4593-489b-a2bd-fb77a82c62ff","type":"LinearAxis"}],"left":[{"id":"4007d8a6-c382-44ff-8ca7-5aa565ebbee1","type":"LinearAxis"}],"plot_height":250,"plot_width":250,"renderers":[{"id":"17d83d62-4593-489b-a2bd-fb77a82c62ff","type":"LinearAxis"},{"id":"8ef05759-f1f9-431c-afd6-f29320e82b54","type":"Grid"},{"id":"4007d8a6-c382-44ff-8ca7-5aa565ebbee1","type":"LinearAxis"},{"id":"6878174e-a6b8-4740-8d16-0e8e86b1c2bf","type":"Grid"},{"id":"e520f500-b941-4ace-ab2a-814abeea17ae","type":"BoxAnnotation"},{"id":"edfb3c09-0222-4fec-a845-0aee3a4632c7","type":"GlyphRenderer"}],"title":{"id":"fa902120-6c89-433d-a67d-71b2021cf725","type":"Title"},"tool_events":{"id":"79b35e0e-84cc-4ffc-8b78-7677513920d2","type":"ToolEvents"},"toolbar":{"id":"93fe4a19-6385-4e6c-b1d0-b648f76f84f3","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"ac4976b6-7220-49a2-9bfd-6f8a4de3bcb9","type":"DataRange1d"},"y_range":{"id":"73b09ab6-5a03-4a9b-b470-6057ed385832","type":"DataRange1d"}},"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"},{"attributes":{"fill_alpha":{"value":0.5},"fill_color":{"value":"navy"},"line_alpha":{"value":0.5},"line_color":{"value":"navy"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"e887219d-ddcf-4979-b0d3-40a38c58b703","type":"Circle"},{"attributes":{"overlay":{"id":"e520f500-b941-4ace-ab2a-814abeea17ae","type":"BoxAnnotation"},"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"}},"id":"b8f2e16c-ffd8-4e42-9d7f-3f8dbfe2c366","type":"BoxZoomTool"},{"attributes":{"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"}},"id":"f4b302d2-1064-4598-9d0a-886af178a5cc","type":"WheelZoomTool"},{"attributes":{"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"},"ticker":{"id":"774feadf-fd0f-42e7-89d1-0921f1fbdbdc","type":"BasicTicker"}},"id":"04433648-f1c0-4bc9-b7bf-9cca1479a81f","type":"Grid"},{"attributes":{"below":[{"id":"47086e50-4414-4fc4-bc8f-0668ca1962ea","type":"LinearAxis"}],"left":[{"id":"78c041d0-864a-4240-8775-01ef3768db52","type":"LinearAxis"}],"plot_height":250,"plot_width":250,"renderers":[{"id":"47086e50-4414-4fc4-bc8f-0668ca1962ea","type":"LinearAxis"},{"id":"04433648-f1c0-4bc9-b7bf-9cca1479a81f","type":"Grid"},{"id":"78c041d0-864a-4240-8775-01ef3768db52","type":"LinearAxis"},{"id":"4aa4caed-7ee4-4775-b1d9-b45178fabe15","type":"Grid"},{"id":"7890d6f1-5b24-4858-80d5-836bd952001e","type":"BoxAnnotation"},{"id":"3265f381-84f0-43fa-8c1e-9f5878a25f28","type":"GlyphRenderer"}],"title":{"id":"4561b6a2-52bb-43d5-83b9-9526a149ec5c","type":"Title"},"tool_events":{"id":"ec914887-ef31-4de6-8de5-a71a7c16c9fa","type":"ToolEvents"},"toolbar":{"id":"008997a8-7414-488e-ad44-cfebccafd754","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"ac4976b6-7220-49a2-9bfd-6f8a4de3bcb9","type":"DataRange1d"},"y_range":{"id":"73b09ab6-5a03-4a9b-b470-6057ed385832","type":"DataRange1d"}},"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"7f1afb9f-f378-4cb7-8115-4944b78afd81","type":"BasicTickFormatter"},{"attributes":{},"id":"a26d0320-7113-41e9-ad22-18c9f555508c","type":"BasicTickFormatter"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"7890d6f1-5b24-4858-80d5-836bd952001e","type":"BoxAnnotation"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"d333978c-d414-43e7-9862-98d243aab660","type":"PanTool"},{"id":"e314d964-4913-4a40-95bc-445c400b7729","type":"WheelZoomTool"},{"id":"b8f2e16c-ffd8-4e42-9d7f-3f8dbfe2c366","type":"BoxZoomTool"},{"id":"94af80d8-7267-4143-ac13-dd068e6d8410","type":"SaveTool"},{"id":"f9ecda90-5c7b-4be2-b39f-3180ce68dbc5","type":"ResetTool"},{"id":"762fcebb-e7d4-4524-ad45-6a006d17babc","type":"HelpTool"}]},"id":"93fe4a19-6385-4e6c-b1d0-b648f76f84f3","type":"Toolbar"},{"attributes":{"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}},"id":"7f7a1158-9d7c-409c-af6c-0bddb1e934f6","type":"WheelZoomTool"},{"attributes":{"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"}},"id":"f9ecda90-5c7b-4be2-b39f-3180ce68dbc5","type":"ResetTool"},{"attributes":{},"id":"82135da1-c96d-4ecf-8946-b1dbfe1bb8f9","type":"BasicTickFormatter"},{"attributes":{"callback":null,"column_names":["x","y"],"data":{"x":[0,1,2,3,4,5,6,7,8,9,10],"y":[5,4,3,2,1,0,1,2,3,4,5]}},"id":"222f10b2-26d4-42bd-afe9-5bf525b54b7a","type":"ColumnDataSource"},{"attributes":{"callback":null,"column_names":["x","y"],"data":{"x":[0,1,2,3,4,5,6,7,8,9,10],"y":[10,9,8,7,6,5,4,3,2,1,0]}},"id":"29278a1e-a9f2-4fb6-b6ca-269756b97c17","type":"ColumnDataSource"},{"attributes":{},"id":"326430bc-76d7-4fc5-a07a-d61ec9647851","type":"BasicTickFormatter"},{"attributes":{"below":[{"id":"edfacd88-78ee-4d41-b29a-c547a7bf7d29","type":"LinearAxis"}],"left":[{"id":"cc29331d-3244-4965-ac5e-9549bdd51b14","type":"LinearAxis"}],"plot_height":250,"plot_width":250,"renderers":[{"id":"edfacd88-78ee-4d41-b29a-c547a7bf7d29","type":"LinearAxis"},{"id":"2ea48d66-3ec5-4d32-9070-b35d3e470678","type":"Grid"},{"id":"cc29331d-3244-4965-ac5e-9549bdd51b14","type":"LinearAxis"},{"id":"addde144-4eb6-4b2c-8735-891ada901bde","type":"Grid"},{"id":"6724a5ed-b34b-41d7-bc01-e4eefad6aad5","type":"BoxAnnotation"},{"id":"065a3f16-2463-434f-9c11-8456e1ea6546","type":"GlyphRenderer"}],"title":{"id":"fc182d52-48bc-4246-82d3-d97fab07aa96","type":"Title"},"tool_events":{"id":"9f16e115-19f9-4f1f-a982-12e50c674044","type":"ToolEvents"},"toolbar":{"id":"07c8e6a7-c20d-4f11-acf9-b2dd0875a31b","type":"Toolbar"},"toolbar_location":null,"x_range":{"id":"ac4976b6-7220-49a2-9bfd-6f8a4de3bcb9","type":"DataRange1d"},"y_range":{"id":"798ab3c8-cc56-4ce7-9e0c-ffe3d1f6fd80","type":"DataRange1d"}},"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"fc195273-96d2-4352-8a9a-67a425f7fa90","type":"PanTool"},{"id":"f4b302d2-1064-4598-9d0a-886af178a5cc","type":"WheelZoomTool"},{"id":"891d137b-f0ab-4ab0-8586-6833175a49af","type":"BoxZoomTool"},{"id":"f8345a00-4f33-42b2-88eb-db7ac2aaa6db","type":"SaveTool"},{"id":"de2ed77e-27cd-46e9-9d72-79949dfde47f","type":"ResetTool"},{"id":"9221536b-2be9-4bab-bec7-3ba30a1e09a8","type":"HelpTool"}]},"id":"008997a8-7414-488e-ad44-cfebccafd754","type":"Toolbar"},{"attributes":{"formatter":{"id":"b1cee5eb-fb81-420e-b3ef-3dd13b039193","type":"BasicTickFormatter"},"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"},"ticker":{"id":"f7ea932f-1ae2-49f5-a597-554aabc81236","type":"BasicTicker"}},"id":"17d83d62-4593-489b-a2bd-fb77a82c62ff","type":"LinearAxis"},{"attributes":{},"id":"ec914887-ef31-4de6-8de5-a71a7c16c9fa","type":"ToolEvents"},{"attributes":{"dimension":1,"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"},"ticker":{"id":"c7055676-0f43-46ec-aa05-fa579a42b786","type":"BasicTicker"}},"id":"addde144-4eb6-4b2c-8735-891ada901bde","type":"Grid"},{"attributes":{"callback":null},"id":"ac4976b6-7220-49a2-9bfd-6f8a4de3bcb9","type":"DataRange1d"},{"attributes":{},"id":"37a45227-9f4e-428f-b55e-e80cce44e3a0","type":"BasicTicker"},{"attributes":{"plot":{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}},"id":"1b8b7998-40a9-48d3-86a3-28ff74dc0027","type":"ResetTool"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":10},"x":{"field":"x"},"y":{"field":"y"}},"id":"53c0867a-1f99-428d-b5ff-4d5e1f80551d","type":"Triangle"},{"attributes":{"active_drag":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"23d17603-6391-4fc1-a2b3-6fd050085af5","type":"PanTool"},{"id":"7f7a1158-9d7c-409c-af6c-0bddb1e934f6","type":"WheelZoomTool"},{"id":"b889b05b-2453-49ff-a851-ad499daacd2f","type":"BoxZoomTool"},{"id":"a6212433-b9db-47b9-800b-1b10a0a2ab9c","type":"SaveTool"},{"id":"1b8b7998-40a9-48d3-86a3-28ff74dc0027","type":"ResetTool"},{"id":"b48273c6-13a5-4e08-bbf1-a643e110cbc6","type":"HelpTool"}]},"id":"07c8e6a7-c20d-4f11-acf9-b2dd0875a31b","type":"Toolbar"},{"attributes":{"plot":{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"}},"id":"762fcebb-e7d4-4524-ad45-6a006d17babc","type":"HelpTool"},{"attributes":{"formatter":{"id":"82135da1-c96d-4ecf-8946-b1dbfe1bb8f9","type":"BasicTickFormatter"},"plot":{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"},"ticker":{"id":"774feadf-fd0f-42e7-89d1-0921f1fbdbdc","type":"BasicTicker"}},"id":"47086e50-4414-4fc4-bc8f-0668ca1962ea","type":"LinearAxis"},{"attributes":{"callback":null,"column_names":["x","y"],"data":{"x":[0,1,2,3,4,5,6,7,8,9,10],"y":[0,1,2,3,4,5,6,7,8,9,10]}},"id":"063642a3-b8d4-430d-9ef5-b50fc46cbb09","type":"ColumnDataSource"},{"attributes":{"callback":null},"id":"798ab3c8-cc56-4ce7-9e0c-ffe3d1f6fd80","type":"DataRange1d"},{"attributes":{"children":[{"id":"8f1e9ed8-e1e8-42c6-9205-be33d944dcc0","type":"Row"}]},"id":"e66b4d10-d9bc-4076-b562-ceb20340a49f","type":"Column"},{"attributes":{"children":[{"id":"b96022df-4cc5-4be8-bc0d-53e91271c9f6","subtype":"Figure","type":"Plot"},{"id":"7dbfbe51-2c3e-4274-b87c-b3f1f4a0c7b5","subtype":"Figure","type":"Plot"},{"id":"eff7a040-8f64-48e1-b03e-8013fd227f4b","subtype":"Figure","type":"Plot"}]},"id":"8f1e9ed8-e1e8-42c6-9205-be33d944dcc0","type":"Row"}],"root_ids":["e66b4d10-d9bc-4076-b562-ceb20340a49f"]},"title":"Bokeh Application","version":"0.12.2.9747"}};
                  var render_items = [{"docid":"4aa4f8c5-c177-4996-8857-c4a6de24b00c","elementid":"1aa328f7-62e2-41c5-a318-f33515c5045b","modelid":"e66b4d10-d9bc-4076-b562-ceb20340a49f"}];
                  
                  Bokeh.embed.embed_items(docs_json, render_items);
              });
          });
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.2.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.2.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i](window.Bokeh);
        }
        
      }
    
      if (window._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(this));
});