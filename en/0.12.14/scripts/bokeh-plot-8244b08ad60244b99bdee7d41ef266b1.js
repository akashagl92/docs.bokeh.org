(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("2b6b7fca-edf4-40bd-8970-3bf84bca8822");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '2b6b7fca-edf4-40bd-8970-3bf84bca8822' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.14.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.14.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.14.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.14.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "LatexLabel": require("custom/bk_script_074e546b3c1b47f8a4bb89c4700ab0a8.latex_label").LatexLabel,
          "Surface3d": require("custom/bk_script_503def5dd0ce428b82af5a6e6f63b14a.surface3d").Surface3d,
          "Custom": require("custom/bk_script_8bbacfc9cb254721ba43b510bccd5c8a.custom").Custom,
          "MyFormatter": require("custom/bk_script_8f1efcd166444c83bb98f1ac6fb868c4.my_formatter").MyFormatter,
          "DrawTool": require("custom/bk_script_a4dba819281c4cefb4f9daf58cfd98b7.draw_tool").DrawTool,
          "IonRangeSlider": require("custom/bk_script_f8f530827b6d40d0854e678ed2325104.ion_range_slider").IonRangeSlider
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_074e546b3c1b47f8a4bb89c4700ab0a8.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
          
          },
          "custom/bk_script_503def5dd0ce428b82af5a6e6f63b14a.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model. Currently
          // Bokeh models and views are based on BackBone. More information about
          // using Backbone can be found here:
          //     http://backbonejs.org/
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``,
          // corresponding to our
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // Backbone Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set Backbone listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript Backbone model sublcass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
          
          },
          "custom/bk_script_8bbacfc9cb254721ba43b510bccd5c8a.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
          
          },
          "custom/bk_script_8f1efcd166444c83bb98f1ac6fb868c4.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
          
          },
          "custom/bk_script_a4dba819281c4cefb4f9daf58cfd98b7.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (_a = e.bokeh, sx = _a.sx, sy = _a.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
                  var _a;
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
          
          },
          "custom/bk_script_f8f530827b6d40d0854e678ed2325104.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // Backbone Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
          
          }
          }, "custom/main");
          ;
          });
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"23bcaa64-181d-407a-ae13-2feefdc1b8eb":{"roots":{"references":[{"attributes":{},"id":"aa6f09fd-7d06-4a26-9aa8-c46c6160c532","type":"BasicTicker"},{"attributes":{"callback":null,"column_names":["index","x","y","y_mean","y_std","y_sem","lower","upper"],"data":{"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499],"lower":{"__ndarray__":"","dtype":"float64","shape":[2500]},"upper":{"__ndarray__":"","dtype":"float64","shape":[2500]},"x":{"__ndarray__":"","dtype":"float64","shape":[2500]},"y":{"__ndarray__":"","dtype":"float64","shape":[2500]},"y_mean":{"__ndarray__":"","dtype":"float64","shape":[2500]},"y_sem":{"__ndarray__":"biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj9uJKid/WTKP24kqJ39ZMo/biSonf1kyj+YMui92JTKP0husMcIEss/3mpkNUsJyz8wL/AAq9vKP1712B5iSco/SgVtDgmfyj8goYfV337KP54+CfSnnco/5S5bzpidyj+9FzuBuKjKP465CsUzi8o/HWzHPIeiyj8gNLsR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","dtype":"float64","shape":[2500]},"y_std":{"__ndarray__":"","dtype":"float64","shape":[2500]}}},"id":"88e793f5-b15d-4535-972a-29da23440f22","type":"ColumnDataSource"},{"attributes":{"callback":null},"id":"8298b5a6-5321-407a-a2cc-c1f69ce835da","type":"DataRange1d"},{"attributes":{"callback":null},"id":"b5444745-1e22-4ece-bfd0-8bdd21533eea","type":"DataRange1d"},{"attributes":{},"id":"ae7c695c-455f-4e71-81e3-c0a1a62a3ec4","type":"WheelZoomTool"},{"attributes":{},"id":"68db2345-55ba-41e9-bd47-85ae298bbafb","type":"BasicTickFormatter"},{"attributes":{"dimension":1,"grid_line_alpha":{"value":0.5},"plot":{"id":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0","subtype":"Figure","type":"Plot"},"ticker":{"id":"a2c9ed3e-458f-46b8-9898-a372d35da32e","type":"BasicTicker"}},"id":"35abbf88-2861-4c25-9ea7-f6208292b9be","type":"Grid"},{"attributes":{"axis_label":"Y","formatter":{"id":"b6edca4e-afcb-43e1-aaf0-46abbd215a93","type":"BasicTickFormatter"},"plot":{"id":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0","subtype":"Figure","type":"Plot"},"ticker":{"id":"a2c9ed3e-458f-46b8-9898-a372d35da32e","type":"BasicTicker"}},"id":"9f1c9b60-0dea-4d88-8028-12c576d8a63c","type":"LinearAxis"},{"attributes":{},"id":"a426ac7e-1bff-4ae9-9b04-7b19a894b183","type":"LinearScale"},{"attributes":{"grid_line_color":{"value":null},"plot":{"id":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0","subtype":"Figure","type":"Plot"},"ticker":{"id":"aa6f09fd-7d06-4a26-9aa8-c46c6160c532","type":"BasicTicker"}},"id":"f7bbca1b-407a-49e1-8f28-f38ae412ac05","type":"Grid"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"cecca350-1002-4695-8dca-4b2b2c86766c","type":"BoxAnnotation"},{"attributes":{},"id":"bcb7f5b7-74e5-4790-a35c-d1961865019a","type":"LinearScale"},{"attributes":{},"id":"02397cb4-c722-4def-844f-8de23e887697","type":"PanTool"},{"attributes":{"axis_label":"X","formatter":{"id":"68db2345-55ba-41e9-bd47-85ae298bbafb","type":"BasicTickFormatter"},"plot":{"id":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0","subtype":"Figure","type":"Plot"},"ticker":{"id":"aa6f09fd-7d06-4a26-9aa8-c46c6160c532","type":"BasicTicker"}},"id":"42c1d99a-97a3-43ce-bba8-c06fcc081903","type":"LinearAxis"},{"attributes":{"fill_alpha":{"value":0.3},"fill_color":{"value":"#1f77b4"},"line_color":{"value":null},"size":{"units":"screen","value":5},"x":{"field":"x"},"y":{"field":"y"}},"id":"b2fbe63b-ae48-4c35-aac1-c4d3be682ed0","type":"Circle"},{"attributes":{"base":{"field":"x","units":"data"},"fill_alpha":{"value":1.0},"level":"underlay","line_color":{"value":"black"},"lower":{"field":"lower","units":"data"},"plot":{"id":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0","subtype":"Figure","type":"Plot"},"source":{"id":"88e793f5-b15d-4535-972a-29da23440f22","type":"ColumnDataSource"},"upper":{"field":"upper","units":"data"}},"id":"121fc49e-3346-4ebe-acc3-17f77b39b016","type":"Band"},{"attributes":{},"id":"104c67ad-8db6-45fd-b778-0c15aa3985a9","type":"SaveTool"},{"attributes":{},"id":"b6edca4e-afcb-43e1-aaf0-46abbd215a93","type":"BasicTickFormatter"},{"attributes":{"data_source":{"id":"88e793f5-b15d-4535-972a-29da23440f22","type":"ColumnDataSource"},"glyph":{"id":"b2fbe63b-ae48-4c35-aac1-c4d3be682ed0","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"90762e12-bf14-4a0a-b638-35a0e211bb04","type":"Circle"},"selection_glyph":null,"view":{"id":"52e928fc-e587-4332-810f-1ee9755b156f","type":"CDSView"}},"id":"0e0f9fce-12dd-4644-aafa-96de119f57b8","type":"GlyphRenderer"},{"attributes":{"source":{"id":"88e793f5-b15d-4535-972a-29da23440f22","type":"ColumnDataSource"}},"id":"52e928fc-e587-4332-810f-1ee9755b156f","type":"CDSView"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":5},"x":{"field":"x"},"y":{"field":"y"}},"id":"90762e12-bf14-4a0a-b638-35a0e211bb04","type":"Circle"},{"attributes":{"below":[{"id":"42c1d99a-97a3-43ce-bba8-c06fcc081903","type":"LinearAxis"}],"left":[{"id":"9f1c9b60-0dea-4d88-8028-12c576d8a63c","type":"LinearAxis"}],"renderers":[{"id":"42c1d99a-97a3-43ce-bba8-c06fcc081903","type":"LinearAxis"},{"id":"f7bbca1b-407a-49e1-8f28-f38ae412ac05","type":"Grid"},{"id":"9f1c9b60-0dea-4d88-8028-12c576d8a63c","type":"LinearAxis"},{"id":"35abbf88-2861-4c25-9ea7-f6208292b9be","type":"Grid"},{"id":"cecca350-1002-4695-8dca-4b2b2c86766c","type":"BoxAnnotation"},{"id":"0e0f9fce-12dd-4644-aafa-96de119f57b8","type":"GlyphRenderer"},{"id":"121fc49e-3346-4ebe-acc3-17f77b39b016","type":"Band"}],"title":{"id":"d87163f3-186f-4de4-a9da-2363a04d83b1","type":"Title"},"toolbar":{"id":"31ff1ae0-a923-42c2-8184-6b7d4ada5798","type":"Toolbar"},"x_range":{"id":"b5444745-1e22-4ece-bfd0-8bdd21533eea","type":"DataRange1d"},"x_scale":{"id":"bcb7f5b7-74e5-4790-a35c-d1961865019a","type":"LinearScale"},"y_range":{"id":"8298b5a6-5321-407a-a2cc-c1f69ce835da","type":"DataRange1d"},"y_scale":{"id":"a426ac7e-1bff-4ae9-9b04-7b19a894b183","type":"LinearScale"}},"id":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"a2c9ed3e-458f-46b8-9898-a372d35da32e","type":"BasicTicker"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"02397cb4-c722-4def-844f-8de23e887697","type":"PanTool"},{"id":"ae7c695c-455f-4e71-81e3-c0a1a62a3ec4","type":"WheelZoomTool"},{"id":"03f473e9-6e55-4eb3-a5b9-3bb6c80880ec","type":"BoxZoomTool"},{"id":"c9eeb18b-3a78-4daf-ba23-1ec251ed8b01","type":"ResetTool"},{"id":"104c67ad-8db6-45fd-b778-0c15aa3985a9","type":"SaveTool"}]},"id":"31ff1ae0-a923-42c2-8184-6b7d4ada5798","type":"Toolbar"},{"attributes":{"overlay":{"id":"cecca350-1002-4695-8dca-4b2b2c86766c","type":"BoxAnnotation"}},"id":"03f473e9-6e55-4eb3-a5b9-3bb6c80880ec","type":"BoxZoomTool"},{"attributes":{},"id":"c9eeb18b-3a78-4daf-ba23-1ec251ed8b01","type":"ResetTool"},{"attributes":{"plot":null,"text":"Rolling Standard Deviation"},"id":"d87163f3-186f-4de4-a9da-2363a04d83b1","type":"Title"}],"root_ids":["cb1bf509-e783-48ae-91f2-d9a4d1af8ac0"]},"title":"Bokeh Application","version":"0.12.14"}}';
                  var render_items = [{"docid":"23bcaa64-181d-407a-ae13-2feefdc1b8eb","elementid":"2b6b7fca-edf4-40bd-8970-3bf84bca8822","modelid":"cb1bf509-e783-48ae-91f2-d9a4d1af8ac0"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.14.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.14.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.14.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.14.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.14.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.14.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();