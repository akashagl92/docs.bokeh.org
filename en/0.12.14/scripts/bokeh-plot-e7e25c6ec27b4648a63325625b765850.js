(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("058c02aa-a44b-4c1d-94af-6a4716826838");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '058c02aa-a44b-4c1d-94af-6a4716826838' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.14.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.14.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.14.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.14.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "LatexLabel": require("custom/bk_script_074e546b3c1b47f8a4bb89c4700ab0a8.latex_label").LatexLabel,
          "Surface3d": require("custom/bk_script_503def5dd0ce428b82af5a6e6f63b14a.surface3d").Surface3d,
          "Custom": require("custom/bk_script_8bbacfc9cb254721ba43b510bccd5c8a.custom").Custom,
          "MyFormatter": require("custom/bk_script_8f1efcd166444c83bb98f1ac6fb868c4.my_formatter").MyFormatter,
          "DrawTool": require("custom/bk_script_a4dba819281c4cefb4f9daf58cfd98b7.draw_tool").DrawTool,
          "IonRangeSlider": require("custom/bk_script_f8f530827b6d40d0854e678ed2325104.ion_range_slider").IonRangeSlider
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_074e546b3c1b47f8a4bb89c4700ab0a8.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
          
          },
          "custom/bk_script_503def5dd0ce428b82af5a6e6f63b14a.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model. Currently
          // Bokeh models and views are based on BackBone. More information about
          // using Backbone can be found here:
          //     http://backbonejs.org/
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``,
          // corresponding to our
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // Backbone Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set Backbone listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript Backbone model sublcass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
          
          },
          "custom/bk_script_8bbacfc9cb254721ba43b510bccd5c8a.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
          
          },
          "custom/bk_script_8f1efcd166444c83bb98f1ac6fb868c4.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
          
          },
          "custom/bk_script_a4dba819281c4cefb4f9daf58cfd98b7.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (_a = e.bokeh, sx = _a.sx, sy = _a.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
                  var _a;
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
          
          },
          "custom/bk_script_f8f530827b6d40d0854e678ed2325104.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // Backbone Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
          
          }
          }, "custom/main");
          ;
          });
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"c1d86e39-144a-4f7d-83da-cacc63efe2c2":{"roots":{"references":[{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"3b6d73a7-81af-45de-be96-d82259bd83b6","type":"PanTool"},{"id":"cebd8383-8f13-43f4-8e65-8cb82b070b05","type":"WheelZoomTool"},{"id":"cd73e260-d7ae-45a6-89f5-e4d6d9b45100","type":"ZoomInTool"},{"id":"a45b4aa2-b1f0-44e1-8a2f-f514b8fee514","type":"ZoomOutTool"},{"id":"bedba622-479a-4a1e-b959-0de477d24a69","type":"ResetTool"}]},"id":"1c71702d-0ff6-4a5f-a889-925761c006e3","type":"Toolbar"},{"attributes":{},"id":"a45b4aa2-b1f0-44e1-8a2f-f514b8fee514","type":"ZoomOutTool"},{"attributes":{},"id":"9e76c525-e5e5-43fd-afff-e5a4e0dcdf74","type":"BasicTickFormatter"},{"attributes":{},"id":"bedba622-479a-4a1e-b959-0de477d24a69","type":"ResetTool"},{"attributes":{"button_type":"success","callback":null,"icon":null,"js_event_callbacks":{"button_click":[{"id":"578f83bb-472c-4270-aedd-7b2de441ccb8","type":"CustomJS"}]}},"id":"85a0068a-969d-4e1f-8f1a-bd8e2e761207","type":"Button"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f5cba565-70c8-4fca-8a77-201905713a5e","type":"CustomJS"},{"attributes":{"children":[{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}],"width":1000},"id":"9c74355d-d2a1-4dc4-8fef-8e511ed8aa6e","type":"WidgetBox"},{"attributes":{},"id":"eff407b8-6773-42af-8ad9-da8821c4c7b4","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"85a0068a-969d-4e1f-8f1a-bd8e2e761207","type":"Button"}]},"id":"3ad41afd-549b-499a-b6b0-4f6f9fea0e8f","type":"WidgetBox"},{"attributes":{"width":1000},"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"},{"attributes":{"children":[{"id":"3ad41afd-549b-499a-b6b0-4f6f9fea0e8f","type":"WidgetBox"},{"id":"2427c9c0-db4f-4b8d-9a09-376d07ca17d5","type":"Row"}]},"id":"6f0f941b-33f9-44d2-9a77-19b9ffd76a0e","type":"Column"},{"attributes":{"children":[{"id":"cb474b06-14bc-400d-b32b-2c7f455b6188","subtype":"Figure","type":"Plot"},{"id":"9c74355d-d2a1-4dc4-8fef-8e511ed8aa6e","type":"WidgetBox"}]},"id":"2427c9c0-db4f-4b8d-9a09-376d07ca17d5","type":"Row"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"7288c69d-b204-46b3-bdaf-13e6a2172207","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"578f83bb-472c-4270-aedd-7b2de441ccb8","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"296943ae-d196-430c-b73c-d189e2febff6","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"473b0428-1416-44f6-a8e4-24fb11f33bcd","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta_x&#x27;, &#x27;delta_y&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"36ae4340-b3e3-47e5-a5bf-752ac7eec121","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"b0713754-e54d-4b9c-bc19-283d41b24916","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"79d3d10c-04d3-453b-ae6f-ab497b4f4dc5","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f5f10851-d9fd-41c3-9996-541d69b98e11","type":"CustomJS"},{"attributes":{"callback":null},"id":"f9a274b8-a923-408b-a9d7-c6276c7aabc7","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"e96bbb96-7061-428b-b214-b84957f3d639","type":"CustomJS"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"0a7591b8-9af7-45a6-bd77-204c5b0e20aa","type":"Circle"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"dc23a53f-5fc6-4861-aa03-741ec26a8fb7","type":"CustomJS"},{"attributes":{"callback":null,"column_names":["radius","x","y","fill_color"],"data":{"fill_color":["#f8c196","#9f7a96","#d44996","#717b96","#b4c096","#ef9996","#9d8b96","#a55f96","#6abc96","#ad3b96","#523296","#bb3396","#8ea196","#5e5196","#d42996","#942396","#877196","#953e96","#e6d896","#d3d496","#d5c196","#41a196","#8e3596","#453596","#c26896","#c19e96","#a06f96","#8ea896","#902196","#979996","#81c896","#87c696","#9f9196","#412496","#473596","#ddd096","#54c996","#7edb96","#833396","#87cc96","#f66896","#498996","#419696","#336c96","#ddab96","#b6db96","#e1b596","#9cc896","#397f96","#b37796","#9f9f96","#613596","#8f4996","#f74696","#838d96","#da6c96","#35d896","#d75f96","#c73796","#3dce96","#7f1e96","#6dc896","#d03096","#785d96","#646c96","#eb7596","#cdb296","#bc7a96","#626b96","#437a96","#3a2c96","#eada96","#dde296","#f2a096","#622996","#e27b96","#dcd296","#6cd696","#65d996","#8ede96","#a2bb96","#6f3196","#364696","#684896","#8b2a96","#682096","#533c96","#a67b96","#92ce96","#769296","#d3d696","#4fac96","#db9796","#8e8096","#86a996","#c6c896","#cfae96","#71a896","#f69696","#db3196","#7c4796","#9c7896","#502d96","#f33596","#3fd696","#c33496","#794d96","#d45496","#643f96","#c14996","#a25f96","#aaa196","#ecd496","#a88396","#436196","#438596","#f39d96","#acdc96","#e39296","#cc2196","#979d96","#664796","#8d9c96","#f3d696","#635096","#8bd596","#4b8796","#a04e96","#5a9b96","#53c096","#837d96","#cb7e96","#4d8396","#6aa696","#62e196","#82d296","#f9c796","#4f2596","#a25196","#b6de96","#a9e296","#dddd96","#835296","#869896","#5d3d96","#3b8996","#bb3b96","#ced696","#8a7a96","#7eca96","#7c8496","#785596","#9c5796","#a84c96","#6c7d96","#cc9196","#bd5e96","#64d996","#4ba196","#568e96","#866696","#3c2196","#ef5696","#937d96","#534896","#818b96","#74ac96","#ded796","#5b1e96","#d5da96","#919596","#762b96","#4e3996","#8e6b96","#c74296","#f47996","#457696","#f33696","#397196","#cb6296","#f87596","#682b96","#584596","#535e96","#87c496","#a65296","#3f4b96","#f65296","#a59196","#469a96","#9d6796","#4cdd96","#9ea596","#b64b96","#a33896","#61ae96","#353b96","#bedf96","#96a996","#f26196","#49b396","#4b7e96","#4ed296","#597b96","#a79f96","#7a9196","#ba7896","#d12396","#f37296","#994096","#359096","#ad2996","#626a96","#c48e96","#383496","#73ba96","#9cdd96","#ef4496","#4abb96","#995896","#826996","#86d296","#48ae96","#716296","#f4c796","#694d96","#c02596","#e6e396","#e25a96","#d27596","#704296","#7e7696","#8c8496","#8e8196","#f08396","#682a96","#d6c196","#c89296","#896396","#35df96","#593296","#d4da96","#3bd496","#7baf96","#933996","#dda096","#809796","#42d096","#ce6296","#6c6796","#957696","#713296","#795e96","#367e96","#848596","#a4a496","#7a3e96","#43a696","#c0c596","#4a3296","#4f4696","#beb096","#d33e96","#ee3a96","#8b7496","#3fab96","#d6e196","#6da396","#749796","#eb2996","#6fd396","#91b596","#f4cf96","#8b2f96","#54b796","#655696","#ec6996","#dd5196","#d24996","#8ee196","#526d96","#a52096","#38dc96","#675f96","#d5d096","#678596","#b08896","#5dc096","#c82396","#afc096","#f47296","#7c6b96","#f5b896","#6b5696","#f62096","#8a5196","#343a96","#9fa596","#8adc96","#808696","#376296","#79c796","#b36496","#745d96","#e13896","#e82c96","#4a1e96","#9dd396","#c9b896","#4ca596","#d92596","#3fd596","#f48e96","#c97396","#4c7296","#5eac96","#d55396","#bfa496","#7e7796","#32a796","#d97296","#f45a96","#a86a96","#6b9796","#642896","#c3bd96","#d72c96","#7e6996","#633f96","#f5a196","#d74c96","#4e1e96","#674f96","#9a9d96","#78a296","#364896","#865396","#c73e96","#3bdc96","#5d3696","#87a596","#ef7496","#c27c96","#6d7e96","#3ca596","#d53896","#4cb496","#344596","#7b9f96","#532f96","#d34496","#596896","#e3bc96","#5ac996","#c2c396","#efa996","#dc6f96","#8b4596","#813b96","#723096","#713896","#6c4196","#f08296","#b55896","#d93f96","#7a4b96","#d5d896","#5cb396","#b72796","#cc5c96","#e39396","#b66a96","#777096","#4e3796","#8db496","#a5e096","#9f2f96","#a43396","#bd9b96","#469796","#bc5896","#f56396","#dbcf96","#81bc96","#62a496","#4a6d96","#a13596","#6a9696","#e67a96","#f94d96","#b39796","#c95196","#cd4696","#3f5196","#392f96","#563696","#60a496","#9d2996","#c9bf96","#3cc696","#9f3a96","#92ab96","#c12096","#a24a96","#f3b596","#b28a96","#d13b96","#3d7a96","#95ac96","#ba9896","#3cbf96","#86b996","#e25796","#65b996","#bdc796","#55af96","#bccb96","#efc396","#ec5596","#6c9996","#a97196","#762896","#83a096","#93dd96","#696996","#3f7796","#e87596","#756596","#794896","#b29896","#3b8196","#eddf96","#327896","#53e096","#b49c96","#5f6196","#6d3596","#747496","#815396","#aec796","#a62a96","#d95496","#a49b96","#597c96","#e93996","#d38296","#5d2596","#88c596","#458496","#446896","#f9c496","#a6a496","#905196","#60b596","#79c496","#c58496","#ecc996","#77ad96","#ebbf96","#937496","#f6b896","#e93d96","#67e296","#7ade96","#403c96","#98c096","#40ae96","#e3a696","#7ac496","#817e96","#4a7a96","#3d6d96","#aa8a96","#f36a96","#4f2996","#a74d96","#713f96","#c65796","#593096","#7c2a96","#47cb96","#f74196","#9cb496","#8dd496","#f82a96","#843a96","#a86d96","#347996","#bb6e96","#8e5b96","#ef3e96","#be3b96","#bd3f96","#efc096","#334f96","#a74196","#e39096","#ef4a96","#ce8696","#d32796","#f37896","#d79696","#b16b96","#c1ce96","#72cb96","#362b96","#967996","#33be96","#55d596","#e9c596","#ec6f96","#eda696","#c2c696","#5c6796","#434a96","#60b996","#5cbc96","#86a696","#ddd896","#f44f96","#898e96","#49dd96","#acbf96","#6f5096","#ec8396","#803896","#a59e96","#856596","#4e4c96","#dd6696","#8c5796","#799896","#771e96","#57d296","#602996","#422c96","#a84a96","#3bd096","#b24a96","#423996","#577a96","#ce2796","#917196","#ac3e96","#a68596","#bd4596","#d04a96","#9c9b96","#a87196","#999096","#45b796","#bb3696","#3ba496","#a7bd96","#dc6f96","#ba7296","#4ed896","#d1b496","#bb6c96","#df3e96","#3ca396","#c0de96","#95a596","#adc296","#54ba96","#f15196","#8be596","#d8be96","#603096","#e96496","#3f4896","#784c96","#5dbf96","#f1af96","#a96296","#70ca96","#447696","#eddc96","#ea3d96","#e47196","#ed8d96","#5f7b96","#a63896","#4ec596","#74d096","#59d696","#ea2496","#ea2c96","#ceb496","#6d2b96","#a92896","#a69e96","#6f3f96","#a96d96","#c54e96","#c35396","#56bc96","#617396","#f6c396","#bcc896","#a6af96","#77e196","#f1a796","#bd3096","#e93396","#4d8a96","#55b396","#e83196","#8d4e96","#832b96","#c62f96","#84b096","#457496","#7e7796","#506996","#3a6596","#6cc596","#f65596","#f04596","#51a196","#c47196","#6ac496","#e06796","#46df96","#a69b96","#72a996","#7d6896","#f5b696","#5d2296","#906096","#492496","#d95696","#51b796","#e38096","#ac4e96","#7d8c96","#7b8a96","#523a96","#6a8196","#d09296","#5d4c96","#755496","#951e96","#dc5d96","#af4196","#ac9196","#7d9a96","#afb996","#61cf96","#c32f96","#855e96","#9e9f96","#f06396","#f86d96","#ca2e96","#a06096","#a9e596","#e67096","#962e96","#d24c96","#e55996","#983a96","#4d2696","#901e96","#e05796","#f0c896","#4d9896","#f67996","#948996","#b14996","#712796","#6fca96","#8da396","#63c796","#bc8096","#a7e396","#8e3396","#99be96","#f05f96","#8d4496","#b0d996","#8e4b96","#45d096","#db9e96","#5fa496","#6ebe96","#8a6096","#695196","#946796","#6b7f96","#8f4796","#f0de96","#623196","#f3af96","#d82596","#37d496","#948996","#e52d96","#e74496","#632d96","#65db96","#f33096","#c94e96","#ccc696","#eba796","#da9796","#cbd796","#bd6596","#74d696","#be8796","#79e596","#e59096","#6f8c96","#8b6996","#67e496","#9f6196","#93a896","#cd4396","#dccb96","#4fa396","#f26396","#8dbf96","#6bb396","#835c96","#7fd996","#597f96","#597596","#a39696","#65af96","#877c96","#f39e96","#a57796","#ae3596","#b6ba96","#c14696","#53a696","#418496","#df3196","#f46896","#555d96","#db6096","#985f96","#d28896","#7c9e96","#7b4d96","#e42496","#be9c96","#347a96","#b88196","#905096","#55cd96","#586d96","#9b7296","#38dd96","#673b96","#635896","#a29596","#6ac796","#c05796","#dc3c96","#3a2b96","#7b9396","#549c96","#c77d96","#df4496","#7d2d96","#f34c96","#899396","#983b96","#3f8096","#775096","#a0b596","#5f8196","#819596","#d93096","#902596","#9d3196","#ac2d96","#72b996","#7e9296","#614396","#83c396","#95de96","#509a96","#916d96","#9d3f96","#f93096","#9a5f96","#d63f96","#6a5896","#d68296","#bfbd96","#d55096","#d86696","#d38596","#3e8e96","#949d96","#4f3496","#a9e396","#e25a96","#cc7c96","#78a896","#d35e96","#4d8c96","#5c4396","#eb9296","#5ad996","#81d296","#6c6396","#3e3396","#85b596","#e93b96","#8ab996","#d4b796","#8d7396","#a59096","#f26b96","#41ad96","#6f2e96","#e86096","#57c596","#80a896","#6d3496","#db2396","#7c5b96","#876096","#67e396","#da5396","#80a296","#8cda96","#53c796","#75b696","#325a96","#dfc896","#7ea896","#bc4296","#f07696","#bcb196","#b26296","#8bc796","#5a7f96","#943096","#60d096","#ab4b96","#de4196","#d59f96","#877496","#73a996","#9a7696","#a42096","#8c1f96","#855f96","#743a96","#9d8d96","#a83196","#c27f96","#dc5e96","#7a8096","#676596","#547a96","#c83196","#95d496","#c21f96","#866e96","#ca3996","#584396","#6c2896","#a6e296","#498796","#d9ac96","#95ba96","#d83596","#a12496","#8f3e96","#5d3a96","#b16a96","#57bc96","#f22296","#624d96","#a68a96","#332f96","#404396","#897296","#73a596","#83ce96","#93d196","#7bcb96","#d96c96","#c26a96","#8cc096","#cc6596","#6b7e96","#964296","#38b096","#c7ba96","#6f2496","#823196","#dcac96","#c24296","#399d96","#b9d796","#64e096","#8abd96","#6c7896","#759396","#a96c96","#513196","#a03d96","#eee596","#85ca96","#499696","#6c5b96","#925696","#3e8396","#383196","#7f5f96","#eece96","#46b196","#a54d96","#4c7596","#d0b096","#662c96","#40c596","#df9b96","#ea3a96","#5d9196","#a6d396","#3a9e96","#c68596","#68e496","#65a496","#a36996","#409d96","#a29c96","#38af96","#cbd896","#435596","#655e96","#e43396","#dbaf96","#b94396","#e24596","#a89096","#a7b496","#416b96","#6b6696","#4c8596","#d34f96","#a75b96","#a46096","#eb8e96","#598096","#626e96","#c06f96","#f17596","#c2c796","#6f6a96","#639996","#353196","#e1b796","#b87c96","#8ecf96","#c84e96","#ea5f96","#e24296","#a58f96","#ac7296","#bba096","#b72996","#e82c96","#b5cb96","#3cc696","#52d296","#abc696","#c6d896","#90c396","#aedc96","#b77096","#724596","#85d196","#6c7e96","#39d196","#8fd096","#f1d696","#424596","#51af96","#788996","#bcb696","#539c96","#b56096","#c26796","#40d496","#615296","#83cc96","#bbc896","#5c9a96","#9a6796","#a8af96","#f4c796","#db6896","#ddc196","#4ae096","#409196","#857796","#a98896","#5c8896","#e4cc96","#e69896","#a52496","#9ee096","#941f96","#c69396","#896896","#ae5996","#67b196","#c0e396","#c87b96","#4d6296","#61c596","#498d96","#d2d696","#ecb196","#7f6b96","#8d9b96","#aeba96","#9d7796","#38e596","#516e96","#cf3196","#7fda96","#716e96","#a78296","#96e296","#47a096","#5a6596","#5f4c96","#a6da96","#e22196","#f84896","#5e5b96","#54b196","#a1ce96","#71e196","#b94b96","#8d2296","#4dc796","#409596","#e33196","#df4196","#f74296","#5de396","#822596","#342796","#e28e96","#c07c96","#b99496","#95b396","#eb7f96","#bf8796","#662596","#adbd96","#65cf96","#759196","#9ba396","#476e96","#e56d96","#5fe396","#f1a896","#76a796","#a6dc96","#3fbb96","#999196","#cfda96","#632296","#407f96","#38d096","#3d2f96","#324796","#5a8096","#68b996","#87bb96","#325696","#9cd196","#4d4196","#71d696","#38ca96","#822c96","#e23796","#da7a96","#7c5796","#f24f96","#576896","#61c296","#daa996","#d49796","#bc8996","#a99f96","#837c96","#ddb096","#6e9996","#958d96","#54a696","#d3be96","#375b96","#bf4d96","#35b396","#662b96","#6b4796","#a8b696","#5d9096","#8be096","#717096","#d3a796","#7ea696","#dd3c96","#aa5c96","#be3f96","#959596","#efbc96","#78a496","#c57c96","#67af96","#67bd96","#ba9e96","#745596","#b3d496","#993496","#4caf96","#c3b896","#dae596","#796896","#919d96","#782796","#bb4796","#aed896","#b45f96","#60ce96","#c49696","#a27e96","#a66396","#f12b96","#966296","#957296","#b2a796","#aa4596","#d1b696","#ed5896","#f5c596","#664896","#d26c96","#927796","#7b1f96","#e54f96","#517a96","#82ce96","#425996","#e19496","#6b7796","#81ba96","#906b96","#5fcf96","#c56596","#c3d196","#e8be96","#ef5896","#3dd796","#845496","#f22b96","#858f96","#90d496","#c83196","#922996","#f38696","#ee9696","#8d6596","#736796","#534996","#c3b596","#b35896","#77a596","#adb196","#33de96","#f9c496","#93bd96","#6d4496","#da9896","#635296","#977c96","#79de96","#b28b96","#6ac296","#e68d96","#785796","#a19d96","#ed6796","#922596","#456f96","#e15196","#836596","#38b896","#d4c596","#f8a196","#a1b696","#c08896","#767796","#f3d396","#6fba96","#626496","#90b096","#939096","#3d4096","#65bb96","#cf6d96","#6b7c96","#56b996","#c5dd96","#f67696","#ab8396","#702c96","#394496","#6b4196","#42e396","#8d8196","#586896","#37bc96","#506896","#62d696","#948096","#6b4596","#bd8596","#daa296","#6ce196","#4b3896","#546396","#8d2b96","#af8696","#6e6e96","#aebe96","#9e3b96","#93bd96","#cd8c96","#b44f96","#8ea096","#5bd896","#97b196","#81b796","#7c1f96","#f29096","#6e9596","#a56596","#d8da96","#b97f96","#ddba96","#9c8e96","#7f4196","#f58c96","#458396","#c9bc96","#da2d96","#b17f96","#b2db96","#86ad96","#4e7596","#aa2096","#693996","#7f8996","#774b96","#3d5396","#48c996","#843096","#375596","#d83b96","#742396","#914d96","#47d996","#cd8396","#494c96","#cd6b96","#5e3696","#693b96","#4ca796","#3e7a96","#7ba496","#72db96","#a7b296","#a8c096","#a87196","#858896","#dc5a96","#5fdf96","#434d96","#a29796","#848b96","#659d96","#904896","#613896","#f5b196","#402896","#a8ac96","#9a9496","#8b5896","#c24c96","#f2a696","#ea7996","#af6496","#4c2196","#9b2996","#f9c796","#b64196","#89b396","#c73196","#a03396","#ddce96","#ac9996","#66ab96","#ea7096","#e9a296","#4e6296","#a05796","#ada696","#c6cb96","#dbc396","#a32b96","#592a96","#cd9496","#bd8196","#3f3096","#e08f96","#bccb96","#4a9396","#81b296","#49b196","#a23a96","#56a096","#657f96","#819a96","#a17f96","#a05a96","#333e96","#b15496","#d2a796","#eb9a96","#ee2496","#732c96","#6ad796","#9fcc96","#d8b096","#b32096","#676996","#deba96","#7a6896","#f02696","#a22596","#b9a196","#399796","#9fcf96","#bd8396","#e8d096","#576196","#7da396","#c36f96","#632f96","#d57796","#88ce96","#45d896","#4bdc96","#d15e96","#ceb896","#d03896","#c08d96","#888696","#47c896","#4db096","#3c1f96","#bca596","#7baf96","#83bc96","#923996","#f43196","#8c9696","#89cb96","#e1d696","#f14c96","#8b8796","#774496","#3a5496","#998696","#8ea296","#74a596","#69bc96","#382b96","#7cbf96","#bc6e96","#bf6f96","#8e3b96","#323f96","#cc3496","#897e96","#64cd96","#60de96","#3d5a96","#efb396","#418896","#aa4296","#7e4496","#807596","#ecb096","#819b96","#683896","#d45896","#d9b696","#614c96","#472396","#7b7196","#ceac96","#b42896","#6e4596","#864996","#6a1e96","#f0a696","#522b96","#f25796","#3bac96","#9d3e96","#b9a096","#81bb96","#729496","#c21e96","#a23f96","#a08996","#c84896","#d5d596","#9a5396","#386696","#d4b496","#b7a296","#7e6a96","#aca896","#e15996","#90d496","#f7cd96","#b65796","#418096","#455296","#92bd96","#8e6c96","#654796","#53ab96","#717e96","#74d996","#8e9b96","#d8cb96","#f24996","#f99696","#da6096","#5ca396","#e7d796","#632596","#db4896","#754e96","#45ba96","#c97696","#5dce96","#717896","#343296","#40c696","#eaba96","#49be96","#6bb196","#41d396","#65d396","#f2db96","#dad596","#712f96","#a89396","#5fa596","#becd96","#92b796","#54bd96","#9cd196","#7a4496","#6b6696","#535896","#3c9896","#b48296","#a0a196","#cdc596","#71bd96","#cebd96","#559b96","#9ad096","#e6d096","#afde96","#b64696","#bc3e96","#6d6096","#47ab96","#b44b96","#b86296","#a0a696","#bec496","#e16996","#4eaa96","#445796","#554296","#5f5496","#a79a96","#cace96","#f86d96","#4a4296","#688296","#526596","#e6be96","#b4c196","#4e3996","#94e296","#bad196","#aa7796","#e99d96","#a1d696","#f77096","#734196","#8eaf96","#614f96","#606196","#6a7596","#b8e496","#59ce96","#40b296","#6b7996","#bd6e96","#488296","#dca896","#c85796","#846196","#7b7396","#59b896","#909696","#ebc896","#908196","#349596","#809c96","#80a896","#a5b696","#b2c396","#aacc96","#3b4496","#493696","#78af96","#b44696","#e05496","#613c96","#323696","#6b8896","#b84f96","#f99296","#b86296","#522e96","#6b8f96","#3a6896","#637596","#e5dd96","#8bc896","#e28a96","#e6e096","#e2d796","#6d7e96","#7c4996","#3b4e96","#e92696","#693296","#63e496","#7b8d96","#f17196","#6d9196","#898f96","#ab4296","#566996","#379b96","#46e496","#7e2096","#467696","#5d2c96","#919996","#de8896","#5b7396","#877c96","#ce5796","#a58e96","#a6e396","#e23596","#ce3396","#b83f96","#3f4a96","#852896","#a63396","#b9d396","#df8796","#78b896","#ae5396","#a09396","#e83896","#7a2896","#589a96","#c4dd96","#5f5d96","#4edb96","#4dc596","#4e4596","#bc6296","#73b096","#9ddb96","#3cc896","#723d96","#9da196","#3ab496","#c7b696","#de5296","#c23b96","#f97a96","#328c96","#357796","#916a96","#7a3096","#bab696","#489196","#a1cd96","#ada096","#a4a296","#5dca96","#519e96","#69bb96","#ad3596","#5e8296","#bf9596","#e17b96","#9a6696","#dcb796","#854396","#7e6c96","#6ce196","#cc7d96","#6ab396","#f36496","#3c5a96","#356196","#ac3f96","#e9e396","#67df96","#a8ca96","#939d96","#afb596","#c9aa96","#4bdd96","#f76496","#cc7f96","#466396","#595496","#7ec196","#812596","#664496","#f45096","#678496","#4b1e96","#77d796","#ba8a96","#3cc696","#72e296","#b7ba96","#838a96","#e59f96","#41da96","#9c4c96","#bc3c96","#d84b96","#c28996","#439f96","#409d96","#878a96","#612696","#91e196","#add696","#66c796","#ab7196","#3a3f96","#43cc96","#afa896","#7eb196","#4f4096","#6c6896","#b07b96","#616496","#743f96","#83b996","#bc7896","#5b7b96","#c5af96","#e58796","#458496","#d8ac96","#e64f96","#4a1f96","#685d96","#b6d296","#b49796","#905196","#63e596","#a7d096","#d9dc96","#59b896","#ad8096","#9c9a96","#825f96","#918196","#54e096","#86cf96","#75b496","#c6a796","#d62796","#54a796","#3c6d96","#76c896","#a96e96","#979296","#a5cd96","#4f5596","#6e2b96","#83a496","#b09e96","#a1ad96","#c51f96","#995296","#a0c696","#b2a396","#f48496","#513b96","#97cf96","#9c8f96","#4f8096","#a3a896","#b2ad96","#64b096","#f99896","#7b6296","#9b7896","#c83f96","#334a96","#c28096","#e19896","#6f8496","#9a1f96","#f86696","#db6296","#f66d96","#8ba696","#578296","#918f96","#864996","#d83196","#51c596","#95bb96","#d4bf96","#836196","#843196","#33d796","#8fce96","#92b296","#f3a196","#6a4a96","#89a096","#f6a196","#f7c296","#6ca296","#e47996","#942d96","#3ee496","#418496","#7d8e96","#ad9c96","#ba7096","#a49796","#985c96","#507796","#f42296","#376f96","#dd1e96","#b39696","#952e96","#be6b96","#cb8d96","#a0c196","#eb2a96","#f9cc96","#d35396","#4d7b96","#f26796","#4d9396","#3ecd96","#f9a396","#707096","#de9496","#a12696","#848e96","#e52596","#af3c96","#dddd96","#e93f96","#dc7296","#987396","#542596","#61c996","#bc3396","#912996","#4c9496","#61c096","#a25f96","#d08e96","#408596","#e54f96","#4ed496","#47bb96","#eea896","#962796","#9d5c96","#e9a796","#52ba96","#3e9496","#df7596","#c7c296","#a08496","#7fdc96","#ba9796","#b38596","#a3db96","#f5ac96","#c3a696","#e73b96","#e08496","#3bc796","#a5d696","#616f96","#563596","#4d8b96","#ca6c96","#c3e596","#de4b96","#795196","#f04396","#b69d96","#486e96","#5eab96","#335196","#3c3296","#784c96","#379296","#d3be96","#4d4496","#b2a796","#c8ba96","#954596","#b4ce96","#a2c896","#8e3b96","#602296","#789b96","#445196","#cfa996","#e9d096","#536296","#c2a996","#ab4b96","#e5cb96","#7ba896","#8c2896","#61dc96","#4a4e96","#7adc96","#ac6f96","#c48596","#67d396","#492c96","#aeb596","#4ade96","#47b296","#e8c296","#c15d96","#5a7496","#f2db96","#959d96","#364e96","#355796","#efdb96","#f32e96","#66bc96","#7a7596","#662896","#e24396","#616e96","#e05696","#ec7d96","#4b8a96","#999496","#e79196","#9a5496","#d05e96","#eabf96","#736296","#caae96","#c3db96","#a0b196","#563c96","#e9ab96","#c1c496","#403d96","#477c96","#433a96","#75c696","#642396","#7d5e96","#b3df96","#bf8d96","#629496","#78e096","#a66696","#438a96","#bcc996","#f47796","#4a2a96","#61dd96","#445d96","#ac2996","#d3a596","#71a396","#895896","#66a496","#6c5896","#a78c96","#84d296","#795c96","#84a696","#d51e96","#832f96","#dc4896","#f48a96","#bb2096","#cb7196","#e9c496","#ce2a96","#91a496","#e5c596","#db6796","#e0bf96","#b76e96","#ea1e96","#bdac96","#9d4796","#ac2596","#d3bb96","#c27296","#842096","#8b8e96","#7fb296","#d1de96","#773796","#a25596","#cc7f96","#caa596","#f66396","#973496","#625796","#d25496","#3bd696","#e65e96","#a5d596","#d33c96","#9acb96","#3f4c96","#c3c396","#4e7b96","#786c96","#d46096","#83ad96","#d1af96","#5b8a96","#f35496","#e7a996","#cc7596","#94d996","#af8796","#394496","#cfcf96","#4e3f96","#a1b296","#47b096","#8ca396","#a4d796","#af3d96","#d62d96","#3f9b96","#6d7a96","#e27296","#389b96","#7dd296","#f8b496","#b3e596","#6d7b96","#cce296","#ce9d96","#5b5796","#79ba96","#6caa96","#675a96","#772296","#ec5b96","#9c9a96","#b71f96","#5a4f96","#d8c896","#49e296","#c07f96","#3ad896","#636696","#939a96","#4c3a96","#f96c96","#4f2996","#8f3c96","#a85896","#d99996","#e8ac96","#564396","#9e5996","#867496","#799196","#626596","#f88896","#543096","#d6d996","#6db696","#5e9f96","#5a9496","#f5d896","#ee2e96","#d16096","#cd2e96","#75d796","#b6a696","#e06c96","#672896","#a92596","#702e96","#aa6096","#e03c96","#c15d96","#9e7796","#b85796","#a3a996","#8d2b96","#d83196","#a09e96","#f7d696","#bbe196","#f39896","#c5af96","#696396","#8f6d96","#4cd996","#b0b996","#b56496","#aba696","#55a096","#36b196","#c16196","#e6ba96","#87d696","#3e8e96","#b68196","#db3e96","#7a7996","#9cdc96","#b9a196","#9f4096","#d2a696","#52c696","#94e396","#ec4596","#58de96","#71dc96","#89af96","#8c3e96","#933b96","#329096","#bf6a96","#ce7e96","#dec596","#403596","#b46f96","#ccde96","#8b7d96","#6de296","#c9b296","#4f4e96","#8b7396","#cc3796","#647596","#6bb796","#d3a996","#ca2f96","#74c496","#444196","#efc096","#815a96","#d4c996","#536496","#367296","#93c896","#647596","#939c96","#79b996","#f1d496","#533196","#844c96","#4d8a96","#495b96","#3b7196","#b56096","#7aa696","#cc4b96","#d8b396","#eac396","#84a896","#672d96","#596c96","#859996","#afa296","#ad3a96","#3cc096","#ab5996","#f04796","#534e96","#ee2996","#c8c196","#32dd96","#c5b896","#ddaa96","#51ab96","#a4c196","#d48796","#80c996","#45cb96","#c66b96","#40c996","#b0b196","#46db96","#413f96","#905896","#336596","#4e5b96","#e15096","#542196","#9d9496","#713196","#74af96","#b88996","#87a496","#4c9f96","#3b8596","#602496","#eb4596","#d79296","#9d6496","#785496","#a0b196","#9a5f96","#6db196","#457e96","#7e7796","#47b096","#707d96","#c6c896","#9d9a96","#e34f96","#6e7f96","#e89496","#3f2d96","#e9d996","#e74e96","#a4cc96","#ac7d96","#839996","#d2e396","#679c96","#32ad96","#674396","#b37296","#f13396","#375596","#ce8d96","#a5c696","#f49196","#71ac96","#6bca96","#ec5996","#672d96","#cd5696","#d83796","#5a8296","#e27896","#e55396","#ba7d96","#ed7c96","#b9ad96","#cfc196","#c45396","#585596","#ad7896","#8cd296","#995996","#7d2c96","#38c896","#3c5396","#84d196","#3e3f96","#d9da96","#46d796","#c54496","#dcaf96","#cfda96","#36a296","#39b096","#f89296","#a59f96","#662496","#d39496","#473596","#75df96","#49b996","#c24496","#3d5396","#be2496","#d52896","#e28296","#637b96","#513496","#d73696","#8c2d96","#f49696","#a67b96","#402096","#b6e396","#6a3396","#406e96","#6a6596","#a0c196","#a13d96","#5fde96","#3c5a96","#9c4096","#c3e596","#67e596","#f7ad96","#7d7e96","#813b96","#838f96","#bc7096","#aa7b96","#87b396","#435b96","#8a4e96","#9dd996","#b73096","#637796","#82cd96","#855896","#afb696","#b44d96","#c8d896","#d09b96","#58b396","#483496","#327196","#da3d96","#3a1f96","#53b796","#a52096","#ead696","#50c696","#6d3c96","#378796","#621f96","#999796","#589e96","#8ec696","#a09296","#c7d396","#79d796","#42c596","#397e96","#f85596","#f6ca96","#c2c696","#c35396","#95c096","#93c196","#b1d896","#b03496","#522396","#997d96","#ac2a96","#9ed596","#509896","#921f96","#79de96","#652c96","#a08296","#df5496","#75c696","#9ae296","#546e96","#688796","#f3c396","#b7a096","#a71e96","#c77b96","#d0cc96","#858996","#529b96","#53be96","#b8d496","#ed4296","#c0df96","#482596","#a65496","#73b196","#e56996","#a1c296","#a12096","#d58c96","#3ba196","#b26896","#586f96","#463696","#943f96","#4fa396","#a7b096","#704d96","#afcb96","#a55b96","#eb9296","#7f3296","#e5a096","#3f9596","#352196","#8f3396","#df8596","#373e96","#e16d96","#8b2b96","#a02996","#867b96","#582d96","#b1bd96","#865f96","#b58d96","#e9d596","#5dde96","#9f4196","#388696","#4d8f96","#b93896","#e02896","#b7c996","#9f7f96","#da4996","#925b96","#e83296","#da5396","#cfbb96","#c03196","#cc9696","#9c9696","#e3db96","#579a96","#d83296","#af7096","#638196","#9dc296","#519396","#a8e496","#467996","#686896","#504896","#728f96","#5a3996","#335096","#e9ba96","#a0c496","#653596","#9dca96","#634f96","#859b96","#882f96","#855896","#762c96","#7f4496","#a5c296","#bf3596","#c55d96","#a5b996","#992e96","#f06596","#689f96","#d75496","#84ba96","#81ac96","#8ec096","#ca6a96","#a89b96","#43b096","#87aa96","#b8c296","#af7496","#c5a396","#952196","#357396","#ed7e96","#5d8396","#453496","#cb8c96","#ada296","#6b8f96","#506996","#ae7a96","#46a396","#b7ab96","#9d4e96","#edbe96","#e53e96","#992d96","#59bc96","#e32296","#c14696","#ede596","#599296","#d57296","#774296","#9b9796","#793796","#516496","#455496","#d9c596","#92c196","#bd8396","#aa6f96","#353296","#792e96","#a37c96","#841f96","#b58996","#4c5996","#6bd096","#3b6f96","#409c96","#ec9396","#434f96","#ed7f96","#afb696","#714f96","#512d96","#ca9796","#cb9b96","#682c96","#6a4596","#bed196","#478996","#3a9896","#482796","#64d296","#a36e96","#742096","#d5b696","#ca2b96","#337696","#6f2896","#832996","#b75696","#f26b96","#c5ce96","#5c5596","#999b96","#993396","#e96296","#6ede96","#462b96","#6aaa96","#d6c496","#983e96","#8bcb96","#bce096","#f79d96","#81d396","#9fda96","#e32b96","#a12d96","#724c96","#695196","#a05c96","#967696","#e59896","#456996","#463496","#4c6896","#945696","#3a2496","#bd2e96","#401e96","#c49e96","#929496","#7a4196","#c66296","#3f4496","#cf3f96","#5b6d96","#869196","#543e96","#e1c396","#614d96","#5fa596","#458b96","#71d496","#7ac496","#a74796","#958296","#c8a796","#a06396","#66d796","#45b296","#913e96","#546296","#95d996","#cb7e96","#706596","#f9b896","#f44496","#f0bf96","#a43696","#825a96","#695b96","#734b96","#ba8e96","#ef3896","#689796","#628e96","#45d796","#672196","#e19596","#a75c96","#cc8896","#f94896","#b9e196","#8d7096","#6a9696","#e66096","#e8ba96","#91ac96","#494896","#e25396","#993396","#8f6d96","#41df96","#6cc496","#f6c096","#457696","#764a96","#392e96","#f53796","#c24596","#667f96","#a39396","#d6d896","#e68696","#c42196","#eec696","#b5d396","#cbd096","#8bac96","#6f2e96","#413096","#a28696","#c18196","#52c796","#9c4f96","#375396","#be6196","#73aa96","#99e496","#dd6096","#3d3996","#959596","#868e96","#574996","#864996","#739496","#7ba096","#adc596","#77e196","#aecd96","#933a96","#388996","#c29496","#bac096","#8fda96","#626f96","#42c896","#4db796","#b83296","#d49696","#b72096","#f88296","#bb9e96","#dc2f96","#8eb096","#884896","#76b696","#837696","#e96796","#bcd996","#b72c96","#458e96","#3a2a96","#d3e096","#8a8096","#5be096","#9e2f96","#a76396","#d9ca96","#608696","#5fe096","#598496","#c3cf96","#575896","#5abb96","#c28596","#a06696","#e23996","#cae296","#8f4496","#534296","#9cae96","#3de396","#5d4296","#d22d96","#76b996","#98a096","#f39b96","#d45e96","#b19c96","#f5d696","#ae4496","#973996","#573896","#c74496","#6d9296","#3c6f96","#374396","#ec7f96","#ad6b96","#576496","#da7a96","#664696","#617096","#8c3596","#7b6796","#b68d96","#baac96","#cd9c96","#9cb196","#bd3696","#7b9896","#bf6596","#d19c96","#5b6e96","#d2af96","#51dc96","#516b96","#6ee596","#7f7696","#814496","#d03996","#3b8a96","#9e5996","#a76e96","#743e96","#7cdd96","#688996","#50cd96","#37a396","#7fb596","#b78696","#e25d96","#589596","#843296","#5acf96","#cf7c96","#728096","#442c96","#399f96","#883696","#5ccf96","#f48796","#e0cf96","#d93496","#f19296","#f98096","#4b8996","#4a3096","#759296","#3dd796","#be6d96","#6e9496","#d2af96","#704496","#4cdf96","#d33596","#7d9996","#3fab96","#9a2496","#ab9c96","#68e196","#616296","#e5dd96","#b85d96","#a25096","#449396","#9dae96","#8dc296","#36b596","#a65496","#dd4a96","#c66396","#b38996","#b39396","#eebd96","#659296","#5d3b96","#eedb96","#747696","#588f96","#e89e96","#864496","#426e96","#c23996","#cea796","#76b496","#bb5296","#6b5496","#aa6296","#b13596","#76d096","#bcad96","#6ecf96","#427796","#807b96","#42a796","#e48596","#ead696","#904296","#d1c296","#c92a96","#9e5f96","#543196","#367f96","#caca96","#ba9f96","#eb9d96","#a7be96","#cbe296","#618596","#392e96","#eb5e96","#ac7e96","#a84496","#d05996","#44bc96","#c2da96","#3f7996","#e09096","#c59296","#f6dc96","#692d96","#998796","#486196","#e98796","#606e96","#887e96","#3d7496","#d97696","#a25696","#dad996","#bee596","#a9c996","#47ba96","#bb3696","#4fde96","#a35d96","#549d96","#64d596","#973496","#f86496","#56cb96","#b57396","#69c196","#4cbd96","#b1dd96","#642996","#528896","#976596","#ba7496","#b79796","#777996","#b87396","#6bd996","#5d2a96","#f57496","#619996","#a57496","#4c3496","#bd3596","#9ba896","#87d096","#d32e96","#8adb96","#d9d696","#e65096","#794796","#c19296","#d98596","#c97896","#bbc596","#403096","#3d4196","#478796","#9bb096","#683696","#60cc96","#9e8d96","#ad4596","#35a696","#5e5996","#379596","#876196","#ae5d96","#66d296","#c98596","#42ac96","#5e2696","#414d96","#b73a96","#ba6796","#cfc896","#d02f96","#6f2c96","#52b396","#edc196","#f7d596","#c74196","#aa8e96","#c17296","#a8c096","#665896","#6ed596","#497d96","#acc296","#407d96","#876f96","#f67e96","#5b5196","#e5c696","#548b96","#f53196","#8cc596","#b59d96","#8b7496","#3a3996","#999296","#55cc96","#51d996","#d85a96","#8b3d96","#cc9596","#a36796","#f82596","#835696","#813d96","#8bb496","#3dc896","#a1d296","#768e96","#324a96","#5d8796","#e22b96","#aa8996","#d76496","#b01f96","#f89d96","#736b96","#329896","#d7b196","#33d796","#702996","#cd3196","#e68596","#cd7296","#3a2596","#b43996","#b04896","#94b896","#915396","#a12b96","#467096","#912f96","#91b896","#918796","#5f3896","#66cf96","#339496","#78c496","#e51e96","#8aa896","#a5c196","#d2d396","#f94396","#624b96","#885b96","#b35496","#502396","#b77b96","#ead596","#b63896","#509796","#726d96","#7d2196","#a8a096","#6bce96","#922296","#3ea596","#de4396","#8f2d96","#4f8696","#a4c996","#ed4696","#8cc796","#716396","#558996","#ea4696","#616496","#473b96","#ced996","#3b9996","#59ca96","#807596","#d62c96","#b87d96","#5c9996","#aac896","#6c9b96","#3c7496","#c1b996","#c6bb96","#d3c996","#e8ab96","#f92f96","#ee7a96","#c17896","#e6be96","#e37f96","#3e9c96","#77a196","#71c696","#ecd196","#d7c496","#e02a96","#c8c296","#86dc96","#bd9b96","#906996","#634d96","#9c5a96","#829196","#f99496","#663896","#b07a96","#e15496","#88c996","#86b596","#6d8396","#5a5296","#bf2a96","#e62f96","#f35996","#d45596","#7ee296","#f5a196","#cccc96","#7cc896","#38dd96","#689096","#b97f96","#3d7996","#f62496","#929696","#896196","#c3db96","#6e5896","#3f6196","#9b4f96","#8e8196","#673b96","#745e96","#c4d396","#e53296","#4ab096","#9aa196","#ea5996","#57da96","#d3c796","#486d96","#3f5396","#931e96","#c0d496","#c89996","#a07496","#be3096","#edc096","#33c696","#77b696","#343396","#611e96","#518496","#5e5496","#e79f96","#bb9396","#c84596","#d4a596","#be2796","#633596","#4cc396","#e1e296","#7e8d96","#e15d96","#da4096","#6c6b96","#6a8496","#b13b96","#bf3896","#bbbe96","#60c196","#9ec896","#aed696","#90e196","#b27796","#692896","#378a96","#5e3296","#db3396","#45d196","#b79196","#b75c96","#45a096","#3f8d96","#62af96","#35c996","#6da796","#c29a96","#c54296","#aa9796","#c63196","#d9ca96","#b54296","#bf9f96","#694496","#7eb096","#df7996","#464296","#c21e96","#7b4096","#718d96","#edb296","#609796","#da7c96","#ee4a96","#569d96","#829b96","#aea896","#7d3196","#9e6296","#6d4d96","#b28796","#44d396","#4f9a96","#992996","#bf3f96","#c48996","#913d96","#c36896","#59d396","#c92696","#323596","#add096","#849d96","#538a96","#c07896","#e72896","#756e96","#3eac96","#d7bb96","#f07a96","#496096","#4a5496","#7e5896","#5a4196","#aa3c96","#e4cd96","#eb5996","#e92e96","#43c896","#cccc96","#62b396","#bee296","#b44b96","#467496","#beb596","#d05496","#f7e596","#4de496","#48de96","#6cdd96","#ef9f96","#6b4a96","#4a8b96","#bf6496","#a84396","#6ed696","#6a4c96","#958d96","#996c96","#a06496","#397f96","#bb5696","#9be596","#4b4b96","#b95f96","#8f6196","#3c3c96","#c5dc96","#77c996","#6f2096","#85cb96","#49cf96","#3fce96","#c7b396","#df2696","#be5b96","#753396","#474296","#3cad96","#abbd96","#79a996","#78a896","#692396","#80cd96","#879396","#7b6096","#d3c896","#3ce096","#743596","#b6da96","#939496","#352696","#b69b96","#d82196","#a64d96","#e54096","#846896","#d2aa96","#c3a396","#a65196","#667196","#9db296","#a89696","#ecab96","#556f96","#9ee596","#5d3996","#398196","#455996","#4a6e96","#6ca696","#5a7f96","#635096","#e45196","#39cc96","#426296","#f22896","#897e96","#d93c96","#e66496","#9d5396","#73dd96","#832596","#851e96","#664296","#40a296","#436496","#9fc496","#81da96","#b45296","#78e396","#f32b96","#92d296","#90ad96","#d98e96","#7f5b96","#82a896","#5f6396","#d35f96","#ed6a96","#c93a96","#963396","#b9ab96","#c73d96","#a87096","#d63396","#6d7d96","#f14e96","#87ad96","#442496","#8fad96","#63d596","#bc6796","#86c696","#9a9b96","#933e96","#f46496","#583f96","#8bb896","#e63996","#4ae096","#b99a96","#6aaa96","#e52796","#cf7d96","#b2e396","#cb9b96","#efad96","#aac296","#99aa96","#6f6696","#a85e96","#669e96","#764496","#e29096","#a28596","#837996","#be8b96","#53df96","#b44296","#95d396","#b03996","#5d9f96","#51e496","#f1d596","#aac696","#3d2f96","#9e6d96","#dc9996","#924096","#e5c496","#c6ba96","#d24696","#f41e96","#cc4c96","#50da96","#533596","#4edc96","#e52296","#c8e396","#ba8396","#eca796","#5ba696","#5cb096","#7f4396","#e44c96","#5b5496","#514e96","#9d3e96","#855c96","#502696","#36a096","#c72a96","#4ed696","#4f4096","#647696","#b4e296","#74b496","#6eb196","#eb3996","#f48996","#882d96","#6b2b96","#d73096","#da2696","#d93096","#bc6d96","#d0c096","#d0a496","#8eba96","#73a696","#a5cc96","#eca196","#55a396","#426c96","#e9d396","#47d996","#bb6196","#5b5696","#e24196","#c4c896","#693996","#9fc496","#f68196","#5f3f96","#cadc96","#827d96","#3f3e96","#d0c296","#c2ab96","#955696","#ea6b96","#40a296","#a4b796","#9e2696","#7c8e96","#87e396","#d4dd96","#f09e96","#8dd896","#d07d96","#a54396","#867696","#cb5496","#b3d196","#c5ae96","#797696","#78c696","#6c5796","#599c96","#373796","#466896","#e74d96","#e1ab96","#385096","#dac696","#be5a96","#dd3096","#d3de96","#8f4796","#be2396","#9fcc96","#c38a96","#d7ae96","#7fad96","#487c96","#b94e96","#4f8c96","#57ca96","#5d5696","#a9ba96","#b42396","#e8e096","#f74e96","#83d196","#5c9d96","#f36196","#9aa696","#d17796","#5fbc96","#d22796","#538996","#e55496","#6a3e96","#c5de96","#aa3896","#e82396","#581e96","#f95c96","#f28696","#42e396","#acba96","#858296","#c73f96","#b43a96","#984996","#624296","#3bce96","#548396","#ddc796","#ad8c96","#f4cb96","#7c4896","#adbd96","#c79996","#7e6596","#ebb396","#cb7d96","#708996","#a08c96","#686d96","#97d396","#bb2a96","#bf3c96","#753a96","#6b5f96","#a0b796","#5e7a96","#bf4496","#364796","#3ee496","#548896","#ec4b96","#a8a996","#976796","#d35996","#62c196","#887296","#9fb896","#e9e396","#c67296","#4c4e96","#892896","#6abb96","#f9ca96","#942e96","#f68f96","#cf3996","#71b896","#937f96","#b06796","#3c5096","#f52c96","#6d8296","#358196","#dd2f96","#ed2696","#616296","#e3de96","#947e96","#499b96","#bb9b96","#7cbc96","#4f2496","#e24d96","#743e96","#562b96","#b19d96","#eabc96","#958e96","#7e5396","#3bb896","#63c896","#e66a96","#67c796","#be3496","#ac6796","#ac7a96","#cd5e96","#d34996","#dd5996","#7d9b96","#5d5f96","#baa096","#f06796","#7ddf96","#e97b96","#761f96","#716396","#a48096","#e75c96","#877696","#65bc96","#88ce96","#4e7f96","#bed196","#7fde96","#d36296","#cb6496","#625496","#952b96","#385496","#6db996","#acc896","#517296","#dbd896","#8a7c96","#ec2996","#efa096","#4b3496","#3a8596","#b1c796","#915396","#abc996","#d93296","#f98c96","#684a96","#863896","#652c96","#d78296","#e62396","#aa6596","#7a5b96","#695896","#b52b96","#98bc96","#bebd96","#46a896","#7f2a96","#c6cf96","#d2bb96","#e1a396","#c2a996","#ea5496","#722596","#c57396","#dcd296","#40a296","#b9e596","#76be96","#675c96","#97d596","#dd8096","#dc3596","#e78696","#6a9396","#647b96","#439196","#9fb396","#e4dc96","#55a496","#bc5a96","#499296","#863d96","#813696","#daa796","#584c96","#81a896","#57ba96","#3f3e96","#805996","#e69496","#c5be96","#b49396","#8f3196","#f9c096","#874e96","#f78396","#879296","#9e3696","#3dbc96","#a15296","#d39796","#346496","#9c7c96","#ba4696","#d64b96","#c22396","#d5da96","#3e8f96","#e79b96","#d35d96","#39b896","#c1b496","#8a4196","#79e196","#776696","#5bbf96","#676296","#b2b196","#568996","#b2a896","#b3bd96","#832396","#61bf96","#caa396","#e09896","#4cc396","#6f2896","#c72f96","#4aa896","#afa996","#70c096","#3c7c96","#4d8896","#ae4a96","#5f9596","#933f96","#c99496","#9e6c96","#acdc96","#5c3196","#63d196","#b98a96","#c65096","#e93996","#d2a496","#4cd896","#948c96","#74d496","#904596","#b14f96","#847f96","#a16796","#704f96","#f04f96","#babb96","#f29396","#9a5796","#75df96","#c8be96","#618396","#722e96","#598f96","#c52e96","#5b2196","#72d896","#382396","#c51f96","#9b8b96","#d57196","#d14b96","#662a96","#814a96","#b11e96","#438396","#cc2996","#71db96","#3b5396","#6a7196","#d12496","#4ec396","#ba6a96","#b9e296","#42a396","#51b196","#d35196","#de2496","#c83596","#8e7a96","#f84996","#bd2e96","#514396","#883796","#97b296","#4fa896","#8f8396","#419696","#775896","#58cd96","#c15496","#e28596","#693196","#84e096","#4d4796","#e67896","#4e8696","#b24496","#368496","#e25096","#cbd096","#335796","#719396","#951e96","#602096","#862f96","#695a96","#939896","#823596","#409396","#7bbf96","#73ac96","#991e96","#c9d196","#735496","#b35796","#3ee496","#474496","#a7a096","#3b3296","#a93d96","#cb8b96","#70af96","#399f96","#8dc296","#b6a996","#f34096","#504c96","#d4e296","#625596","#e89196","#936496","#83bf96","#aeda96","#e22e96","#4ebe96","#964596","#b2d796","#9ccd96","#d4a196","#65a696","#7c2296","#f3d896","#d0ca96","#adb296","#578196","#5b8096","#66d896","#8a7d96","#ed7496","#bfd896","#e93996","#488196","#975d96","#e34596","#d0b896","#388e96","#58e396","#ef2b96","#ded496","#c4a496","#5f7a96","#a3d796","#3eca96","#6a5d96","#d63f96","#b33f96","#f8c596","#71d296","#4cc796","#92ae96","#db4d96","#342396","#eb3b96","#d66f96","#b62296","#b6a296","#518a96","#f18896","#c5ca96","#7d5896","#644b96","#c1b696","#5c3c96","#d78396","#a8b596","#7bcd96","#9adb96","#367096","#4e8e96","#3e7096","#539396","#cac396","#d13496","#ec9596","#782196","#327e96","#509796","#806296","#818496","#f49f96","#3fa796","#b04196","#a72096","#c0ad96","#b85496","#41c996","#c65196","#49a496","#3c3896","#cf6296","#f38396","#3e8296","#9a8b96","#73c696","#689096","#48dd96","#85d396","#f1ac96","#90ac96","#798b96","#955596","#383896","#6abb96","#6c5a96","#c94796","#ab4c96","#862396","#5f8f96","#874a96","#6e2096","#539796","#3b8b96","#39ac96","#f04c96","#464096","#a97e96","#86c096","#4f2c96","#cd8196","#9e2f96","#75a696","#4d7696","#bb6b96","#927b96","#435d96","#4b5396","#d3a496","#765596","#b5b596","#ecdc96","#92b696","#71d696","#3a7796","#dd7896","#cf2996","#39bd96","#847b96","#69a296","#be8e96","#6fc796","#6e4696","#582996","#adcd96","#cfd796","#a58b96","#6c6d96","#a2be96","#d68996","#e74e96","#ce2396","#82d996","#a16296","#8c3196","#f94996","#ab8f96","#aa4496","#969596","#dc7196","#54ac96","#deb996","#4ead96","#d4da96","#6a9a96","#9e8b96","#7d5096","#c91f96","#8b7896","#8e8b96","#7a5396","#3b4496","#a76c96","#634f96","#739296","#ba8796","#604196","#6b9296","#6d9396","#ba8896","#f52796","#5a7c96","#4a7796","#3be596","#bf4696","#727496","#9d2396","#97da96","#39e496","#5c3696","#a79c96","#3d7496","#615996","#52b896","#859096","#e59996","#be3796","#cad996","#b89096","#98c496","#d23a96","#615496","#f3a196","#602d96","#87a196","#f75d96","#8a6996","#35c896","#548196","#934e96","#7c7796","#38ba96","#826f96","#b88396","#6e3a96","#e6b196","#597496","#6e2996","#a12196","#e43196","#eb7e96","#b79196","#56ce96","#3cb796","#d2d796","#4cb896","#9faf96","#619e96","#e94896","#386096","#b9b396","#be3296","#858396","#a0da96","#86c996","#906e96","#86b996","#5c4d96","#d17796","#cf4096","#704996","#598996","#3ea996","#6d4196","#4b9396","#882096","#48cc96","#73c096","#a7b096","#77c596","#61a396","#dba896","#668896","#98ad96","#ade296","#dbe096","#40c496","#79c196","#d66796","#c4d796","#479396","#cab296","#7b8a96","#3f3096","#974d96","#523f96","#e54296","#aebe96","#e28396","#8a9c96","#632996","#924896","#6c8e96","#c69796","#844296","#987196","#4e5896","#669d96","#91bf96","#78c896","#bd7696","#802f96","#923596","#b35296","#e74d96","#49d996","#77e296","#c46c96","#362596","#3c8496","#e5dc96","#576d96","#d4db96","#c2d696","#923096","#513796","#b25196","#f93796","#809b96","#32af96","#46cc96","#e76d96","#626b96","#4a2b96"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}}},"id":"3d587ccd-3e06-4c0d-ab41-7f133d8a4a0b","type":"ColumnDataSource"},{"attributes":{"callback":null},"id":"959da14e-0112-47fe-80fd-047243c96a92","type":"DataRange1d"},{"attributes":{"below":[{"id":"fd7bcc33-e603-47d1-8638-66c939c53c73","type":"LinearAxis"}],"js_event_callbacks":{"doubletap":[{"id":"b0713754-e54d-4b9c-bc19-283d41b24916","type":"CustomJS"}],"lodend":[{"id":"296943ae-d196-430c-b73c-d189e2febff6","type":"CustomJS"}],"lodstart":[{"id":"7288c69d-b204-46b3-bdaf-13e6a2172207","type":"CustomJS"}],"mouseenter":[{"id":"e96bbb96-7061-428b-b214-b84957f3d639","type":"CustomJS"}],"mouseleave":[{"id":"dc23a53f-5fc6-4861-aa03-741ec26a8fb7","type":"CustomJS"}],"mousemove":[{"id":"f5f10851-d9fd-41c3-9996-541d69b98e11","type":"CustomJS"}],"pan":[{"id":"36ae4340-b3e3-47e5-a5bf-752ac7eec121","type":"CustomJS"}],"panend":[{"id":"91c5a75b-0349-4c1f-b68c-19dbc957f6b5","type":"CustomJS"}],"panstart":[{"id":"1723440f-6b73-41e9-ab3d-ace1ba18199c","type":"CustomJS"}],"pinch":[{"id":"59e7f69d-733f-4b7c-8cf2-92e60a6e0f1c","type":"CustomJS"}],"pinchend":[{"id":"025a9862-8546-4c32-95d5-e7121e052ca0","type":"CustomJS"}],"pinchstart":[{"id":"6075c5ae-a382-418d-aea6-91b21bff9f6a","type":"CustomJS"}],"press":[{"id":"79d3d10c-04d3-453b-ae6f-ab497b4f4dc5","type":"CustomJS"}],"tap":[{"id":"f5cba565-70c8-4fca-8a77-201905713a5e","type":"CustomJS"}],"wheel":[{"id":"473b0428-1416-44f6-a8e4-24fb11f33bcd","type":"CustomJS"}]},"left":[{"id":"7a0ebb69-a925-4a98-b7d8-6374e6cbf9d7","type":"LinearAxis"}],"renderers":[{"id":"fd7bcc33-e603-47d1-8638-66c939c53c73","type":"LinearAxis"},{"id":"dece7567-1735-4918-b00d-2df446e86a47","type":"Grid"},{"id":"7a0ebb69-a925-4a98-b7d8-6374e6cbf9d7","type":"LinearAxis"},{"id":"e5b03ef8-0b92-44c8-9700-d8ef4db55b9c","type":"Grid"},{"id":"0d25db4f-879d-442a-a53a-3058dff202de","type":"GlyphRenderer"}],"title":{"id":"7996831b-39ce-44e0-aa1e-015e2e9767d0","type":"Title"},"toolbar":{"id":"1c71702d-0ff6-4a5f-a889-925761c006e3","type":"Toolbar"},"x_range":{"id":"f9a274b8-a923-408b-a9d7-c6276c7aabc7","type":"DataRange1d"},"x_scale":{"id":"c8133290-d7ed-4da7-86ce-8cdf0a76b573","type":"LinearScale"},"y_range":{"id":"959da14e-0112-47fe-80fd-047243c96a92","type":"DataRange1d"},"y_scale":{"id":"bd0a090c-d96c-47da-b3df-8807ae0df147","type":"LinearScale"}},"id":"cb474b06-14bc-400d-b32b-2c7f455b6188","subtype":"Figure","type":"Plot"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"1723440f-6b73-41e9-ab3d-ace1ba18199c","type":"CustomJS"},{"attributes":{},"id":"c8133290-d7ed-4da7-86ce-8cdf0a76b573","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"91c5a75b-0349-4c1f-b68c-19dbc957f6b5","type":"CustomJS"},{"attributes":{},"id":"bd0a090c-d96c-47da-b3df-8807ae0df147","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"6075c5ae-a382-418d-aea6-91b21bff9f6a","type":"CustomJS"},{"attributes":{"plot":{"id":"cb474b06-14bc-400d-b32b-2c7f455b6188","subtype":"Figure","type":"Plot"},"ticker":{"id":"b9b3a1c4-84e1-4a84-b8e2-e4a1131836af","type":"BasicTicker"}},"id":"dece7567-1735-4918-b00d-2df446e86a47","type":"Grid"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"025a9862-8546-4c32-95d5-e7121e052ca0","type":"CustomJS"},{"attributes":{"formatter":{"id":"eff407b8-6773-42af-8ad9-da8821c4c7b4","type":"BasicTickFormatter"},"plot":{"id":"cb474b06-14bc-400d-b32b-2c7f455b6188","subtype":"Figure","type":"Plot"},"ticker":{"id":"b9b3a1c4-84e1-4a84-b8e2-e4a1131836af","type":"BasicTicker"}},"id":"fd7bcc33-e603-47d1-8638-66c939c53c73","type":"LinearAxis"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"a2f107b0-87a1-4326-8b65-461d6274c445","type":"Circle"},{"attributes":{},"id":"b9b3a1c4-84e1-4a84-b8e2-e4a1131836af","type":"BasicTicker"},{"attributes":{"args":{"div":{"id":"98daba0d-f840-4119-92e7-1e2996d2a6d2","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;scale&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"59e7f69d-733f-4b7c-8cf2-92e60a6e0f1c","type":"CustomJS"},{"attributes":{"formatter":{"id":"9e76c525-e5e5-43fd-afff-e5a4e0dcdf74","type":"BasicTickFormatter"},"plot":{"id":"cb474b06-14bc-400d-b32b-2c7f455b6188","subtype":"Figure","type":"Plot"},"ticker":{"id":"ffc72525-3035-4347-a2da-67292dc4f8ac","type":"BasicTicker"}},"id":"7a0ebb69-a925-4a98-b7d8-6374e6cbf9d7","type":"LinearAxis"},{"attributes":{},"id":"ffc72525-3035-4347-a2da-67292dc4f8ac","type":"BasicTicker"},{"attributes":{"dimension":1,"plot":{"id":"cb474b06-14bc-400d-b32b-2c7f455b6188","subtype":"Figure","type":"Plot"},"ticker":{"id":"ffc72525-3035-4347-a2da-67292dc4f8ac","type":"BasicTicker"}},"id":"e5b03ef8-0b92-44c8-9700-d8ef4db55b9c","type":"Grid"},{"attributes":{"plot":null,"text":""},"id":"7996831b-39ce-44e0-aa1e-015e2e9767d0","type":"Title"},{"attributes":{"data_source":{"id":"3d587ccd-3e06-4c0d-ab41-7f133d8a4a0b","type":"ColumnDataSource"},"glyph":{"id":"0a7591b8-9af7-45a6-bd77-204c5b0e20aa","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"a2f107b0-87a1-4326-8b65-461d6274c445","type":"Circle"},"selection_glyph":null,"view":{"id":"a4b791d4-d1e5-492b-b9cb-99f8a0be2772","type":"CDSView"}},"id":"0d25db4f-879d-442a-a53a-3058dff202de","type":"GlyphRenderer"},{"attributes":{"source":{"id":"3d587ccd-3e06-4c0d-ab41-7f133d8a4a0b","type":"ColumnDataSource"}},"id":"a4b791d4-d1e5-492b-b9cb-99f8a0be2772","type":"CDSView"},{"attributes":{},"id":"3b6d73a7-81af-45de-be96-d82259bd83b6","type":"PanTool"},{"attributes":{},"id":"cd73e260-d7ae-45a6-89f5-e4d6d9b45100","type":"ZoomInTool"},{"attributes":{},"id":"cebd8383-8f13-43f4-8e65-8cb82b070b05","type":"WheelZoomTool"}],"root_ids":["6f0f941b-33f9-44d2-9a77-19b9ffd76a0e"]},"title":"Bokeh Application","version":"0.12.14"}}';
                  var render_items = [{"docid":"c1d86e39-144a-4f7d-83da-cacc63efe2c2","elementid":"058c02aa-a44b-4c1d-94af-6a4716826838","modelid":"6f0f941b-33f9-44d2-9a77-19b9ffd76a0e"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.14.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.14.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.14.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.14.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.14.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.14.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();