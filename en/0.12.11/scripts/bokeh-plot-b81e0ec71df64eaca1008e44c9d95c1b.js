(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("a9c1206d-1518-4de2-9894-605a54c2ed5d");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid 'a9c1206d-1518-4de2-9894-605a54c2ed5d' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.11.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.11.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.11.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.11.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "Surface3d": require("custom/bk_script_225a273869a14d7fb0144f7c761e7aac.surface3d").Surface3d,
          "LatexLabel": require("custom/bk_script_4d245a4961fc4045b086aa2119f0ad16.latex_label").LatexLabel,
          "Custom": require("custom/bk_script_7e43a71bbd714655ab09145815dbaf32.custom").Custom,
          "MyFormatter": require("custom/bk_script_b64ada8818d44343b0d14823d93ffccf.my_formatter").MyFormatter,
          "DrawTool": require("custom/bk_script_cfe5420328f44687b89787ca1390e9e2.draw_tool").DrawTool,
          "IonRangeSlider": require("custom/bk_script_e7dcce66e32c4c8ebbc965d30f760331.ion_range_slider").IonRangeSlider
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_225a273869a14d7fb0144f7c761e7aac.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model. Currently
          // Bokeh models and views are based on BackBone. More information about
          // using Backbone can be found here:
          //     http://backbonejs.org/
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``,
          // corresponding to our
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // Backbone Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set Backbone listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript Backbone model sublcass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
          
          },
          "custom/bk_script_4d245a4961fc4045b086aa2119f0ad16.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
          
          },
          "custom/bk_script_7e43a71bbd714655ab09145815dbaf32.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
          
          },
          "custom/bk_script_b64ada8818d44343b0d14823d93ffccf.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
          
          },
          "custom/bk_script_cfe5420328f44687b89787ca1390e9e2.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (_a = e.bokeh, sx = _a.sx, sy = _a.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
                  var _a;
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
          
          },
          "custom/bk_script_e7dcce66e32c4c8ebbc965d30f760331.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // Backbone Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
          
          }
          }, "custom/main");
          ;
          });
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    var docs_json = '{"80aeb70f-2ec3-40af-a1f2-1aef3f9bbf4d":{"roots":{"references":[{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"00a55bb7-b9f7-43b7-875d-8f304075635c","type":"PanTool"},{"id":"908cc94b-ae32-46f0-9b18-f31d0bf05f03","type":"WheelZoomTool"},{"id":"36ecd409-dd47-4f65-9fde-d0722aaa7e99","type":"ZoomInTool"},{"id":"ee581a71-4a7d-4215-8494-7b8d3d9ab5f2","type":"ZoomOutTool"},{"id":"e8b7e549-4d19-4e24-89c5-e6633465aebc","type":"ResetTool"}]},"id":"5a8502d9-b623-445a-87d2-d7d723f25689","type":"Toolbar"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta_x&#x27;, &#x27;delta_y&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"a7578c26-3342-418f-92cd-c1622a5f8559","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"ea478077-df3a-4f96-9712-acb2b62d5f95","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"438a2d92-4c83-45f3-84e9-f6210b3e1fcd","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f5d1b09f-7d62-4373-afa1-8e3940c2013a","type":"CustomJS"},{"attributes":{"callback":null},"id":"ed31beef-671a-4bd2-b774-5d1c83b0f0dd","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"6fcc7c1f-d8bb-412a-8f76-2602c3960125","type":"CustomJS"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"a9c8521d-5282-4e3f-a40d-d1dc1716f44b","type":"Circle"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"62a9d1d2-4891-4308-add5-08837e64f422","type":"CustomJS"},{"attributes":{"callback":null},"id":"2b8a6503-9241-4480-8fba-fa94b410d8b5","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"0d8b6597-7dd0-4b47-9476-e23d77c5da0e","type":"CustomJS"},{"attributes":{},"id":"1aa34146-9b62-4562-9f5c-a66ff6b0cebe","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"27022be8-d413-4769-84f5-7deaefb83f70","type":"CustomJS"},{"attributes":{},"id":"af41f732-146c-4dd1-bbd8-8d0424617c4c","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"4da8914e-4b6d-4198-9e2c-b198c10773ae","type":"CustomJS"},{"attributes":{"plot":{"id":"ccab9270-c9a4-4d6e-a625-918da32b9e03","subtype":"Figure","type":"Plot"},"ticker":{"id":"50e30415-d96b-4c20-abfe-139cc6fa3a14","type":"BasicTicker"}},"id":"ba0c0e50-698d-4660-b048-38ce27bda46d","type":"Grid"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"afde6e8f-943f-44ee-b51b-9076061b37f1","type":"CustomJS"},{"attributes":{"formatter":{"id":"df1f72f0-5ef2-4417-a2a5-0da245bdbd13","type":"BasicTickFormatter"},"plot":{"id":"ccab9270-c9a4-4d6e-a625-918da32b9e03","subtype":"Figure","type":"Plot"},"ticker":{"id":"50e30415-d96b-4c20-abfe-139cc6fa3a14","type":"BasicTicker"}},"id":"9d25ed77-978b-46c4-b4e0-a568e9be5673","type":"LinearAxis"},{"attributes":{},"id":"50e30415-d96b-4c20-abfe-139cc6fa3a14","type":"BasicTicker"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;scale&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"1ccef640-eec4-47e6-8222-9a3f70ee484c","type":"CustomJS"},{"attributes":{"formatter":{"id":"318dc72c-7a7b-403e-9594-2bca7f4058b9","type":"BasicTickFormatter"},"plot":{"id":"ccab9270-c9a4-4d6e-a625-918da32b9e03","subtype":"Figure","type":"Plot"},"ticker":{"id":"d0a87a60-3f3a-40a2-8299-6a5772118152","type":"BasicTicker"}},"id":"4f83cf99-180a-428f-86c4-65265761ef64","type":"LinearAxis"},{"attributes":{},"id":"d0a87a60-3f3a-40a2-8299-6a5772118152","type":"BasicTicker"},{"attributes":{"dimension":1,"plot":{"id":"ccab9270-c9a4-4d6e-a625-918da32b9e03","subtype":"Figure","type":"Plot"},"ticker":{"id":"d0a87a60-3f3a-40a2-8299-6a5772118152","type":"BasicTicker"}},"id":"f84f77c7-d78a-4800-85cb-e2263db4e95a","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"d894b510-d65f-4265-a418-247660832b35","type":"Circle"},{"attributes":{},"id":"318dc72c-7a7b-403e-9594-2bca7f4058b9","type":"BasicTickFormatter"},{"attributes":{},"id":"df1f72f0-5ef2-4417-a2a5-0da245bdbd13","type":"BasicTickFormatter"},{"attributes":{},"id":"00a55bb7-b9f7-43b7-875d-8f304075635c","type":"PanTool"},{"attributes":{"below":[{"id":"9d25ed77-978b-46c4-b4e0-a568e9be5673","type":"LinearAxis"}],"js_event_callbacks":{"doubletap":[{"id":"ea478077-df3a-4f96-9712-acb2b62d5f95","type":"CustomJS"}],"lodend":[{"id":"bd0d882a-a595-4ef9-9115-8a0ae431b04b","type":"CustomJS"}],"lodstart":[{"id":"9215adfa-af62-4e6c-bebb-b714ab6937a9","type":"CustomJS"}],"mouseenter":[{"id":"6fcc7c1f-d8bb-412a-8f76-2602c3960125","type":"CustomJS"}],"mouseleave":[{"id":"62a9d1d2-4891-4308-add5-08837e64f422","type":"CustomJS"}],"mousemove":[{"id":"f5d1b09f-7d62-4373-afa1-8e3940c2013a","type":"CustomJS"}],"pan":[{"id":"a7578c26-3342-418f-92cd-c1622a5f8559","type":"CustomJS"}],"panend":[{"id":"27022be8-d413-4769-84f5-7deaefb83f70","type":"CustomJS"}],"panstart":[{"id":"0d8b6597-7dd0-4b47-9476-e23d77c5da0e","type":"CustomJS"}],"pinch":[{"id":"1ccef640-eec4-47e6-8222-9a3f70ee484c","type":"CustomJS"}],"pinchend":[{"id":"afde6e8f-943f-44ee-b51b-9076061b37f1","type":"CustomJS"}],"pinchstart":[{"id":"4da8914e-4b6d-4198-9e2c-b198c10773ae","type":"CustomJS"}],"press":[{"id":"438a2d92-4c83-45f3-84e9-f6210b3e1fcd","type":"CustomJS"}],"tap":[{"id":"01a0c79f-1cc0-4440-a68a-5a2d574656bf","type":"CustomJS"}],"wheel":[{"id":"9a73f867-e1e9-4253-b4af-7175ea83e7b4","type":"CustomJS"}]},"left":[{"id":"4f83cf99-180a-428f-86c4-65265761ef64","type":"LinearAxis"}],"renderers":[{"id":"9d25ed77-978b-46c4-b4e0-a568e9be5673","type":"LinearAxis"},{"id":"ba0c0e50-698d-4660-b048-38ce27bda46d","type":"Grid"},{"id":"4f83cf99-180a-428f-86c4-65265761ef64","type":"LinearAxis"},{"id":"f84f77c7-d78a-4800-85cb-e2263db4e95a","type":"Grid"},{"id":"606a0924-2694-484f-a608-374ba34dd044","type":"GlyphRenderer"}],"title":{"id":"8146ae5e-d400-4b2d-960f-b3a466c9dfbe","type":"Title"},"toolbar":{"id":"5a8502d9-b623-445a-87d2-d7d723f25689","type":"Toolbar"},"x_range":{"id":"ed31beef-671a-4bd2-b774-5d1c83b0f0dd","type":"DataRange1d"},"x_scale":{"id":"1aa34146-9b62-4562-9f5c-a66ff6b0cebe","type":"LinearScale"},"y_range":{"id":"2b8a6503-9241-4480-8fba-fa94b410d8b5","type":"DataRange1d"},"y_scale":{"id":"af41f732-146c-4dd1-bbd8-8d0424617c4c","type":"LinearScale"}},"id":"ccab9270-c9a4-4d6e-a625-918da32b9e03","subtype":"Figure","type":"Plot"},{"attributes":{"source":{"id":"97b975bd-4f67-43fb-9f50-e20436c8d2b5","type":"ColumnDataSource"}},"id":"72357a11-5123-4b01-a203-e3f4f21fb95d","type":"CDSView"},{"attributes":{"width":1000},"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"},{"attributes":{},"id":"908cc94b-ae32-46f0-9b18-f31d0bf05f03","type":"WheelZoomTool"},{"attributes":{},"id":"36ecd409-dd47-4f65-9fde-d0722aaa7e99","type":"ZoomInTool"},{"attributes":{},"id":"ee581a71-4a7d-4215-8494-7b8d3d9ab5f2","type":"ZoomOutTool"},{"attributes":{},"id":"e8b7e549-4d19-4e24-89c5-e6633465aebc","type":"ResetTool"},{"attributes":{"data_source":{"id":"97b975bd-4f67-43fb-9f50-e20436c8d2b5","type":"ColumnDataSource"},"glyph":{"id":"a9c8521d-5282-4e3f-a40d-d1dc1716f44b","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"d894b510-d65f-4265-a418-247660832b35","type":"Circle"},"selection_glyph":null,"view":{"id":"72357a11-5123-4b01-a203-e3f4f21fb95d","type":"CDSView"}},"id":"606a0924-2694-484f-a608-374ba34dd044","type":"GlyphRenderer"},{"attributes":{"plot":null,"text":""},"id":"8146ae5e-d400-4b2d-960f-b3a466c9dfbe","type":"Title"},{"attributes":{"children":[{"id":"ccab9270-c9a4-4d6e-a625-918da32b9e03","subtype":"Figure","type":"Plot"},{"id":"4b84b10a-319b-49b7-bc82-882ec94d1bf2","type":"WidgetBox"}]},"id":"58a9663c-91c6-47ae-ab83-fed9af827cbb","type":"Row"},{"attributes":{"children":[{"id":"4e3cb55b-5f51-4e80-939c-ddc80fd82be9","type":"WidgetBox"},{"id":"58a9663c-91c6-47ae-ab83-fed9af827cbb","type":"Row"}]},"id":"733d31b9-a589-4b67-a6c1-de118d3d0206","type":"Column"},{"attributes":{"button_type":"success","callback":null,"icon":null,"js_event_callbacks":{"button_click":[{"id":"fb34d1eb-2f67-4206-9677-c253cd6ea762","type":"CustomJS"}]}},"id":"316f45eb-504c-452a-8e86-acc2dbdab1f6","type":"Button"},{"attributes":{"children":[{"id":"316f45eb-504c-452a-8e86-acc2dbdab1f6","type":"Button"}]},"id":"4e3cb55b-5f51-4e80-939c-ddc80fd82be9","type":"WidgetBox"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"01a0c79f-1cc0-4440-a68a-5a2d574656bf","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"9215adfa-af62-4e6c-bebb-b714ab6937a9","type":"CustomJS"},{"attributes":{"children":[{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}],"width":1000},"id":"4b84b10a-319b-49b7-bc82-882ec94d1bf2","type":"WidgetBox"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"fb34d1eb-2f67-4206-9677-c253cd6ea762","type":"CustomJS"},{"attributes":{"callback":null,"column_names":["radius","x","y","fill_color"],"data":{"fill_color":["#b2be96","#c3a396","#4f3696","#df7d96","#733996","#80cb96","#a8e196","#6c7396","#b12496","#6da896","#474f96","#51c496","#ca5696","#7b4796","#f0a996","#87ad96","#37e496","#61b996","#ecdc96","#b09a96","#c3bf96","#f9bb96","#f25396","#6e5c96","#e66a96","#c28b96","#b4ba96","#5d3896","#f3cd96","#637a96","#9bb596","#942c96","#8b4f96","#d5b896","#ae3796","#68c096","#d75a96","#664096","#bfc496","#d23996","#d95f96","#6da296","#c15596","#8dc096","#addc96","#745e96","#cb6096","#ec5496","#72c096","#676d96","#843e96","#aa9796","#bb9f96","#7c8c96","#d58696","#8d4796","#a42796","#ea9396","#b73796","#826c96","#9b2996","#609096","#513c96","#ee7196","#334996","#f47696","#c18096","#4cdd96","#4aa596","#f1c396","#7f3c96","#467e96","#e38b96","#ac5796","#bd4f96","#454a96","#a52596","#879d96","#9abc96","#5da996","#932596","#9b2596","#7be096","#329596","#ce2896","#344496","#f7b496","#958f96","#af2096","#6b5096","#652096","#ca3e96","#526596","#d2d296","#e78096","#ce5a96","#8f6396","#9c2c96","#f97e96","#a3c696","#aa2f96","#72bb96","#d85896","#d87a96","#aa1f96","#9ba896","#ec7c96","#839f96","#f0d496","#775496","#9e8296","#5f3896","#683296","#82d396","#f8c296","#ed2c96","#3d7796","#ee2e96","#eb7496","#bedc96","#59ce96","#54cc96","#956e96","#456996","#7ab196","#488c96","#8a3696","#ec5696","#aae296","#9e9596","#b12b96","#cb6b96","#c44796","#6ce596","#abb996","#617196","#788596","#ce8c96","#ad3396","#d4b096","#821e96","#829e96","#c13196","#6e3496","#738f96","#92a496","#9e3396","#e04396","#ef5c96","#6a9e96","#657796","#3c2c96","#356996","#c89c96","#d46f96","#df2b96","#d37896","#ee9796","#5ab196","#5cac96","#e39796","#b89e96","#52c696","#437396","#3ab096","#c94b96","#3c8796","#e67c96","#71b096","#4a7e96","#7ead96","#bea296","#e55696","#595196","#ea5096","#be8e96","#747896","#d62296","#9c9296","#b94e96","#518096","#48e596","#5d3c96","#4f6a96","#c7b496","#861f96","#709a96","#a39996","#a3b896","#e57696","#968a96","#6db196","#f76096","#e15d96","#85ba96","#548996","#d02a96","#d69196","#cd9096","#924096","#9f2f96","#b28096","#4b5a96","#d09496","#615296","#94b096","#377396","#597896","#598496","#57a596","#5f9496","#a4a396","#c6d096","#f24d96","#65d596","#a98396","#a16b96","#4ccb96","#3b7a96","#3eae96","#efdf96","#8bcf96","#783696","#ad8e96","#927a96","#93a896","#e37696","#c47f96","#6e6396","#458496","#e2e096","#cd7096","#aa7d96","#64aa96","#bd8a96","#af4c96","#ab3d96","#cac896","#dac696","#cabd96","#8daf96","#758696","#418a96","#478696","#c43096","#744496","#b22a96","#ef5796","#b47996","#466696","#c83a96","#88e396","#65cf96","#aaca96","#736796","#449996","#d16e96","#3e3396","#4adf96","#f19a96","#dd2796","#678b96","#5a8896","#4f2996","#bc2196","#68ce96","#834896","#6b4396","#498396","#e25796","#325b96","#e33696","#8d4f96","#902796","#8b2e96","#7ec496","#a0c196","#c05696","#7c5596","#46d296","#c7bb96","#b9cb96","#cfd796","#5ea096","#f1ce96","#e6d596","#33b596","#d08f96","#515a96","#c56396","#e53b96","#79b996","#dc6496","#d7c096","#889296","#78bc96","#f76796","#717e96","#5e9996","#3f3c96","#d02296","#5e6a96","#46d996","#a38d96","#34e096","#5a8f96","#406896","#38bd96","#84d296","#6a2196","#54cc96","#acb196","#bfad96","#3abf96","#35c696","#83de96","#ea5196","#6f6f96","#659196","#587296","#82dd96","#ab2c96","#345796","#bbe196","#777696","#87a496","#efd396","#90ad96","#76c396","#722196","#57a196","#827096","#692a96","#b18196","#7b5396","#ba3196","#ee4996","#b3db96","#556196","#7ae496","#3b9696","#e3a896","#369696","#aad996","#429996","#323296","#6ba196","#92e496","#8e5196","#de3396","#88d296","#6e9c96","#72bd96","#40db96","#ccaf96","#342396","#aabc96","#b15496","#786596","#be9e96","#744096","#a68d96","#5bde96","#b23a96","#975b96","#a1a596","#b1a396","#68a596","#d3c196","#ce7d96","#668e96","#5c6d96","#479896","#844f96","#a1da96","#857496","#6f6996","#a6b496","#7b6396","#6a4196","#475c96","#af3296","#c3cb96","#9b3396","#e3da96","#94da96","#68ce96","#ac2096","#e4c696","#922b96","#d0e196","#ab9096","#a9cd96","#584896","#584896","#48c596","#39a596","#d23696","#9b9d96","#c19c96","#507696","#b24096","#e33996","#5ad796","#5c2996","#edda96","#ceb296","#6bda96","#5f5396","#c37c96","#6cca96","#794496","#4c2796","#33c396","#beab96","#503a96","#878296","#dd5896","#c7e396","#724196","#f04d96","#532a96","#c18596","#ed3096","#726c96","#e5ba96","#f68b96","#6b9196","#4bbc96","#f9cf96","#c9ce96","#e49e96","#dccb96","#919296","#b14c96","#529f96","#84c596","#e64f96","#437696","#90d096","#583296","#529096","#e4b596","#4d7a96","#ba9496","#909796","#5d3396","#e88b96","#f23596","#e16c96","#f3ab96","#534996","#b9b796","#3e5596","#786996","#a77596","#835796","#bcc796","#c8de96","#a42196","#ebbf96","#e2a796","#426596","#7d6a96","#ed4896","#a85d96","#882896","#cc3f96","#d59196","#c5e096","#96e496","#a3d196","#b08296","#b44596","#40ad96","#4d6496","#9bb796","#ecba96","#dfdf96","#d2a996","#708296","#3d4b96","#49e196","#f1b896","#8b3996","#68e096","#9b8996","#8ad696","#40ca96","#f7a996","#f64c96","#4e2596","#854896","#d9da96","#362596","#a92596","#7c5c96","#8a9a96","#f75196","#ccac96","#e17696","#f8e296","#c1cf96","#9b3a96","#c35d96","#988a96","#b26296","#83a396","#397796","#f94b96","#99e496","#a0a296","#65b596","#e83796","#5b3d96","#ebcd96","#903896","#f6ca96","#745896","#be2796","#a7c396","#822296","#7ead96","#ed7f96","#6a8196","#6c4396","#695f96","#a23e96","#8b5096","#8ea496","#79d996","#5ec096","#a67896","#b7b396","#707596","#d4bc96","#608796","#74c296","#365596","#a36496","#9c8296","#f5d096","#84b796","#51a996","#e37196","#c86296","#a19196","#a9e296","#574f96","#508f96","#cbcf96","#d92596","#cec896","#662b96","#995896","#5c7796","#d1e596","#756896","#373b96","#a73796","#83d496","#a53696","#994696","#804596","#588096","#b79596","#ca7296","#52c196","#4a2496","#37ca96","#a27296","#c17d96","#5ec896","#a99896","#cbd696","#406c96","#eecb96","#5d8696","#415b96","#d28c96","#b55c96","#86e296","#a6a396","#346696","#d1e596","#b94e96","#883a96","#ed9b96","#5a8496","#b6d896","#eb6396","#deb896","#e2a496","#b02996","#687e96","#82d496","#996e96","#ed5696","#71df96","#415b96","#904996","#83b596","#bc6296","#897196","#7cd596","#ad9e96","#5a9796","#8b8b96","#44a396","#9eb996","#725b96","#535096","#ddad96","#745296","#a1b996","#c0c096","#c02f96","#ec8f96","#99e096","#34d296","#86de96","#b44596","#5b6f96","#b4a396","#3c3196","#834696","#93b696","#b0be96","#945596","#c13296","#5b8496","#b24b96","#b77f96","#d69796","#9d3396","#5aba96","#d92796","#d95796","#32c796","#66dd96","#463396","#d5bb96","#f49996","#af4896","#b72296","#83d796","#a9d096","#ba4996","#e27196","#4c5296","#a98996","#a4b196","#e22b96","#4a5e96","#c6c196","#d98f96","#f19596","#ddc296","#aea396","#de8396","#558296","#d47896","#a43496","#d1a696","#7b6696","#9e8e96","#b86896","#d86796","#63c996","#d32996","#9c9796","#c5a896","#a22796","#daba96","#bc5896","#778a96","#c73096","#a64996","#c25596","#44d796","#dad696","#3fc596","#7a3d96","#583196","#f83096","#b0a796","#b62596","#677e96","#979396","#393396","#7c6396","#874b96","#732196","#6d1f96","#32bf96","#793b96","#627896","#ca5896","#e33f96","#3f8296","#454096","#e74d96","#5c5b96","#3bd096","#34a096","#c2b496","#506296","#8c8d96","#565c96","#526196","#d63996","#78d896","#b32096","#e7b696","#49d596","#b0be96","#4cc596","#9b7e96","#718896","#b6ce96","#48ae96","#b45496","#846b96","#accb96","#659b96","#423296","#f5a896","#cb6096","#538e96","#add796","#34af96","#9bb596","#da7196","#5c7996","#99da96","#d89596","#468996","#e04b96","#e9e596","#87ae96","#506796","#9bb896","#a82896","#81e496","#70d796","#468096","#e26e96","#6f3796","#cb8e96","#5bbe96","#4e3396","#4e4c96","#6c2f96","#9bc296","#a89a96","#55d596","#d77296","#3eba96","#73b696","#73a196","#5c3c96","#d15096","#e6a896","#e6ba96","#403b96","#6e9a96","#eb1f96","#be6096","#8e9d96","#427596","#e04396","#6ad596","#44d496","#b24b96","#e5d096","#882896","#e44b96","#362496","#8a9796","#e8b596","#dc9d96","#aea196","#90e596","#8cab96","#42d596","#f2a696","#ea2996","#57a596","#575f96","#ce3b96","#e6d896","#574796","#e77c96","#c3c996","#939096","#832c96","#907196","#335596","#de9596","#f08996","#d7e496","#876a96","#8c6c96","#ef8396","#df6596","#67e196","#eece96","#498d96","#b1bc96","#74e096","#f6b096","#6bce96","#3d4896","#f0b396","#ba5d96","#c4d796","#c46296","#728696","#c2d596","#3dae96","#e4d796","#eba496","#5a8c96","#853596","#c4d396","#d48e96","#95ce96","#738f96","#804596","#f72896","#de5496","#665396","#3b3696","#d1ca96","#50d896","#577c96","#5f8996","#ef6396","#60cf96","#9b4a96","#609d96","#48d196","#a03296","#e97896","#cb2c96","#746896","#d6bf96","#e77596","#f45e96","#59cf96","#5b6e96","#d69896","#d6cd96","#ef7596","#943696","#ad7796","#da9a96","#6d4396","#ab5f96","#55de96","#977396","#944296","#9f6796","#b42596","#aee196","#a94b96","#bcdd96","#8b4896","#9dcb96","#33c396","#f97c96","#bc2b96","#918a96","#c69996","#4c2996","#ed8a96","#e17e96","#98de96","#f3ce96","#d2c096","#97e096","#9a9796","#efa296","#bb6696","#c42496","#657396","#d4df96","#da9296","#f68596","#468f96","#8b9396","#c9b396","#643e96","#e92096","#984396","#665896","#396f96","#855796","#9baa96","#ec2896","#472b96","#856496","#cb5996","#dc9c96","#729396","#b8e096","#a13c96","#619296","#6bb296","#f0db96","#bb6196","#756996","#436796","#404c96","#f55296","#683596","#395396","#c2a296","#98e596","#68cf96","#e75c96","#4f9996","#3db896","#436796","#438e96","#558e96","#97b196","#97e196","#892496","#4e9196","#c02a96","#f6b196","#359d96","#65bb96","#7c4496","#d44a96","#357b96","#943196","#602196","#435796","#755d96","#cead96","#6e3c96","#615096","#d09a96","#d0b896","#527296","#b2d196","#7fc696","#8cd496","#d6d096","#8ee496","#33a296","#3e6e96","#e3c196","#9ebd96","#ce6096","#b07196","#c93996","#ba3396","#56c596","#bec196","#eb7e96","#6c2196","#698e96","#435e96","#6b5f96","#ef8d96","#e06f96","#825196","#f65196","#c4a196","#462096","#964596","#9b4e96","#9c4596","#a17796","#71e396","#40d496","#eca996","#982f96","#4d6d96","#366496","#9f4796","#c13c96","#9b2696","#e33c96","#705596","#4ebd96","#4c3296","#64d296","#bbc996","#8fad96","#7d1e96","#a29096","#c6b296","#c01e96","#46ad96","#702296","#715b96","#da2896","#739a96","#b16d96","#dfdb96","#8d6f96","#3e3d96","#35b596","#bd1f96","#6dd596","#dda496","#772b96","#473e96","#e59396","#472496","#d2d096","#87e096","#9a7b96","#ec3496","#55ba96","#e4db96","#5ba396","#612596","#b39996","#61d396","#8c3196","#8fa896","#8a7796","#a09496","#458296","#5f8296","#d3d796","#cea796","#7b8596","#66a996","#d25896","#d22896","#ee8296","#ddaf96","#694796","#cc2f96","#547a96","#ad7996","#546b96","#eb1f96","#8fe196","#432e96","#559596","#437e96","#cce596","#396a96","#de3a96","#a44296","#f57996","#a6e296","#875896","#8d4296","#61e496","#b88896","#71bf96","#cc2c96","#a2d996","#7e2d96","#729f96","#d0c996","#8e4496","#b82396","#443996","#7e2996","#4d8f96","#7e8b96","#b48296","#ca7a96","#a66896","#a2ba96","#6db996","#b25796","#374496","#b6b296","#eb3196","#57a596","#6f9696","#80a196","#f35d96","#e0c796","#6d6396","#3dc796","#ac4896","#5a2796","#cc3196","#7fde96","#7fd496","#3e8796","#33bc96","#6e8c96","#d2dc96","#4ec196","#55a996","#bc4f96","#494496","#718496","#572c96","#d21e96","#eab596","#905896","#d19296","#a39d96","#67ad96","#9ba696","#3aa496","#c36296","#938e96","#47a496","#6a4196","#f46296","#8f2496","#934c96","#775196","#b2b096","#67c596","#5fbc96","#3e3e96","#8c3796","#eb9096","#9f7f96","#332e96","#d95896","#a0b596","#4db796","#3a5b96","#d08a96","#903396","#71a096","#ad4296","#c6a196","#4c6596","#edd196","#40b896","#787396","#c3bf96","#76b496","#976196","#58c496","#504996","#a45396","#8b9996","#d9b896","#6f6496","#40b796","#4dba96","#e38b96","#a85196","#905696","#478496","#8acd96","#b78e96","#be2196","#607a96","#458396","#896396","#36b396","#e09896","#a2ca96","#da9996","#c8ab96","#577996","#864e96","#9bdf96","#d88796","#4a7896","#b38396","#6fe296","#545296","#90a096","#3b2c96","#addf96","#ebc296","#398d96","#405596","#907196","#c25e96","#322f96","#3e2496","#53c796","#acbc96","#b54096","#ac8e96","#702e96","#805796","#8c4b96","#857c96","#b95d96","#544596","#e0d296","#e5da96","#f1de96","#37cd96","#9dde96","#d1aa96","#48ae96","#56de96","#9bd696","#a5cf96","#e5e096","#a56996","#ecb796","#ab4996","#485a96","#bd9096","#699096","#e1d396","#c29f96","#ad3c96","#469696","#812596","#bb5a96","#b5d696","#61bd96","#d33c96","#b57996","#9c7b96","#c7b296","#aab896","#a05596","#90b096","#4bca96","#e83996","#5d7f96","#d03796","#3f7596","#f76996","#bd3696","#c65696","#c18496","#d98c96","#8c8896","#708a96","#af4596","#e5d696","#f69996","#e5ae96","#a74496","#c23496","#7ec796","#a2a796","#90a796","#7fd196","#a3cb96","#e52396","#c17296","#f94a96","#ea3696","#81e596","#a3de96","#aa2896","#5e5e96","#395196","#f25a96","#f62496","#d75d96","#49a096","#a76d96","#dcdc96","#426996","#601e96","#ef4296","#7daa96","#ec7196","#367f96","#e37596","#895096","#b06a96","#b28196","#3a4a96","#688196","#64cb96","#f5b996","#94bd96","#bd6096","#eb8f96","#476b96","#3d2096","#423796","#e58296","#597596","#6f7496","#e0b996","#d29596","#57d596","#4fa496","#90de96","#a95496","#4e6196","#bc6996","#5ccc96","#be7996","#dc2c96","#4c2a96","#4e3f96","#e83f96","#6c5196","#c74996","#f7b796","#ae3796","#d5a196","#71cb96","#378a96","#4e7996","#e66f96","#b69396","#a9d796","#893c96","#c44496","#ed7a96","#b1a696","#484a96","#92b096","#db5a96","#518696","#4dcf96","#565296","#8a5696","#a66e96","#b57b96","#739696","#917096","#828f96","#8adb96","#f8b496","#4d9996","#a58e96","#e89f96","#856196","#d03e96","#c37e96","#f45596","#8e7896","#a7dd96","#40e396","#934596","#cabc96","#edda96","#3f8b96","#619096","#d52896","#7b8e96","#8da196","#422b96","#49a096","#a83496","#906696","#f75096","#57b096","#ef9c96","#a28596","#b59996","#ea2896","#91dc96","#3daf96","#524496","#51c296","#9c5996","#84c096","#cabf96","#c8ba96","#e03c96","#d5bf96","#eab796","#472696","#77b696","#b1bb96","#c03196","#3e4d96","#ecbb96","#b7b596","#4e9b96","#6d5196","#8ce196","#c18a96","#cb5d96","#dfb696","#406896","#894396","#a37196","#8c5196","#d4a596","#3ec896","#858896","#999a96","#559296","#9c5296","#bf6496","#934a96","#d58a96","#6e4396","#509796","#92ac96","#c15e96","#788296","#334b96","#ccb296","#c55a96","#558c96","#859996","#70c796","#422196","#a39196","#49b896","#728e96","#8ac196","#5da796","#e9c096","#805b96","#bc2596","#8a8696","#86a196","#657f96","#3e8b96","#a93996","#c7c096","#a86596","#cfbb96","#e8b796","#646096","#a33d96","#3db796","#449396","#661f96","#753296","#af3296","#617a96","#534796","#9c5a96","#835d96","#8f5f96","#502d96","#37d896","#783496","#60e596","#8c5e96","#5c2e96","#738a96","#7ca996","#e5c396","#d2ba96","#dd7a96","#9dc496","#7d9096","#999796","#6cd996","#d18296","#8dbd96","#f15596","#51a196","#ceba96","#65e396","#996696","#5fc796","#ab8e96","#f37396","#f49496","#f92996","#a04296","#626896","#e35c96","#afd996","#70b696","#591e96","#f6a896","#902996","#efb796","#9e3896","#58db96","#4dca96","#739b96","#503f96","#3e3796","#69bb96","#665d96","#7f8b96","#9a5896","#92cc96","#4dd096","#474496","#e25896","#338596","#bab896","#6e6196","#caa396","#4bb996","#f19b96","#db3796","#3d4696","#d76796","#be2b96","#3f5296","#c89a96","#856096","#ea3b96","#854696","#632496","#614e96","#d0ba96","#9d7796","#834d96","#407c96","#bed796","#d87b96","#5d8c96","#55aa96","#7cbd96","#3dd096","#57da96","#5e2696","#82c596","#9c5b96","#becc96","#402596","#b0ce96","#776e96","#a5d096","#c7b796","#478396","#7d6496","#b4cf96","#cad496","#b5e396","#4a5596","#f6a396","#f56496","#749d96","#894896","#8e8d96","#958c96","#438d96","#b6a996","#8c7296","#5d2896","#8a7596","#4a2c96","#71cf96","#678f96","#33cb96","#c48c96","#a33e96","#a9d096","#a95796","#629596","#7c9096","#524a96","#f29496","#472996","#579096","#a5a796","#412596","#7b1e96","#a45a96","#4f9696","#b79f96","#56d596","#a54396","#9b8c96","#a06496","#e27696","#7c5096","#688996","#e39496","#ea9d96","#6b5d96","#3c6696","#c0dd96","#b9d096","#9aab96","#baae96","#5d4d96","#393a96","#837296","#386496","#ae2096","#c5a196","#cf5a96","#73c396","#516196","#947c96","#e53596","#e95196","#5bbc96","#d64996","#b54196","#b0ce96","#3c4496","#adde96","#3b7496","#752696","#8dd396","#c28a96","#a7db96","#f54f96","#ccb796","#c9a296","#a88b96","#4ab596","#84bb96","#603496","#dc5896","#5b6a96","#439296","#e25896","#f84c96","#ed4896","#929496","#7ab696","#94b396","#bb9696","#586996","#9f8a96","#9f7296","#732296","#34d196","#71c196","#87cd96","#ae8d96","#b73696","#a8b496","#f66a96","#6b4f96","#dc1f96","#403596","#483396","#b52d96","#a7e596","#565896","#de9b96","#886796","#db8596","#3e4096","#ac6996","#65d396","#8ac696","#55c396","#626096","#8a2696","#da5096","#91a796","#9cd896","#ea4c96","#b2da96","#93da96","#9a8596","#b25596","#bd2196","#79af96","#3fcc96","#36dc96","#d1df96","#422496","#937c96","#d8ba96","#9de096","#7e7896","#37c296","#aaa396","#f14796","#5da896","#983296","#f0a496","#3e2796","#46a096","#89ab96","#d25896","#bf3296","#f83a96","#c7bd96","#36ba96","#f96996","#b6de96","#864f96","#ec6396","#75d796","#3f7596","#e45796","#e58a96","#bc3496","#bb3c96","#364496","#c7c896","#54e296","#f22e96","#8c3b96","#a07f96","#c6aa96","#939c96","#9c6796","#d72e96","#95e496","#3e9896","#e8c196","#b7b896","#6fbb96","#929b96","#958b96","#7be196","#522096","#dfd296","#b55696","#aa4c96","#b2a096","#3e4c96","#c04196","#ab6b96","#f38896","#868d96","#b09c96","#cb6996","#867e96","#cb2096","#61c396","#6d6496","#7fce96","#908196","#74ac96","#866696","#46db96","#dfbb96","#328496","#899f96","#888796","#c0c596","#bd8096","#ce2996","#718396","#c0c396","#3dd396","#72d196","#864996","#6d4096","#4b2496","#536296","#bfb296","#c72c96","#bf4a96","#5dc396","#58c996","#e93196","#f22e96","#e6be96","#8c2696","#875696","#7f6596","#a06696","#44a796","#8fe496","#659c96","#4da696","#da9a96","#c75296","#9e7196","#47b796","#7dad96","#396196","#5d6f96","#355c96","#355c96","#89d096","#a94296","#d99f96","#5c9a96","#b19496","#7edc96","#64bd96","#4d3e96","#a14f96","#edac96","#e94296","#65c396","#897e96","#3ad696","#36a296","#405496","#879996","#bca796","#c53996","#b69e96","#4ec996","#c69796","#4ead96","#458c96","#bfb796","#4ae496","#379296","#9f2896","#929496","#657b96","#d1a496","#77b896","#414c96","#da5b96","#9e8b96","#923496","#aa5096","#ac3a96","#477096","#45a996","#f9c896","#6acd96","#414296","#b62d96","#e2af96","#564996","#7f5b96","#67cc96","#ac3496","#edcb96","#bcb996","#4ddf96","#cae496","#47a696","#964c96","#5a3796","#408896","#93dd96","#d42196","#f79b96","#653b96","#868a96","#d28f96","#622896","#67e296","#d1dc96","#838f96","#707896","#647b96","#f59896","#334396","#cf5d96","#d76c96","#bd4a96","#a2c196","#482496","#be5496","#8cdb96","#8ba796","#4c6696","#db2396","#664096","#bae196","#8c9596","#e8d896","#8c9e96","#5f6e96","#483396","#644d96","#993f96","#383896","#649996","#7a5396","#458096","#cb7996","#54dc96","#b1c996","#88b696","#348696","#877396","#736596","#98a196","#34cd96","#796096","#988496","#976896","#e07896","#e1cc96","#7b8f96","#a8c996","#8aac96","#5e3e96","#f1a896","#3ae296","#351e96","#df3496","#78b596","#e8ac96","#f02196","#d7c796","#b2ca96","#deac96","#a75c96","#d87f96","#749896","#8d2596","#c28a96","#7b2c96","#669a96","#a9d596","#788996","#ad6196","#608e96","#c3c896","#374c96","#a09796","#446396","#544896","#a57196","#929396","#75af96","#55ba96","#7f3a96","#a0db96","#77e396","#5da996","#7b8996","#9ae196","#c8a796","#d86196","#585496","#876c96","#846596","#7c2696","#e78796","#98c896","#f77096","#ef5a96","#564e96","#ea6596","#754a96","#72de96","#846096","#3bb796","#bac096","#e16496","#f95596","#b8cf96","#b08f96","#f95696","#bc4996","#519196","#cd6296","#d7e296","#b46796","#d5c996","#a4e196","#e5e396","#e1a296","#be8496","#853196","#5e5096","#cfc896","#9b5796","#f4c096","#a17a96","#85d596","#e77096","#b21f96","#346196","#f56a96","#666c96","#8a6d96","#5e1e96","#e7bb96","#8b8d96","#755696","#6f8b96","#3d4096","#c56b96","#881f96","#6bd396","#b3c396","#8ec396","#f26896","#679596","#9c5d96","#e7b296","#a27a96","#f86596","#f0b696","#653196","#522096","#423896","#a52d96","#386c96","#bd8e96","#759496","#3bca96","#a87496","#f42d96","#433096","#deb196","#e3e196","#5c8396","#4c9d96","#c3ba96","#f34e96","#726296","#92ba96","#71c196","#b67c96","#e35a96","#dce596","#db8896","#369f96","#a14a96","#42d396","#737f96","#784096","#50de96","#b0ad96","#8a2296","#9b8396","#994896","#9e2496","#7a5296","#8ca496","#8c9796","#6c6a96","#bc4396","#5dcf96","#a5db96","#edc096","#d92d96","#aeaa96","#6e9c96","#588c96","#a98f96","#919a96","#38b996","#8b2396","#385c96","#dca096","#43b296","#5a5f96","#d74996","#3b2e96","#915296","#6bd596","#682c96","#934796","#e78b96","#c3bf96","#ca4796","#7db196","#87c696","#9a8d96","#a67f96","#c49896","#b04796","#d97996","#edae96","#dd9196","#3e3996","#833f96","#8d4f96","#56e296","#539896","#577e96","#c59296","#42bc96","#667796","#d6b896","#e57b96","#71de96","#4f9f96","#f0b996","#368896","#d94b96","#656f96","#e1bf96","#98a296","#54b096","#6cc096","#b98696","#c03a96","#c4de96","#68b696","#ae7b96","#db3696","#8ae396","#358196","#bf5396","#e84296","#7c8e96","#c27796","#3ec796","#ca8196","#8bb796","#815896","#bbd996","#f73296","#d03596","#a25596","#39d696","#f21f96","#b1ba96","#8eb396","#c68496","#ac5996","#86a796","#497196","#82d696","#954b96","#c14796","#655796","#b1b896","#bd7296","#83ab96","#f8bc96","#368e96","#5c3296","#e43796","#d1aa96","#712996","#6d3e96","#875b96","#d1bd96","#b6b496","#78a896","#366796","#3d7996","#846196","#cf4a96","#717996","#acc496","#345696","#7dc396","#5b4396","#5d7e96","#f77496","#f14a96","#a13996","#6b6b96","#b14396","#bd4b96","#f29f96","#c7d796","#e8bd96","#a95b96","#727996","#ea8f96","#8fe496","#946a96","#f66896","#ed2f96","#b45296","#c6ba96","#e4d896","#969296","#ec2996","#dd5596","#895496","#a99796","#3f9e96","#955f96","#9ad896","#8f6296","#b07d96","#bd5296","#6ecf96","#593196","#f95e96","#a28096","#7dc396","#49ca96","#f2b196","#86d296","#ee9c96","#c9a696","#a9e196","#d03896","#b4c596","#578e96","#384796","#946696","#8b7a96","#923496","#7ca796","#cee496","#f35f96","#a4bb96","#a36296","#605696","#cad796","#423596","#a8cf96","#d36396","#3be196","#eda596","#8ee296","#88b996","#e5ac96","#408996","#b12896","#aeab96","#7dca96","#988e96","#948696","#5ab496","#c18896","#e66d96","#454096","#f22c96","#382396","#64a196","#848896","#bdcb96","#4f7a96","#c27296","#3a4c96","#d7a696","#95ba96","#b69e96","#798196","#707696","#7f8a96","#c73e96","#d6ae96","#c66096","#bc6696","#f52c96","#3ddb96","#f9a096","#495b96","#c69096","#92a296","#d82596","#e47896","#a5e596","#8dd996","#477896","#414696","#73b796","#ecaa96","#814896","#9ade96","#788096","#d66c96","#803596","#874296","#8a2196","#c6d796","#472796","#da6f96","#df3396","#e18f96","#eb2c96","#92b996","#c1df96","#e75d96","#8c6196","#d22b96","#6e5196","#a02696","#9abd96","#dd1e96","#b94296","#bdb796","#522296","#ec8196","#574696","#b4b296","#a36196","#bd9b96","#34aa96","#9c4e96","#71bb96","#dc7496","#634a96","#8ec996","#5c5696","#c6aa96","#edd796","#ca9196","#7b9296","#e3ab96","#6ada96","#7bc296","#57c796","#9c3196","#3e2396","#542596","#34c396","#b88596","#3c8096","#955696","#f22d96","#eb6b96","#a9c696","#c18496","#63b996","#97bd96","#cf7096","#d9c796","#b14296","#882d96","#358496","#cc3696","#4d2296","#ec3696","#bd2496","#9d5d96","#d4de96","#979c96","#422796","#739e96","#6fbf96","#f06996","#b5a796","#883496","#e89796","#467196","#948796","#ab2796","#f5e596","#883096","#d95296","#b73f96","#4c6896","#7ba096","#efd996","#f64596","#e74f96","#c24796","#d05796","#ee5196","#b6a196","#c73d96","#ef6796","#ae9a96","#e9d796","#4c5996","#8ae396","#a68496","#495696","#eb4b96","#6b4f96","#884d96","#92ba96","#546296","#cc4a96","#cb5d96","#cd9896","#f0e396","#c78396","#ca7196","#f6a396","#6ba396","#dfda96","#829e96","#518e96","#b08f96","#f7ae96","#df2996","#a3b596","#bfae96","#c8b396","#b8d996","#d65596","#7b8f96","#8e7096","#7d4096","#5e4396","#69d896","#51ac96","#5c6496","#69e296","#edc096","#436096","#c29696","#466b96","#a55296","#c8b596","#463f96","#cd7f96","#6d9996","#cad396","#eda096","#ef4396","#6b4596","#bd4f96","#3f6996","#905096","#8d3796","#bdc496","#df9f96","#658996","#ebc296","#c87d96","#3b6396","#56a096","#799396","#954f96","#ccda96","#c24096","#be8896","#b48996","#f07b96","#4fbf96","#8d7396","#c79596","#9b2596","#39b796","#859796","#a8aa96","#618496","#e27696","#a87a96","#33c596","#76ba96","#654a96","#638d96","#eccf96","#d29696","#503c96","#395396","#407d96","#845c96","#6d5396","#7ead96","#80a796","#e1b896","#556796","#a88196","#ad2d96","#ee9996","#ec7796","#659a96","#785796","#63b296","#f96596","#836d96","#da9e96","#90ba96","#dd5496","#8b7496","#608c96","#f53196","#865796","#f8c996","#3c4796","#a28796","#485896","#e74596","#a49396","#632896","#692296","#ce9696","#3d2696","#e7bd96","#e33296","#d68b96","#a93d96","#e16996","#ad5d96","#734796","#6d6d96","#484a96","#3d4996","#d33c96","#37e196","#9b6b96","#bee396","#52c496","#7b9996","#509b96","#8a4496","#56c896","#e62b96","#9dbb96","#bb9196","#7b2596","#a78f96","#75b696","#6c5996","#9f4296","#95a296","#716b96","#925b96","#c92296","#af4096","#c1c396","#ab3196","#818796","#94ca96","#7c5996","#e0de96","#df5d96","#d32296","#7f9796","#5a9e96","#f81f96","#7a2f96","#806d96","#80d196","#6fe396","#393996","#9f9796","#f08a96","#d19b96","#f3de96","#e47596","#dca996","#40c996","#cac896","#e64b96","#b54696","#5fbe96","#f86296","#7e3596","#844b96","#7d9696","#d7ac96","#373e96","#532c96","#e6ae96","#bf3896","#905296","#e67296","#7e8596","#847396","#6fcc96","#d5c796","#51d896","#6c3796","#c03396","#563a96","#578a96","#cc4d96","#c6c696","#f8a496","#d59396","#eac596","#f4cc96","#b45496","#947896","#607c96","#3abb96","#6ca196","#7ac396","#386d96","#917196","#3b7596","#384396","#4b2e96","#a82196","#752b96","#77c596","#5f9f96","#e84196","#d4a496","#372096","#862c96","#32b796","#47a696","#be5d96","#f26696","#aa3896","#46a896","#329696","#72b096","#38b896","#d5be96","#e5a396","#87a696","#cd9c96","#f46d96","#647396","#a87e96","#674c96","#d79a96","#7d6796","#4ca096","#f9b396","#804696","#e58b96","#f3a896","#6a7196","#687696","#eee496","#8ac796","#d46496","#91cb96","#4c7696","#ea7f96","#468196","#81b996","#985d96","#413796","#665396","#f5a896","#b31f96","#6dd896","#eed496","#6d3596","#8e7d96","#ecc296","#917896","#3db796","#7a4c96","#542296","#f79a96","#bd8d96","#c9e296","#3a2c96","#5cc796","#935796","#f93296","#84aa96","#714f96","#de2896","#642696","#c65596","#939a96","#bc2c96","#342496","#cdb596","#9f2996","#641f96","#a73496","#325d96","#a4b896","#d18596","#635d96","#969496","#edcf96","#413196","#9f4c96","#c96a96","#9c4396","#c04f96","#8c3396","#c5c496","#a8a596","#61aa96","#462796","#d7da96","#393e96","#4a4c96","#355796","#ac9e96","#dc2896","#dddb96","#325a96","#b32496","#6b5496","#cdc196","#3e2996","#d52e96","#a85a96","#587696","#9edc96","#33c696","#f27696","#9c6c96","#bd6596","#446f96","#6d4b96","#a2b096","#49a896","#886a96","#e2e496","#647d96","#39a596","#aea996","#393696","#cc9496","#efc296","#bec896","#a94496","#c74296","#c36196","#657896","#e3d296","#9ae596","#417796","#52b796","#bfcb96","#5c7d96","#6a8f96","#76d596","#f13496","#f39896","#7aa696","#94ac96","#ef6596","#8f6a96","#e13396","#b72096","#6f9696","#506e96","#3f2296","#612196","#f88f96","#ab5a96","#c41f96","#cdb396","#7b9796","#9a9d96","#68d296","#7e3296","#a0e096","#9c2e96","#a5be96","#595896","#8ee396","#ccaa96","#ca7396","#54c896","#4ecb96","#de5296","#6b5596","#564696","#5da796","#c34296","#c4a496","#946a96","#d9d996","#5c9796","#afc496","#a8cd96","#797e96","#6c8896","#a84696","#36a396","#75a596","#7c3a96","#e38896","#547496","#5e9496","#335696","#88bd96","#bd9d96","#a7c696","#78ac96","#b86596","#eb8396","#3a2696","#3ebf96","#6eac96","#cd3696","#f23d96","#956696","#74b396","#f38f96","#f15896","#995a96","#bb6d96","#e8b696","#63c396","#ee6f96","#a97796","#67e496","#dcd496","#c24c96","#eb9296","#de8296","#e56196","#f7a996","#559a96","#672e96","#749d96","#ac6e96","#c44c96","#926296","#5d5096","#72d996","#822996","#733a96","#5c4996","#f21e96","#7de096","#8c9996","#b54596","#ed4196","#aec196","#70c896","#369096","#4b4296","#874396","#a78b96","#7aa796","#734e96","#485196","#645c96","#5c4796","#613796","#ec6d96","#66b996","#663996","#6d3596","#deaf96","#6b8d96","#d68196","#dbbe96","#387596","#76be96","#7ce296","#39d696","#a06f96","#587c96","#494196","#e4c396","#579c96","#b55c96","#8d9a96","#9e4b96","#abb796","#73b296","#8f4a96","#cbc696","#346b96","#4ebd96","#f53296","#bf2f96","#4e4e96","#e76896","#657396","#c27f96","#41be96","#d69a96","#4b5196","#c27396","#595196","#a97296","#dbdc96","#b76b96","#66c396","#e88b96","#f71e96","#65c196","#863696","#558996","#6ccc96","#608696","#bfae96","#ad8096","#c56c96","#9aa896","#b2b996","#f42396","#e1bd96","#db2c96","#6ec196","#afe396","#8e6f96","#e28b96","#689296","#df9e96","#f75696","#646496","#3d7596","#c12c96","#b4a296","#4f6b96","#cf9396","#7f7996","#a8d796","#6da196","#ad5e96","#aa6096","#432096","#e7d696","#6ada96","#923996","#e84296","#f33b96","#cf3f96","#b84d96","#e2bf96","#a57e96","#cc8596","#5c6f96","#8c5d96","#7e4096","#e38896","#534f96","#493996","#8b6e96","#8da096","#bb7996","#427596","#c6aa96","#7f9896","#9e4c96","#9cdc96","#a12a96","#62db96","#b54996","#5e6796","#347396","#749896","#a12996","#8ed696","#afa496","#669d96","#907396","#d27d96","#487896","#773c96","#7ca296","#a56496","#a82c96","#372e96","#325b96","#8b6396","#9be396","#726496","#c28a96","#eba496","#d62096","#a22496","#887196","#af5596","#e19e96","#aad596","#eb8396","#b88796","#48d196","#ca5a96","#f63d96","#da2b96","#46ac96","#c84996","#ceab96","#6ca996","#ef4596","#422f96","#473396","#8e6896","#f16a96","#4fdd96","#922096","#c4ce96","#aa7496","#46cd96","#f93e96","#623c96","#72c496","#d3ab96","#56c696","#9a2696","#795b96","#949d96","#666b96","#937e96","#f3ce96","#7a4396","#99a396","#aac696","#6cd896","#85da96","#4b7196","#9e7596","#36cb96","#cbd096","#da6396","#e87396","#c0ac96","#dda596","#ac8a96","#dbda96","#b49996","#9d6896","#5db196","#c78496","#aa9996","#5c9596","#e06296","#d0d296","#e24d96","#b24a96","#cf9396","#c9cf96","#a59296","#9bb596","#713896","#b4da96","#c83196","#e12796","#462d96","#343b96","#7a5596","#3d3696","#5f9096","#e45796","#b93596","#ccb096","#3eb796","#e36d96","#4bde96","#7fa596","#f4c896","#785396","#66db96","#77a196","#cb2896","#5f9496","#3ccb96","#f7bc96","#bbba96","#ddc996","#e04b96","#e7cf96","#b39c96","#b04b96","#e6d196","#923096","#44e196","#4f7e96","#60b196","#b9e596","#327196","#3b3796","#442e96","#8e8996","#8bb496","#643c96","#845096","#ac1f96","#429d96","#7f2296","#419396","#b3d196","#9ba396","#812296","#51dc96","#986e96","#df4396","#6c5096","#76d996","#8acd96","#6b9a96","#bae096","#6dd396","#3ecd96","#4b8196","#d09e96","#936d96","#4cd796","#50cf96","#3f9d96","#8b6596","#bb5996","#d29f96","#5ad796","#778d96","#cde596","#569896","#772d96","#a8d396","#c69896","#d02096","#974096","#ad2a96","#d2cb96","#543b96","#51bb96","#334c96","#cb7c96","#9fd096","#e93096","#b2d596","#6f7996","#c78096","#7bb696","#5b3196","#516096","#925796","#8d9596","#f0b596","#f9a596","#87ab96","#da4b96","#e95a96","#86be96","#e78396","#d57b96","#b13896","#85a896","#713296","#f69896","#9dc296","#63d396","#867b96","#6ac996","#e6db96","#4db596","#72a896","#54ce96","#ced096","#833396","#f6cf96","#7c2e96","#5dc696","#deb996","#c8dd96","#384596","#f24796","#3e6796","#c09796","#a65296","#ccda96","#7aa696","#80cb96","#988296","#977596","#506796","#f76596","#75dd96","#b18c96","#602696","#d6e296","#483096","#a25496","#eb8796","#82b696","#ac4096","#a8c496","#c5a496","#dd2896","#4d7d96","#8d4296","#746596","#6a5296","#b7c496","#494a96","#c6d996","#eacf96","#bf4d96","#8d3696","#bdb496","#744196","#4ac496","#733996","#497196","#595496","#8c4396","#615a96","#662c96","#51a996","#8a6e96","#ba2896","#e23596","#7bd396","#377096","#48af96","#c32e96","#535a96","#56aa96","#655c96","#324396","#9e4296","#787396","#9b7696","#766596","#c0c696","#9ed996","#6c4b96","#bcb596","#f73596","#432a96","#482c96","#d05396","#49a696","#ad4696","#cea496","#a62796","#eb3396","#a1b096","#bfad96","#d14f96","#875596","#f86a96","#5bb596","#ca9996","#3c5b96","#ebdc96","#efb596","#a84396","#dacb96","#bec296","#535596","#815796","#8f4496","#8dc296","#396496","#afd696","#d02b96","#d17e96","#cda196","#753c96","#6fc896","#4b8696","#758a96","#7fc296","#796196","#b7d196","#f54996","#d58196","#d9c796","#a47596","#35a796","#edd296","#9d2f96","#f07a96","#dbb496","#3f4c96","#9e1f96","#b4a296","#7aa496","#76d296","#752096","#aaaa96","#3ab296","#40a296","#93ae96","#f8e196","#69a096","#6d7f96","#bc8196","#446e96","#5eaa96","#594596","#de6b96","#f09596","#e44196","#b6ad96","#835596","#e26a96","#4c9396","#5a3a96","#5f4896","#ca4d96","#ab6f96","#f88296","#56a896","#c0d696","#da7396","#6db196","#ecce96","#aca096","#6a2c96","#5d6496","#73c196","#72ac96","#6b8c96","#85b196","#40be96","#399196","#f35b96","#d3c596","#acd096","#77ba96","#a54296","#e13c96","#e5e096","#ebb896","#e68e96","#6a9c96","#60c796","#987f96","#743696","#a8c496","#372096","#bd9796","#b95896","#c3a496","#4a6696","#d1cf96","#3cbe96","#becd96","#f4d796","#502196","#631e96","#464b96","#ca2096","#e75a96","#aa3c96","#eb9196","#f7bb96","#3c6f96","#e2dc96","#efae96","#a66b96","#6bac96","#debb96","#e7a196","#e03f96","#bca396","#81a796","#823e96","#3ac896","#844a96","#975496","#7ac196","#d6d996","#d16296","#b55b96","#bc1e96","#9a7796","#a76096","#b43e96","#614d96","#a63d96","#af3396","#4eb996","#b3aa96","#72d796","#a84e96","#c88a96","#832396","#c92196","#706e96","#c88296","#bf4d96","#f0a496","#633796","#48d496","#542296","#7b5f96","#edd796","#4a2996","#d7c396","#492a96","#bda396","#626596","#eb4c96","#ae4f96","#764196","#62ce96","#9cce96","#9a2d96","#d24c96","#ef8396","#899b96","#7f4296","#3f4696","#679596","#993696","#852796","#7c3b96","#e93496","#749096","#f01e96","#c9bc96","#b5d396","#a2d496","#df5396","#794496","#b79f96","#579796","#555d96","#b3a696","#56db96","#836796","#8e4196","#4c6d96","#5a8796","#f0ba96","#c23696","#565496","#656f96","#e24b96","#f77396","#4bcc96","#3bc896","#5c9c96","#d2bb96","#ce5696","#9bb996","#4b9996","#f17e96","#6ab696","#e29196","#58c596","#c64396","#432296","#b78d96","#84b996","#3eb996","#a93796","#7a8d96","#766496","#f9a396","#50d696","#55e396","#9d8496","#d0d796","#d92996","#997996","#386596","#a7d996","#d87e96","#347796","#e83196","#6c3096","#f47b96","#6dcd96","#572896","#799196","#4bc996","#abc496","#cfe096","#973296","#564996","#8bcd96","#66b896","#a16396","#3e6296","#5fc496","#78be96","#dabe96","#46d696","#b74b96","#7f7096","#4dc996","#beaf96","#ed6f96","#beda96","#aa3896","#83c996","#79b696","#5bc096","#d59196","#cc5596","#4db196","#f19e96","#d1cf96","#367f96","#b86996","#793c96","#c2cd96","#b34896","#35be96","#ae9f96","#78cd96","#4e7d96","#ac2c96","#6d2c96","#b5ac96","#69c696","#63c896","#50da96","#6a7596","#77b496","#c1a696","#e95396","#578d96","#6d5b96","#757d96","#e42c96","#e8e496","#747e96","#e7d696","#759196","#7d2196","#dc9a96","#a3d996","#b8c996","#5c6096","#ae4e96","#5a8396","#7f6a96","#6fb196","#872f96","#475496","#944b96","#4ab696","#bfc396","#91b596","#89c896","#4e4996","#b32596","#e95d96","#da9396","#df4196","#38dc96","#3bd596","#b88d96","#74d596","#846596","#b92a96","#aaa996","#b75d96","#f1b896","#6d4c96","#d28f96","#803596","#8f7d96","#d3bf96","#804996","#708c96","#82a196","#ab9b96","#ef6d96","#aee196","#3db696","#a1d496","#c65d96","#869596","#d12c96","#628196","#cddd96","#6c9196","#788996","#369896","#f98996","#97a296","#dd8296","#c7bb96","#753896","#6dc396","#e3d096","#a73596","#bf8b96","#b3a296","#c4dc96","#6ecd96","#45ab96","#f6b296","#9e7596","#335596","#765496","#43c896","#5b9d96","#789c96","#c75f96","#e64196","#388796","#a62c96","#94e196","#7d8896","#3dd196","#dbe596","#c3e296","#943096","#654496","#f6b896","#60e496","#944796","#4ae296","#86a696","#6eb296","#f6e396","#b59b96","#d49c96","#cea196","#64e396","#3e6296","#426896","#db4896","#da3c96","#7e2896","#496796","#3f5096","#675096","#db5296","#ea6596","#6abf96","#e97096","#a93896","#c6cb96","#c9c496","#7ec096","#49ab96","#e96e96","#3f3d96","#372696","#9f6296","#ce4d96","#7c9c96","#85d796","#689096","#435e96","#685796","#af2396","#812096","#b19a96","#8b8996","#cfd296","#4f8796","#ad6d96","#c12896","#507796","#589a96","#f35e96","#7eb196","#b52496","#525096","#e56d96","#c9da96","#b9c696","#8f8f96","#ccc296","#9c4e96","#522996","#97ce96","#7cbe96","#823896","#363a96","#3b6696","#3e7396","#e49696","#ad2996","#8c7896","#3b5b96","#40b996","#8a4596","#444296","#822996","#e99b96","#c4d196","#622296","#347996","#c43a96","#5b5e96","#5ba496","#597296","#36c296","#416796","#4eb496","#336196","#806296","#eca396","#cad696","#d5dc96","#4b3b96","#769396","#81e196","#f5b196","#566596","#cabf96","#359e96","#ceb196","#c24696","#86b896","#98de96","#42bc96","#475096","#475e96","#3ae196","#e9c496","#a55a96","#6e7396","#a57096","#60d596","#b43e96","#456d96","#c37e96","#ddda96","#595796","#bbd396","#896e96","#be5e96","#ec8296","#802496","#a9e096","#78d696","#4c2f96","#f69a96","#c96b96","#346d96","#339996","#34d996","#bae196","#3c9d96","#568596","#572596","#80c196","#7fb696","#b04c96","#72b596","#487896","#67ac96","#cab796","#ed7a96","#727f96","#ee7796","#4d8a96","#7eb796","#c66f96","#488f96","#862996","#70b196","#9c9196","#d2a396","#b4a296","#966096","#405096","#682196","#dd2996","#f77f96","#989a96","#a7bd96","#8d5996","#bc5496","#568b96","#c3bb96","#607796","#34a396","#60b196","#636796","#3b7496","#547896","#c58d96","#d37896","#7f9696","#405496","#e27496","#c2ca96","#dd1e96","#e43f96","#a74496","#978a96","#aeab96","#702496","#7f7396","#503796","#8aa496","#c53e96","#ed9a96","#f57496","#662e96","#919696","#828996","#79d896","#f2b296","#a95a96","#b13796","#373196","#cd8b96","#564196","#37a196","#984b96","#464096","#7daa96","#c3d296","#577396","#ca2396","#d39996","#753596","#44b596","#419796","#db2a96","#c67396","#b76296","#cb2896","#c98696","#9a5f96","#bc5096","#c12796","#7bd096","#4ea496","#75df96","#d9ce96","#89b196","#a0a196","#dd5496","#b2c796","#8ebd96","#a12496","#c9e396","#8a5696","#c93f96","#ed6b96","#4e2e96","#5f3396","#f7a996","#b35b96","#89a696","#ad4696","#a7a296","#e67496","#523696","#e93996","#a33b96","#9f6f96","#f0e296","#ece596","#b9ab96","#d84996","#cfc396","#ddb396","#f17696","#ad8196","#8e8d96","#f16096","#899e96","#562e96","#d67496","#cf9896","#7a3396","#665b96","#59ae96","#f27c96","#594e96","#bb2a96","#de6e96","#46c196","#d6c796","#92bc96","#6dca96","#d0d696","#e34096","#e1c696","#bf8c96","#5ca896","#c34896","#999d96","#91c696","#b37096","#9e9396","#3a9096","#368f96","#93d796","#dc7096","#cce396","#a4a796","#a58996","#c82a96","#c68a96","#b33996","#775196","#f79496","#8f4d96","#d53c96","#e4aa96","#3b9096","#b55b96","#963996","#4c6296","#482f96","#3f7096","#b1d696","#ba3196","#ddbb96","#ee9196","#ec2496","#d7cd96","#433e96","#f23a96","#574996","#445f96","#c69a96","#5d2796","#3a5796","#61b796","#b37796","#60e196","#cd4f96","#82a396","#d83c96","#9f7996","#d15a96","#c1d596","#805396","#80c196","#ad4d96","#4faf96","#9cc096","#64c396","#41c796","#364f96","#dec496","#472e96","#ecac96","#736196","#709b96","#428296","#684196","#e99196","#a89a96","#89cd96","#3d3e96","#e9e596","#c66796","#b1ac96","#55d496","#95e096","#3fe096","#d62b96","#343696","#ca4696","#be9296","#802996","#70b696","#807796","#f5e396","#58dc96","#c25b96","#814896","#a0a896","#c14b96","#72ac96","#6e5096","#a6cb96","#f6b796","#de4e96","#9f6c96","#75b796","#a55296","#422e96","#744f96","#392d96","#f1b596","#abb696","#685c96","#9b9e96","#40cc96","#e78596","#745396","#4dc096","#f3ac96","#f75096","#4d2a96","#c54596","#c09496","#9e1f96","#e04496","#f96e96","#b9a596","#cc3796","#482196","#756e96","#edc196","#a5d396","#632f96","#777f96","#52b296","#c89596","#85b596","#ab9c96","#ed4196","#dd4196","#a4bc96","#437b96","#7b5a96","#929196","#cdcd96","#5d9b96","#f75296","#628396","#e4a996","#64ce96","#de9f96","#c84096","#ebcf96","#97b296","#824396","#693496","#659196","#5fe596","#d98796","#f26196","#822096","#9e4696","#324b96","#61d296","#44cf96","#915596","#cca996","#4c5696","#846b96","#666496","#d6c396","#c57896","#f29a96","#9d8496","#892396","#e93e96","#60b996","#693b96","#be8696","#753296","#c1cb96","#d14496","#797596","#ede396","#b68296","#c25696","#994596","#a84296","#59b896","#edd996","#8cd396","#a3c796","#ea5f96","#8fe496","#7b2496","#a18a96","#766496","#69c896","#e62896","#7ec596","#ce6c96","#82e096","#825d96","#dde296","#e3a996","#cf8a96","#942896","#506996","#51ab96","#615a96","#d29596"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}}},"id":"97b975bd-4f67-43fb-9f50-e20436c8d2b5","type":"ColumnDataSource"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"bd0d882a-a595-4ef9-9115-8a0ae431b04b","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"bb0a5f43-64d6-41c6-83c0-f6437acb45e4","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"9a73f867-e1e9-4253-b4af-7175ea83e7b4","type":"CustomJS"}],"root_ids":["733d31b9-a589-4b67-a6c1-de118d3d0206"]},"title":"Bokeh Application","version":"0.12.11"}}';
                    var render_items = [{"docid":"80aeb70f-2ec3-40af-a1f2-1aef3f9bbf4d","elementid":"a9c1206d-1518-4de2-9894-605a54c2ed5d","modelid":"733d31b9-a589-4b67-a6c1-de118d3d0206"}];
                    root.Bokeh.embed.embed_items(docs_json, render_items);
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to embed document because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.11.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.11.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.11.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.11.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.11.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.11.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();