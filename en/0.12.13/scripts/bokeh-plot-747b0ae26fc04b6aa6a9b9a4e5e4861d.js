(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("9fae904d-670c-4575-96f2-b4a0494f5205");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '9fae904d-670c-4575-96f2-b4a0494f5205' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.13.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.13.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.13.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.13.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "MyFormatter": require("custom/bk_script_466629d5697845ceb42556beea3046f7.my_formatter").MyFormatter,
          "Custom": require("custom/bk_script_4fb461e8df454326ae873272661da418.custom").Custom,
          "IonRangeSlider": require("custom/bk_script_7c6336ebdd3c4188810b13b02e106dda.ion_range_slider").IonRangeSlider,
          "Surface3d": require("custom/bk_script_d3db61d368bd4a4b9a4b2baf689d5b43.surface3d").Surface3d,
          "DrawTool": require("custom/bk_script_d4f1dea1b0f74c799e098760aa3064b5.draw_tool").DrawTool,
          "LatexLabel": require("custom/bk_script_df57e6d13ff744c395282f69bdb1d1d0.latex_label").LatexLabel
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_466629d5697845ceb42556beea3046f7.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
          
          },
          "custom/bk_script_4fb461e8df454326ae873272661da418.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
          
          },
          "custom/bk_script_7c6336ebdd3c4188810b13b02e106dda.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // Backbone Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
          
          },
          "custom/bk_script_d3db61d368bd4a4b9a4b2baf689d5b43.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model. Currently
          // Bokeh models and views are based on BackBone. More information about
          // using Backbone can be found here:
          //     http://backbonejs.org/
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``,
          // corresponding to our
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // Backbone Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set Backbone listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript Backbone model sublcass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
          
          },
          "custom/bk_script_d4f1dea1b0f74c799e098760aa3064b5.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (_a = e.bokeh, sx = _a.sx, sy = _a.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
                  var _a;
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
          
          },
          "custom/bk_script_df57e6d13ff744c395282f69bdb1d1d0.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
          
          }
          }, "custom/main");
          ;
          });
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"74dae44a-f2cd-49fd-9d6e-352bd4ac8605":{"roots":{"references":[{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"0e329d67-ed7f-4d5f-b270-25443cba6fbc","type":"PanTool"},{"id":"c866e27d-4377-4043-9a1a-28aa8ceb13c7","type":"WheelZoomTool"},{"id":"c07eeddc-21e4-4b26-9c97-e3d2936ddf6e","type":"ZoomInTool"},{"id":"096d8696-03ad-4480-8286-db3fbd002856","type":"ZoomOutTool"},{"id":"8c80d650-cb6a-411c-a183-18ba6dde8134","type":"ResetTool"}]},"id":"d220dc79-2179-40e2-ab53-848a088f2944","type":"Toolbar"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"e8c8b8f9-206b-472c-9d10-676c80ba3729","type":"CustomJS"},{"attributes":{},"id":"0e329d67-ed7f-4d5f-b270-25443cba6fbc","type":"PanTool"},{"attributes":{"source":{"id":"49134201-2c63-4b3b-91f9-c1846ff5061a","type":"ColumnDataSource"}},"id":"6353bde7-21eb-4bce-a953-e4cd63f9e4e1","type":"CDSView"},{"attributes":{},"id":"c866e27d-4377-4043-9a1a-28aa8ceb13c7","type":"WheelZoomTool"},{"attributes":{},"id":"c07eeddc-21e4-4b26-9c97-e3d2936ddf6e","type":"ZoomInTool"},{"attributes":{},"id":"096d8696-03ad-4480-8286-db3fbd002856","type":"ZoomOutTool"},{"attributes":{},"id":"8c80d650-cb6a-411c-a183-18ba6dde8134","type":"ResetTool"},{"attributes":{},"id":"d5068d27-cd28-4db6-86d4-1a9d4919b4c9","type":"BasicTickFormatter"},{"attributes":{"plot":null,"text":""},"id":"99f4c316-a2d4-4ed1-87c5-bcf77f5f5e3f","type":"Title"},{"attributes":{"children":[{"id":"87d99bf0-9a0c-4bf5-8053-989789b9424b","type":"WidgetBox"},{"id":"663b3c7a-0063-401d-b8a7-1a0172ba89b7","type":"Row"}]},"id":"fae24f8d-80d9-46ea-8246-9d6e86c388f4","type":"Column"},{"attributes":{"button_type":"success","callback":null,"icon":null,"js_event_callbacks":{"button_click":[{"id":"c10ddf9c-d9ae-4409-90f1-7c74880d30ed","type":"CustomJS"}]}},"id":"db18b896-2162-41de-8bab-d5ec979b0b16","type":"Button"},{"attributes":{"children":[{"id":"db18b896-2162-41de-8bab-d5ec979b0b16","type":"Button"}]},"id":"87d99bf0-9a0c-4bf5-8053-989789b9424b","type":"WidgetBox"},{"attributes":{},"id":"d0214d9a-3e06-4376-81af-7170134f86df","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}],"width":1000},"id":"ac7cd884-d241-45db-888f-44d5fea66d0e","type":"WidgetBox"},{"attributes":{"width":1000},"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"},{"attributes":{"children":[{"id":"8f278d26-6c27-4525-a0fe-9e2bf018cce7","subtype":"Figure","type":"Plot"},{"id":"ac7cd884-d241-45db-888f-44d5fea66d0e","type":"WidgetBox"}]},"id":"663b3c7a-0063-401d-b8a7-1a0172ba89b7","type":"Row"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"982c6b9e-e372-4d06-9231-ef44790ecf9a","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"c10ddf9c-d9ae-4409-90f1-7c74880d30ed","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"5e5d4d9f-d846-45ba-9eae-47f8b74f3570","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f5aac16c-3f59-499b-8bd5-487733fb225e","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta_x&#x27;, &#x27;delta_y&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"20ed1296-550c-4d43-b2ba-899e6be427ef","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"70980715-ec90-4391-b2bb-28b58945cf50","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"3a914131-96d6-4b88-8d24-e4d028090507","type":"CustomJS"},{"attributes":{"callback":null},"id":"9a5b1722-507d-4a1c-811b-fcfe1b7899b7","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"621d5667-0c91-4c08-8099-75eb6e736c27","type":"CustomJS"},{"attributes":{"data_source":{"id":"49134201-2c63-4b3b-91f9-c1846ff5061a","type":"ColumnDataSource"},"glyph":{"id":"07687849-f4a1-45d4-b807-8035c1807c04","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"e8568d4c-0a71-4582-b130-e46697a30145","type":"Circle"},"selection_glyph":null,"view":{"id":"6353bde7-21eb-4bce-a953-e4cd63f9e4e1","type":"CDSView"}},"id":"492cf84f-713e-4c0b-af59-48b088daa60a","type":"GlyphRenderer"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"3198efbd-3881-4729-9399-74e7185d6518","type":"CustomJS"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"e8568d4c-0a71-4582-b130-e46697a30145","type":"Circle"},{"attributes":{"callback":null},"id":"5003cb2d-d74f-472a-bebe-d2b4598c6b9f","type":"DataRange1d"},{"attributes":{"below":[{"id":"ce87bf74-c728-4329-97c5-c6d5c0b0f3e8","type":"LinearAxis"}],"js_event_callbacks":{"doubletap":[{"id":"70980715-ec90-4391-b2bb-28b58945cf50","type":"CustomJS"}],"lodend":[{"id":"5e5d4d9f-d846-45ba-9eae-47f8b74f3570","type":"CustomJS"}],"lodstart":[{"id":"982c6b9e-e372-4d06-9231-ef44790ecf9a","type":"CustomJS"}],"mouseenter":[{"id":"3198efbd-3881-4729-9399-74e7185d6518","type":"CustomJS"}],"mouseleave":[{"id":"a2da2b77-9248-412f-a759-0e894ba7e3c8","type":"CustomJS"}],"mousemove":[{"id":"621d5667-0c91-4c08-8099-75eb6e736c27","type":"CustomJS"}],"pan":[{"id":"20ed1296-550c-4d43-b2ba-899e6be427ef","type":"CustomJS"}],"panend":[{"id":"ee3c555f-fba3-4848-bede-73e2e1a6fbb7","type":"CustomJS"}],"panstart":[{"id":"5ce200a6-b463-48b0-b1c2-06f1a8828cb4","type":"CustomJS"}],"pinch":[{"id":"6a8cc4ce-919b-484d-b6d3-738d00da78ac","type":"CustomJS"}],"pinchend":[{"id":"3d8b5101-6492-46a5-b1bc-a43df6f7e842","type":"CustomJS"}],"pinchstart":[{"id":"c0f2f4ec-3b27-49e1-b399-f89845f100b8","type":"CustomJS"}],"press":[{"id":"3a914131-96d6-4b88-8d24-e4d028090507","type":"CustomJS"}],"tap":[{"id":"e8c8b8f9-206b-472c-9d10-676c80ba3729","type":"CustomJS"}],"wheel":[{"id":"f5aac16c-3f59-499b-8bd5-487733fb225e","type":"CustomJS"}]},"left":[{"id":"e845882e-a02e-4d62-93f8-73201ddd474e","type":"LinearAxis"}],"renderers":[{"id":"ce87bf74-c728-4329-97c5-c6d5c0b0f3e8","type":"LinearAxis"},{"id":"c48ecd8f-1841-4830-aafa-83a6a6b36b66","type":"Grid"},{"id":"e845882e-a02e-4d62-93f8-73201ddd474e","type":"LinearAxis"},{"id":"4d719521-4d07-4852-987e-f01ed7281dc9","type":"Grid"},{"id":"492cf84f-713e-4c0b-af59-48b088daa60a","type":"GlyphRenderer"}],"title":{"id":"99f4c316-a2d4-4ed1-87c5-bcf77f5f5e3f","type":"Title"},"toolbar":{"id":"d220dc79-2179-40e2-ab53-848a088f2944","type":"Toolbar"},"x_range":{"id":"9a5b1722-507d-4a1c-811b-fcfe1b7899b7","type":"DataRange1d"},"x_scale":{"id":"8ec0f60d-5699-4e71-860b-0b083d0e653e","type":"LinearScale"},"y_range":{"id":"5003cb2d-d74f-472a-bebe-d2b4598c6b9f","type":"DataRange1d"},"y_scale":{"id":"d13f335b-7afd-49eb-b785-99d244394fb8","type":"LinearScale"}},"id":"8f278d26-6c27-4525-a0fe-9e2bf018cce7","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"8ec0f60d-5699-4e71-860b-0b083d0e653e","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"a2da2b77-9248-412f-a759-0e894ba7e3c8","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"5ce200a6-b463-48b0-b1c2-06f1a8828cb4","type":"CustomJS"},{"attributes":{},"id":"d13f335b-7afd-49eb-b785-99d244394fb8","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"ee3c555f-fba3-4848-bede-73e2e1a6fbb7","type":"CustomJS"},{"attributes":{"plot":{"id":"8f278d26-6c27-4525-a0fe-9e2bf018cce7","subtype":"Figure","type":"Plot"},"ticker":{"id":"56b6569a-d07e-4517-954a-210070e02f1e","type":"BasicTicker"}},"id":"c48ecd8f-1841-4830-aafa-83a6a6b36b66","type":"Grid"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"c0f2f4ec-3b27-49e1-b399-f89845f100b8","type":"CustomJS"},{"attributes":{"formatter":{"id":"d5068d27-cd28-4db6-86d4-1a9d4919b4c9","type":"BasicTickFormatter"},"plot":{"id":"8f278d26-6c27-4525-a0fe-9e2bf018cce7","subtype":"Figure","type":"Plot"},"ticker":{"id":"56b6569a-d07e-4517-954a-210070e02f1e","type":"BasicTicker"}},"id":"ce87bf74-c728-4329-97c5-c6d5c0b0f3e8","type":"LinearAxis"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"3d8b5101-6492-46a5-b1bc-a43df6f7e842","type":"CustomJS"},{"attributes":{},"id":"56b6569a-d07e-4517-954a-210070e02f1e","type":"BasicTicker"},{"attributes":{"formatter":{"id":"d0214d9a-3e06-4376-81af-7170134f86df","type":"BasicTickFormatter"},"plot":{"id":"8f278d26-6c27-4525-a0fe-9e2bf018cce7","subtype":"Figure","type":"Plot"},"ticker":{"id":"b9c92243-4b17-4232-a411-4df12ce8aa63","type":"BasicTicker"}},"id":"e845882e-a02e-4d62-93f8-73201ddd474e","type":"LinearAxis"},{"attributes":{"args":{"div":{"id":"8348943c-6ca1-4648-8409-693ab522f97b","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;scale&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"6a8cc4ce-919b-484d-b6d3-738d00da78ac","type":"CustomJS"},{"attributes":{},"id":"b9c92243-4b17-4232-a411-4df12ce8aa63","type":"BasicTicker"},{"attributes":{"dimension":1,"plot":{"id":"8f278d26-6c27-4525-a0fe-9e2bf018cce7","subtype":"Figure","type":"Plot"},"ticker":{"id":"b9c92243-4b17-4232-a411-4df12ce8aa63","type":"BasicTicker"}},"id":"4d719521-4d07-4852-987e-f01ed7281dc9","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"07687849-f4a1-45d4-b807-8035c1807c04","type":"Circle"},{"attributes":{"callback":null,"column_names":["radius","x","y","fill_color"],"data":{"fill_color":["#957996","#43b296","#6f6a96","#7ed596","#634d96","#b44496","#4bbf96","#3a9a96","#9aca96","#b17896","#b1c396","#ef2096","#4b3b96","#873896","#a47696","#f8bb96","#3d6b96","#8d8996","#d18c96","#84d696","#b82696","#7b4496","#cfb396","#a22196","#50d996","#f6a896","#c92a96","#932496","#657f96","#3b2496","#486e96","#669d96","#e7bb96","#403296","#461e96","#f5e196","#33b096","#8b9b96","#909c96","#3e8d96","#7e7396","#40de96","#57b396","#ea5896","#d26b96","#7f5396","#a36c96","#936196","#6a7e96","#995696","#aad696","#a7b496","#b9be96","#522496","#d13e96","#e03796","#4baf96","#7e3596","#43aa96","#444596","#c4d896","#a72696","#f43996","#77c996","#eb7596","#322a96","#973a96","#df6996","#e24796","#d67a96","#a04e96","#3dd096","#948296","#e56096","#69bf96","#91c096","#4b5296","#3c2b96","#8d3496","#816896","#a1a796","#5cd696","#e4ae96","#b37596","#b7db96","#456d96","#499096","#ea7996","#933796","#f19196","#683d96","#3e9596","#ab7996","#5d2796","#c99996","#887e96","#bd7a96","#cf4d96","#e29396","#e77596","#ba3896","#7b8896","#bd4e96","#7a4496","#d83596","#9b3d96","#4c8496","#5a9496","#334696","#c3df96","#6e7196","#3d7296","#66b996","#aea296","#324196","#d9ae96","#d37d96","#833596","#8a3596","#f67096","#6da696","#373796","#58c496","#4d5b96","#534596","#b69996","#40a396","#7fb896","#e4cb96","#665396","#a06796","#64a296","#dbc196","#6a5d96","#82c796","#a62396","#962896","#473496","#3cc796","#46ca96","#f3c096","#91b996","#cd9a96","#dfcd96","#c47496","#348296","#5e2796","#ebbe96","#513c96","#a5ac96","#512296","#38c296","#776296","#69a296","#6f7396","#d4c396","#b7a696","#723d96","#eb7196","#b4b496","#eabb96","#422b96","#812b96","#d14696","#9f6596","#75ca96","#9fd796","#d42296","#c83696","#3a3996","#e38696","#90ad96","#8f7796","#544796","#ce6196","#e37296","#d27b96","#8a6b96","#76aa96","#bcc696","#8a7996","#b16096","#78d996","#463a96","#b8a096","#c6c996","#dc5c96","#608796","#64bd96","#794c96","#8daa96","#d48f96","#5e7196","#59c696","#f47796","#bc1f96","#583196","#3ba696","#8a4096","#c42e96","#f69396","#ce9896","#da5896","#6d8496","#62bb96","#657696","#6c8696","#a52396","#44ad96","#9ebd96","#5a9c96","#766d96","#f78d96","#964d96","#cc2d96","#b79996","#731f96","#677c96","#e8ce96","#e88c96","#7a8196","#7f6b96","#cbbf96","#696d96","#38bd96","#964296","#434496","#ebc196","#89c196","#824996","#8e6496","#de4f96","#5ce296","#a85e96","#835396","#692496","#65b996","#e35996","#3ed896","#5b3a96","#478096","#b28e96","#b7c896","#765996","#a23096","#c19296","#607896","#ccdf96","#522296","#df8496","#7c5496","#88b796","#80a796","#588696","#bf5f96","#b0dd96","#946296","#6b9e96","#8f9196","#c48f96","#4be296","#5ea996","#ea3496","#7edb96","#bc7596","#593196","#938396","#745596","#a8df96","#f9dd96","#e7c796","#5cbe96","#542196","#f1cf96","#8e5196","#e07f96","#bc8296","#5fa196","#9fc696","#469c96","#8fc396","#67d996","#737696","#d43296","#89da96","#482e96","#ded796","#412e96","#d13c96","#c1cd96","#467e96","#592d96","#584696","#6da496","#534f96","#f12996","#bb2996","#509696","#625e96","#f98196","#cdd796","#78b096","#a88196","#cb2596","#cec896","#9fb796","#ec9896","#f1aa96","#38df96","#c88e96","#89b996","#961e96","#522296","#4d8896","#ab2496","#848196","#3d9c96","#e4b496","#b8e396","#dbd496","#77c596","#8d3196","#6dad96","#d63396","#93cc96","#329496","#75d396","#522796","#b5bc96","#c54f96","#79db96","#b32996","#a3a396","#a3a396","#3e2596","#7b6e96","#f1dc96","#429a96","#78d596","#784096","#9c3c96","#61bc96","#cb2596","#699696","#768996","#ef7396","#854196","#552396","#d43496","#c5da96","#b59c96","#d44f96","#7cb796","#a73196","#4bc996","#dfe396","#605996","#a96296","#ad3796","#5c5596","#77c596","#4f4596","#ad6796","#ba8396","#9bdc96","#8c3496","#7be396","#abc396","#3ec796","#8ea096","#88d896","#dc5a96","#ac3996","#9ce296","#49cb96","#71d196","#636c96","#973696","#d38396","#358496","#3bc796","#84d296","#b28b96","#987196","#3f5996","#4ae396","#f92c96","#48ce96","#75c996","#327a96","#90ca96","#d35c96","#416396","#3f9b96","#f88a96","#9bde96","#36b496","#7c3796","#483996","#748996","#847f96","#616096","#a8c996","#68b096","#ae2f96","#3e3c96","#f2b096","#e3cd96","#ac4296","#949d96","#b8dc96","#dc5596","#ef5096","#9ad296","#f03096","#f1d996","#9d4296","#4b5b96","#beb696","#5f2496","#70d396","#b8cd96","#74bf96","#64ae96","#c97396","#772a96","#e64696","#e02a96","#a1a296","#97c896","#4fd596","#ab6296","#b12896","#98b896","#b33e96","#bb7c96","#a3d396","#ed1e96","#ced596","#9ab796","#7f9b96","#d96296","#55d696","#5a7a96","#89b596","#f1cd96","#876696","#ecdf96","#6e7096","#da5096","#988a96","#b84096","#663196","#a69596","#e75296","#f6a696","#36c896","#59b596","#edc696","#38db96","#e96296","#b15b96","#92c296","#f4db96","#e22f96","#cdd896","#ed6396","#833296","#985396","#674296","#e28596","#484896","#8e2096","#c1b496","#c06c96","#bfaa96","#7d3596","#578996","#5a6796","#b4c596","#838496","#6aa996","#f84a96","#3d2a96","#ad2996","#8faf96","#e4a996","#af3096","#991e96","#876b96","#477196","#eb6096","#357996","#f87696","#722596","#a95696","#3b3496","#594796","#8e5e96","#7a2796","#f5a996","#e9de96","#355896","#7cd996","#372196","#aa6e96","#cc9596","#b98d96","#63c796","#425196","#8d2b96","#369896","#813496","#ccd896","#c1dd96","#409996","#e1c496","#a52996","#f14a96","#d94f96","#bdc496","#eb4196","#619f96","#e62096","#867d96","#ac4e96","#bd3b96","#ad2d96","#d08f96","#b71f96","#4a6a96","#425a96","#762496","#ce8a96","#69da96","#d95f96","#7fe096","#438196","#bd9196","#63d796","#5a7996","#97df96","#9d9b96","#863496","#e1b096","#41ba96","#8a2096","#928296","#3fca96","#812f96","#51d096","#4f2e96","#9e5896","#e28296","#946296","#50e296","#898696","#f6df96","#845196","#c3d596","#658096","#96af96","#bf6896","#503a96","#496596","#955d96","#351f96","#48b396","#c26996","#b62796","#e18896","#9c5c96","#5a6b96","#a5c796","#f13996","#a94296","#958a96","#362196","#82b896","#886196","#dcbc96","#b98496","#a22196","#c9ae96","#34a096","#3f5896","#943496","#92c296","#936196","#a1e396","#89a596","#924a96","#3d8296","#d05c96","#675c96","#423496","#457596","#49da96","#dbc696","#e96a96","#b44496","#bb9896","#e8c696","#bb9796","#965796","#58d296","#c82a96","#b4cb96","#62cf96","#52b696","#983996","#a22496","#9e7f96","#74cd96","#5fa496","#6a9596","#f8a896","#e56a96","#38ca96","#759f96","#368596","#a77e96","#ec5b96","#662196","#537396","#865996","#a83c96","#cc2096","#d1a796","#5bbd96","#40d996","#b77696","#7ee596","#375d96","#5c4b96","#b49d96","#919696","#3d3096","#6b6796","#e67796","#efa196","#ca2c96","#4b6596","#e1d896","#649c96","#e1db96","#733d96","#5f9296","#40c896","#916f96","#cc5396","#36bb96","#f43196","#558d96","#703296","#7e7796","#583696","#662196","#3bae96","#9ad296","#c52f96","#354596","#762596","#6ae596","#e39b96","#499696","#ad2b96","#a15296","#e54296","#d28196","#e23296","#923496","#657596","#f24596","#516e96","#74a596","#b3ce96","#a86e96","#a37496","#812496","#554d96","#80b396","#b1ce96","#d8ae96","#404f96","#73de96","#ac5496","#efb396","#925a96","#e12196","#7ac296","#858896","#e8e396","#648b96","#5eaf96","#645e96","#917496","#c27796","#977e96","#66b696","#573996","#f8a896","#ed9496","#bdc296","#f53096","#b4a896","#834f96","#876c96","#778796","#452096","#6bc096","#df4c96","#502196","#7b4396","#8acf96","#f16096","#4ebc96","#e5ab96","#7b5a96","#e0a896","#48b996","#ae2496","#e34d96","#436296","#a58596","#73bf96","#e24d96","#dca296","#e24396","#518f96","#e03496","#f58a96","#824596","#721f96","#f24796","#b0c396","#d5a196","#ca2a96","#aa2696","#e3bc96","#e43a96","#f25496","#68cb96","#91c496","#bf2c96","#5d7496","#9b2096","#348f96","#528196","#555f96","#c83596","#543296","#8b3d96","#a6cc96","#3aab96","#6b6696","#624396","#c7d996","#92b696","#8dbf96","#efdc96","#f24e96","#f75b96","#93ab96","#377b96","#9ed396","#a29196","#936f96","#9a8a96","#cfe596","#322196","#325196","#c39796","#b13d96","#5a6596","#ca6096","#947296","#776096","#f48196","#b3a496","#d59f96","#477296","#f9a496","#bf7a96","#762c96","#61ab96","#67c296","#53d696","#d7dd96","#ac6c96","#d7c996","#d03296","#e8ab96","#6de196","#4d2b96","#3e6796","#867496","#aa5096","#e4c896","#a96396","#403796","#405196","#40ae96","#9f3c96","#855596","#626f96","#f04896","#78a396","#783996","#f23d96","#535996","#6f7196","#ca2096","#a22b96","#ea4996","#dc5796","#5f2296","#dd7396","#d6c896","#f38596","#a35796","#6d8296","#36ad96","#a67c96","#456c96","#e06496","#bcab96","#d5c096","#f36396","#c24996","#adb696","#63d596","#f34296","#f5c596","#b47796","#a32c96","#b98596","#f7ac96","#c35096","#80b396","#f7a196","#6a9496","#e67796","#7b2496","#d05396","#bb7e96","#7eb196","#47d196","#967f96","#3fd696","#d42396","#e12996","#944e96","#4fd596","#474d96","#44a096","#9cc596","#9f2996","#a14996","#848c96","#b33996","#875d96","#903696","#f1e196","#97d996","#8db296","#7ab696","#e06396","#af3096","#bd5c96","#e32096","#b6e596","#c77d96","#d72696","#479396","#f6b496","#ad7496","#d1b896","#445696","#84ac96","#e8ba96","#9f1f96","#6bbb96","#c4b296","#9c3496","#3f2e96","#d26596","#7ad696","#ced496","#dcd496","#967896","#717d96","#904b96","#3d2696","#e1b896","#6d8996","#59bf96","#c29096","#e27796","#893396","#c2a696","#614196","#709a96","#45e496","#988796","#5bb496","#e7d196","#50bf96","#ec8f96","#543d96","#7aa096","#48a096","#a93e96","#726b96","#ef3096","#c35996","#6bc696","#332696","#7f8b96","#c97f96","#e75c96","#3f3996","#7b3d96","#9bde96","#f62996","#955596","#6b3696","#808996","#99ab96","#f3e296","#58a196","#787196","#9d5796","#915796","#61d096","#de7596","#4c9296","#ca6196","#c92196","#5a2296","#71c696","#657e96","#8e9396","#934396","#3e7d96","#3cc796","#f7c596","#3f7896","#a23196","#358d96","#51ce96","#437796","#7fcf96","#5aab96","#af6d96","#847f96","#4c9f96","#8a8d96","#54de96","#559c96","#a7dd96","#759696","#5ecc96","#838c96","#8c5796","#8f3c96","#bc7496","#664696","#863896","#e6c296","#b1a896","#474096","#f29796","#97d796","#ee3c96","#e39096","#bb8896","#5b5e96","#7e7996","#336796","#aeaf96","#71a596","#763596","#ea5096","#856b96","#d82096","#73d696","#655c96","#4ccc96","#8c3296","#992796","#e0c396","#3c3396","#da3096","#94c596","#87dd96","#f95796","#ecb196","#f29e96","#985396","#60b896","#539196","#3b8096","#b06696","#a66896","#cf6b96","#97c896","#7d6996","#dc4896","#548396","#73b296","#745396","#c92e96","#3dd996","#cbdc96","#83d196","#a83996","#b18796","#cb5496","#5a4b96","#f26796","#81d696","#be6796","#843d96","#d2aa96","#354e96","#b4a996","#768796","#cdc896","#f6ab96","#52e096","#bb7696","#bf5096","#405696","#7d9296","#bfac96","#343096","#56a996","#b19396","#76be96","#5ed596","#87b696","#bb8d96","#b03d96","#5ece96","#5a2496","#d93996","#f85b96","#5d2996","#8dd296","#3e6b96","#526396","#761f96","#574396","#dd8796","#996996","#90d496","#ca4b96","#5b2b96","#aa8e96","#ab5396","#527d96","#f46d96","#cc3e96","#882c96","#494796","#d29d96","#d65196","#4cae96","#857096","#737a96","#9c2296","#b52c96","#c17496","#60e196","#6d2196","#b85b96","#ac2996","#b0bf96","#9b2996","#a46a96","#ea9d96","#846896","#37e596","#324296","#983096","#f65796","#356d96","#9f5d96","#d4c796","#d94f96","#3fc096","#516e96","#b96596","#8bb996","#c5ce96","#759c96","#b0a596","#64e496","#5e2b96","#613196","#aa1e96","#cae596","#a44d96","#3f2d96","#d5af96","#7d2696","#aba196","#acaa96","#56d896","#5e8596","#6aa196","#c6bb96","#88ce96","#e9c096","#7f7c96","#e36196","#aace96","#a4b996","#a0e596","#3ec496","#f39096","#4c6996","#a7dc96","#d4bb96","#6b5e96","#555c96","#6ebb96","#d63796","#d35a96","#7c4396","#ca3296","#b3c796","#473696","#68a996","#85b596","#f3a196","#699796","#892096","#9d6396","#8ad496","#b9ba96","#408296","#de1f96","#cb9b96","#7c4d96","#b56896","#627996","#5a5296","#3f2296","#df4496","#8ad396","#414496","#aba796","#b26196","#536d96","#e6b796","#7b7a96","#939396","#bc5896","#987a96","#c9e096","#e3a696","#cb7596","#38b996","#ca6896","#f5db96","#a95b96","#7c4c96","#add296","#5cb796","#3c2996","#f7a396","#4a1f96","#db9e96","#515f96","#6a5b96","#443a96","#eeb796","#362996","#b32396","#4abd96","#c6c996","#7fa196","#eee496","#942f96","#be8796","#a2d996","#f4d696","#c45096","#9da996","#e55296","#72b296","#5cbd96","#72a296","#906b96","#f86096","#9f7296","#475296","#a67296","#902896","#e65d96","#5a9096","#cddd96","#a9a196","#492296","#b29596","#bd5896","#dd5c96","#f94796","#6fa196","#389896","#a04096","#776096","#5fc896","#327d96","#bfb496","#524396","#6ed496","#8ee096","#cfc696","#6fd096","#5ba896","#729096","#9dd096","#da4496","#64bf96","#599a96","#46c696","#c42996","#7b6996","#7b4996","#c73396","#9e2f96","#e97296","#e4d696","#766496","#745596","#eb7996","#d79096","#574996","#8f7796","#ca2c96","#9b4a96","#8fc796","#d28c96","#90aa96","#9c6396","#aec596","#bd7c96","#553c96","#cdc096","#977196","#c08f96","#f4a596","#f27396","#5b9396","#51bd96","#78ae96","#438896","#9ab796","#326796","#d78296","#577f96","#f72d96","#b87996","#eee496","#768696","#662696","#b86296","#7d2796","#633396","#3e6b96","#815f96","#9c5596","#b41e96","#9e8d96","#9d6f96","#7b2b96","#52b196","#f54396","#98a796","#bd8b96","#3b9796","#645496","#c89f96","#85c596","#8eae96","#f15896","#b27f96","#a66b96","#c4a796","#595596","#515f96","#91a896","#32a396","#37bc96","#326c96","#a0a596","#b8d896","#dcd496","#85de96","#a72a96","#d9a696","#3e3b96","#b42396","#b3dc96","#366896","#333a96","#cea796","#6c2a96","#99b996","#522296","#84b196","#d7db96","#75da96","#55c196","#dc4d96","#33ac96","#3f5396","#586f96","#3b7896","#8a2f96","#8e9a96","#3ac996","#64dc96","#f84296","#3d4896","#f07696","#69d796","#6a6696","#aa2696","#bdca96","#a9ab96","#33dc96","#4ecf96","#59d196","#70a896","#663c96","#335496","#6b4e96","#403596","#8db796","#b2ac96","#5a2796","#835396","#dd8b96","#989d96","#5cbe96","#de9696","#ee2d96","#5a2c96","#716796","#b26996","#98bc96","#967296","#6d8596","#8e5896","#a5da96","#64e096","#d1a996","#3b2496","#88ba96","#868196","#a86996","#eec396","#5c3d96","#f32896","#95a496","#56b796","#969596","#e1a996","#cc4d96","#bd6796","#ebac96","#429696","#dace96","#3b3a96","#77b696","#d3d196","#e48596","#8a9996","#802796","#c4c096","#ed9696","#768696","#a94b96","#f15696","#c05e96","#8b4396","#99df96","#695796","#755d96","#90c096","#b7c996","#b7d996","#92dd96","#66c596","#3f9796","#97a596","#327596","#dc9a96","#356b96","#9dd096","#426f96","#902396","#bdc696","#4ac196","#3a9b96","#48a196","#d69596","#ce4f96","#dea796","#cb2296","#5f4396","#36c096","#5c9696","#96db96","#c06696","#d55396","#4fc896","#55b096","#ece396","#3d3796","#734496","#8eb996","#d4a596","#d6a196","#a64a96","#8fca96","#eca096","#9ab296","#8d6e96","#ec8196","#9b2a96","#7b6096","#df8596","#a22996","#6d5996","#649296","#837896","#327496","#f12f96","#7f4f96","#e1d696","#50c996","#5b8e96","#d7c296","#6d9796","#495896","#ea5d96","#b99896","#878796","#b59696","#bcbd96","#d72e96","#565596","#a08b96","#5bab96","#f33c96","#775896","#b57f96","#336c96","#3b2a96","#a4cf96","#4cce96","#79a596","#7a3196","#c64b96","#51b996","#a75b96","#d85b96","#a46596","#a56d96","#d9a896","#b89996","#7d8c96","#d8dc96","#d8a096","#c37c96","#5a7796","#ed3496","#98e296","#a26696","#c77596","#b73396","#91cd96","#e0c896","#60e496","#c07f96","#8f4496","#b59996","#654c96","#b25296","#9d2096","#38ad96","#477796","#9f8796","#f17896","#c16996","#526e96","#bb3f96","#324896","#e6b096","#54e296","#f49c96","#437096","#846596","#3a7e96","#52e496","#3b5e96","#c18696","#855596","#be6496","#f38696","#d63996","#666796","#39ca96","#e16d96","#732a96","#8d3296","#a7e396","#f03196","#b62d96","#616596","#357196","#6bc396","#7d6296","#842b96","#796a96","#6c5496","#508896","#683096","#ca6396","#647896","#963a96","#c3be96","#6c3396","#48d596","#ae2496","#32a196","#a1b496","#605296","#9cdd96","#5c2d96","#852296","#8e9496","#36ca96","#367596","#545896","#c8b596","#5e8596","#727496","#bde196","#6b6096","#bcbd96","#b7c096","#8b5096","#35de96","#f01e96","#bed396","#5b3496","#c25696","#8b2c96","#a5af96","#47d296","#5fbc96","#779196","#e3b096","#ad4896","#c65b96","#7c3c96","#c4a296","#9abe96","#6baf96","#cf6f96","#699096","#473796","#602396","#e34396","#7ec896","#8f4996","#71cf96","#6a7e96","#4e5f96","#f78596","#567596","#72ae96","#bb6696","#3b5e96","#6eb796","#582c96","#b78696","#753196","#d27f96","#cf9996","#665396","#d68896","#f4dc96","#321e96","#e5c496","#f9c396","#8c6d96","#56ce96","#a03d96","#bf8996","#f25396","#358c96","#e42696","#a32e96","#f89396","#ca6596","#9d4396","#ee8096","#cd6196","#869396","#658496","#7ac296","#3a8096","#604496","#5f3b96","#702096","#4aaf96","#f17496","#be2696","#eee096","#9de596","#932096","#6ce296","#a31f96","#e71e96","#998396","#397896","#58d196","#cb6396","#eec696","#a54296","#974596","#e32596","#87a996","#9a6296","#f68a96","#d64696","#448496","#b37696","#a09896","#5d4f96","#d84396","#4cda96","#919c96","#eba196","#899296","#7ab396","#5db696","#4c5196","#3f5d96","#ca9096","#7b4796","#3aba96","#4c8696","#558d96","#8cb796","#c0a996","#3b4796","#eec596","#51bc96","#434a96","#762b96","#5f7c96","#807396","#7c7396","#6edc96","#d83b96","#dd6896","#83b896","#a38b96","#8a8296","#993796","#d47196","#515c96","#a14196","#f1b696","#b9de96","#6fa296","#603b96","#499b96","#485896","#478796","#347396","#c99996","#4f4696","#a7b196","#484b96","#e0c996","#ec5496","#6ea496","#d49c96","#61c696","#b14096","#f29496","#9aa396","#f8a496","#ce3c96","#985196","#cb8796","#787c96","#f0b896","#c66b96","#ddad96","#9cd896","#a8d796","#99ad96","#bc6c96","#d65f96","#7ade96","#85ac96","#8ab696","#404096","#c43b96","#4aa096","#424a96","#452d96","#836c96","#f72996","#7fd396","#c6d496","#7e9396","#3d8b96","#3c5596","#c0ce96","#a53d96","#6e2c96","#5aa896","#569696","#9f3c96","#39b396","#54e096","#784396","#e83196","#bdd696","#f96b96","#44ae96","#f5d096","#616b96","#5edd96","#4e3196","#f96996","#f9bd96","#706f96","#cb6696","#dcd796","#cf7696","#6f3e96","#809a96","#f63b96","#b4cf96","#89e396","#935d96","#eede96","#6adb96","#b38096","#4c2196","#a88d96","#eb4096","#782096","#90b396","#935596","#e0a296","#4a5596","#d74596","#e55596","#ec9e96","#dfc696","#c09496","#3b8b96","#64de96","#f59d96","#40c796","#a24696","#eb4596","#d34f96","#8bba96","#873b96","#488d96","#9ab796","#dca796","#819396","#4a4896","#47e396","#399a96","#a86996","#ceb496","#747a96","#498496","#f8e196","#3a7496","#443896","#923e96","#f84096","#5c7e96","#bb4496","#83af96","#a86996","#9eb896","#983e96","#6e9496","#a37e96","#523896","#dd6796","#aa2a96","#757596","#854c96","#a37596","#612996","#93d596","#b0d796","#e7df96","#8a4d96","#8eb196","#b58496","#b94e96","#91aa96","#6d3896","#a4e296","#eb5f96","#782296","#4c3a96","#d4e096","#a69096","#376b96","#a19396","#5ad696","#ae7996","#b1ce96","#ec5a96","#479096","#743c96","#61c396","#e0a496","#b46296","#a6b296","#f73396","#589996","#5b4d96","#c21e96","#a59396","#d65e96","#5a5d96","#61b996","#cead96","#c5cb96","#402596","#672196","#3e9296","#915896","#be6396","#994e96","#db7596","#a25096","#ef9c96","#c26c96","#341f96","#6f4096","#aeac96","#70ab96","#bace96","#c92596","#8f4596","#419596","#e1e096","#b94f96","#f53096","#498996","#af9b96","#e72196","#a0b696","#913196","#888d96","#a3bc96","#9c9a96","#c6e296","#4b7596","#67ac96","#52d096","#5a2896","#ee6796","#a2c796","#e35c96","#b44f96","#857496","#749196","#c96596","#bdca96","#c39a96","#91c996","#94db96","#f09496","#689a96","#c6aa96","#d55496","#579b96","#84bf96","#452f96","#c4ba96","#e56e96","#ecdc96","#8d5c96","#52d996","#897d96","#e12396","#f09c96","#447b96","#434a96","#c68096","#73d896","#d98e96","#f92296","#499196","#42b096","#462596","#3b8b96","#4d6b96","#853496","#ca7496","#6f8196","#af6696","#9f7f96","#903196","#81bb96","#49ce96","#5a3f96","#5d5696","#956496","#528996","#6e2496","#a85796","#3b3296","#ea9d96","#d16a96","#ce4996","#94ce96","#df8c96","#aea396","#c09b96","#c68996","#a82a96","#7d8796","#927096","#757096","#57d696","#cf2b96","#614096","#5ea096","#b2ab96","#532896","#66c996","#6b6f96","#ec8596","#c22796","#627f96","#cf6896","#623d96","#d64896","#649e96","#73df96","#ef5796","#b16796","#b8b496","#7ac496","#adb896","#ea5b96","#f0cb96","#d1dd96","#89b396","#8d5e96","#a3ca96","#dda696","#802396","#bebe96","#e37e96","#f23496","#edb696","#627696","#d67596","#ef7096","#cdd796","#7ca796","#946596","#3a8496","#f22496","#8f7496","#7b3596","#db5996","#57a296","#9f9a96","#ce6896","#679596","#602096","#646a96","#5dd496","#bd2896","#c1ca96","#4d8696","#9ee196","#aa7496","#6f9996","#e86196","#687796","#e8d696","#5a4896","#bc7b96","#eadf96","#b2d496","#c65196","#414896","#e19496","#8bc596","#eedb96","#bde096","#f1bd96","#90c596","#ebd296","#427296","#dec596","#a37a96","#6f5996","#da8a96","#422e96","#9e9c96","#997e96","#b9cb96","#e33296","#dbc496","#6bd496","#3f6096","#663c96","#7bae96","#e8c296","#a73696","#9add96","#348496","#acc196","#bda796","#488f96","#dd6096","#f29896","#352296","#ea8396","#49df96","#e07596","#72a596","#acd196","#f8e196","#cfa496","#577b96","#587496","#b97196","#496096","#3ed296","#4a3f96","#781f96","#ac2896","#cc3696","#73db96","#754896","#c73c96","#c28896","#c48196","#4a7f96","#98e296","#3e4796","#c79496","#788c96","#945b96","#3e7c96","#e14b96","#5b6a96","#694296","#34b196","#51c696","#89d896","#596596","#c7e196","#b0c596","#d09696","#82d496","#decb96","#786e96","#9c8696","#848896","#674f96","#344996","#6ca796","#ce5096","#ada096","#c98c96","#908e96","#83e396","#eead96","#a62396","#81a996","#a0cf96","#581e96","#773896","#bd9996","#63d996","#e74496","#a38096","#488b96","#e3b996","#e79696","#832896","#428596","#b35096","#ee4496","#ea7d96","#af5c96","#764a96","#90b996","#ef9d96","#80d096","#bd4296","#5e1f96","#364796","#78d896","#a53296","#a59f96","#5cc396","#eeaf96","#f08796","#d3ca96","#42b696","#889996","#e12c96","#a17e96","#583e96","#e3bc96","#b89396","#d38696","#4ec596","#ac5996","#563196","#33a496","#925996","#b65f96","#95b496","#963196","#5ca696","#7d9f96","#324596","#f67b96","#9bc796","#988096","#db7996","#8baf96","#889c96","#527096","#e45496","#559496","#9b2c96","#886c96","#d49996","#60b696","#495c96","#db4296","#d3a596","#4fae96","#934896","#498296","#c6e596","#d19196","#534396","#f46f96","#e52196","#c1b896","#843596","#be5396","#adc396","#a35296","#dca696","#c95396","#a8c096","#7d3b96","#a67296","#bb7c96","#348496","#d6b296","#b35596","#b62796","#c6e196","#52d296","#465896","#c6de96","#8c2c96","#f87996","#53a896","#79ad96","#58df96","#3e8296","#8b2596","#92db96","#976196","#8d6b96","#846196","#5ae596","#55d196","#a7c696","#973596","#59c896","#5fa296","#739f96","#f12596","#c42196","#f62f96","#926e96","#ca7a96","#e85396","#922496","#8d5296","#86d096","#524596","#ba7496","#dd2396","#846796","#6a3b96","#9b2796","#bed296","#bead96","#982d96","#958496","#f64c96","#766096","#374496","#bec096","#657596","#c2c596","#ba8196","#783096","#9b5096","#515696","#d5e196","#8ab696","#8e9896","#ac9196","#88a296","#a08396","#a36c96","#a34996","#52c596","#d94e96","#af3596","#6ac996","#905a96","#f5d596","#63b696","#426796","#3ca596","#f79896","#f53296","#d0e496","#d88296","#352d96","#524096","#969496","#7f3a96","#ac6096","#f03f96","#6f7396","#9ecc96","#d6af96","#904096","#a72396","#dab996","#eac696","#75b196","#a47496","#c9bb96","#3f5096","#37a496","#6a2296","#c3d996","#b6de96","#595196","#6f3a96","#8aa296","#92c196","#ddc196","#98b196","#d28096","#3f5c96","#59e396","#50ab96","#f22b96","#907396","#92d596","#b6c596","#b93e96","#37c596","#5a7696","#906b96","#ae3096","#a1bd96","#f22a96","#dd7796","#8c2a96","#5ac296","#34d096","#9cc896","#bf3796","#d89296","#675896","#3cab96","#98e196","#916a96","#803996","#858e96","#4b7b96","#d6ac96","#6d9a96","#dd5796","#ee7196","#978896","#8ad696","#ee6196","#95a096","#715196","#53a796","#7bd796","#406196","#f8af96","#6a6496","#da2696","#4cdd96","#bc7c96","#ebc996","#6a3296","#a73096","#6cba96","#aa9596","#433e96","#ded596","#bba396","#4cbe96","#c61f96","#c63d96","#a86996","#446596","#752696","#a9b696","#9ae596","#602596","#ca9296","#417c96","#985b96","#3bb996","#d12196","#899e96","#7c7696","#433996","#499a96","#a1e196","#ea3496","#d09996","#c13e96","#d6c996","#a42696","#a6b896","#818996","#c47c96","#b8dd96","#3aba96","#75ca96","#c06f96","#dc6396","#8f6196","#be8e96","#697f96","#f15596","#9e4b96","#ef7d96","#5f5696","#4e4d96","#bcd396","#555896","#43c596","#b9ca96","#8d7b96","#b06f96","#554d96","#41c396","#83d796","#ec9696","#ebc296","#84ae96","#4b7196","#734f96","#7dc196","#3f6c96","#9a5096","#62ca96","#bc6e96","#5a3196","#ce5d96","#556c96","#f13396","#abb396","#6ba696","#ec9196","#9a4e96","#f0d296","#7d8396","#8d3b96","#d3d796","#d0aa96","#5edd96","#709b96","#de5896","#81d596","#889a96","#626f96","#59b796","#559896","#8c2696","#ac6896","#753696","#da2996","#ad6796","#c82c96","#de6d96","#8e5296","#e7c196","#7d7d96","#4d2896","#f8dd96","#7e7496","#d7c696","#cc9a96","#e59496","#cf5a96","#ef3e96","#5dcd96","#c2cd96","#9c7f96","#b03f96","#459296","#eb5d96","#bd3896","#f9dc96","#757e96","#905996","#e9c296","#874b96","#ed8196","#815296","#a29896","#6e6996","#889b96","#bac396","#9da196","#582396","#3e1f96","#6a6e96","#ae6596","#e27c96","#4e4996","#c36c96","#a44596","#3a6496","#952c96","#67b296","#8fcf96","#da4396","#609496","#3cd196","#b48c96","#38ad96","#75bc96","#804796","#8f9796","#c92696","#445a96","#d5a696","#77bd96","#aa4d96","#eb6496","#9d2296","#e4da96","#efba96","#9acb96","#b4cb96","#80b396","#64d996","#883c96","#67cc96","#c45696","#594d96","#8bcb96","#bcd796","#46d396","#3e7796","#414996","#32b096","#6c5d96","#cbe596","#d85296","#f0ce96","#b05a96","#90e096","#e3e596","#6b6c96","#976896","#5e3d96","#c5c196","#a59c96","#6b4596","#3f6a96","#80c796","#38bf96","#bfb796","#408496","#6fce96","#5f5196","#a44f96","#c37096","#957996","#3be596","#a67d96","#7b3896","#eadb96","#dad096","#d0b796","#76b896","#666596","#636d96","#ec4f96","#8b3796","#aa9096","#3fcf96","#8f8a96","#ced096","#4ed896","#6a2d96","#da5596","#b92596","#8f6796","#e58696","#e12496","#8f3d96","#8d9b96","#847d96","#ab4696","#ef5896","#a94c96","#35bd96","#946296","#bb3c96","#f55096","#ae2496","#662596","#89a196","#3f2296","#6aa096","#8b6296","#564f96","#815596","#5ed596","#464996","#e22996","#4c2b96","#c96996","#779996","#b03f96","#bb4396","#785f96","#725496","#4bdf96","#593c96","#3c4896","#7f4896","#b79b96","#f52696","#a02c96","#c8e596","#6e7196","#cd9696","#ec8b96","#c9bb96","#9f8696","#4c4796","#ba2096","#783496","#4d3796","#649f96","#814d96","#e52296","#5f2896","#b2cf96","#a5d496","#449196","#b5b096","#d4df96","#ae2d96","#49cb96","#972796","#b34196","#bf6596","#902496","#f8a196","#549d96","#6c9c96","#eec196","#374896","#534b96","#ed9796","#706a96","#f47196","#45c796","#bd3196","#40cb96","#a09896","#6a7b96","#3cdc96","#359596","#452e96","#cc9396","#f2b296","#636596","#c8a496","#e8c996","#ecb296","#86ab96","#796896","#378996","#566696","#e9dc96","#f4b896","#e5bf96","#ecde96","#455996","#cc7196","#c08096","#ae6296","#d0b196","#f38896","#858d96","#db3f96","#e13496","#bcd496","#a89296","#e9c996","#e7e396","#3d6d96","#f78196","#d1a896","#8a9296","#637d96","#94d296","#632296","#8c9b96","#3b9296","#66c996","#4f7996","#b5c296","#ef2a96","#358c96","#889e96","#589296","#88bb96","#8be096","#ad3b96","#d85d96","#ac5096","#8db296","#79ba96","#585596","#83c496","#e3a996","#345796","#ec8096","#cfbf96","#634796","#ea6e96","#4a6d96","#6b3f96","#5fbb96","#be8896","#3e9e96","#405b96","#876e96","#bb7796","#334a96","#8d4196","#be7096","#d0de96","#627496","#666796","#5e5696","#ab8396","#c4b796","#54a296","#f33696","#724296","#bb5d96","#594296","#a8df96","#d46e96","#42c396","#d3b096","#a8a796","#4ccc96","#f42196","#583e96","#ae9a96","#7b2a96","#ad6d96","#58b896","#46c796","#5e8696","#c73f96","#6e2a96","#3f5696","#ebd096","#536996","#3c8996","#9b8396","#98d296","#a6d896","#34a596","#e4a596","#e29196","#6a3596","#d4c496","#762296","#d58a96","#4cbe96","#3a4496","#3ad996","#3b6996","#f14896","#f7b296","#40b396","#cb9c96","#c92d96","#53d796","#e36296","#633496","#726896","#506696","#6e7496","#66b096","#422996","#c05496","#7c4996","#3bc096","#a03c96","#564696","#8e2696","#63ae96","#7b7296","#ef4796","#d79e96","#ef9896","#c75296","#997096","#5e2496","#d96996","#6fc296","#908996","#ee7196","#e19796","#418096","#355196","#ad5b96","#868896","#3f6696","#da9996","#bfc596","#ccb696","#d16696","#468d96","#f3d296","#f15796","#40ce96","#b67f96","#d15996","#60aa96","#efd196","#72d596","#bd5896","#754e96","#b38696","#f05796","#e8cb96","#9e8b96","#919796","#f87c96","#88ab96","#dfa396","#3f3796","#52af96","#919f96","#97b296","#905d96","#cead96","#f29896","#682896","#bb5b96","#e83c96","#51bf96","#528f96","#b3d696","#f0d196","#433696","#a0d796","#f75796","#7aca96","#495e96","#5d6e96","#99e396","#d4d196","#b38696","#44a996","#868a96","#38c396","#592296","#51c296","#d93f96","#542596","#5c7e96","#783596","#627296","#a06496","#e16096","#c07296","#f35e96","#704296","#75d796","#b52196","#af9c96","#d6b796","#74e196","#60c096","#eeb496","#c4bd96","#829196","#8f7996","#6dca96","#58ae96","#76dd96","#9e2496","#f55a96","#dac896","#a54696","#7d8096","#3c8096","#acc796","#d99c96","#48cd96","#489a96","#6a8a96","#ca3896","#ea9996","#78de96","#968296","#d83896","#7d4996","#bba196","#93c896","#7ac096","#386696","#594e96","#d25c96","#577496","#f1ae96","#f11f96","#62ca96","#f97d96","#65a896","#62ad96","#96d296","#53a296","#bbcf96","#f57496","#df8696","#63e596","#6ab496","#a09396","#f5b296","#bc7d96","#7fd796","#4f4f96","#b06e96","#da7996","#e4d996","#b35096","#90da96","#bcb096","#f33d96","#3abd96","#c2dd96","#c89f96","#56b096","#a74296","#b17b96","#e2dd96","#3da596","#4a5a96","#c4de96","#749996","#e35d96","#5dac96","#5e8e96","#35c996","#f2a896","#8f6296","#3b7196","#cf2296","#f36c96","#70a196","#43cc96","#c5aa96","#ee3f96","#c22a96","#d6b596","#eb8e96","#8ebc96","#cf7996","#b8aa96","#af6896","#d74e96","#413796","#3c2a96","#61cd96","#d7c696","#36aa96","#3a5396","#edb996","#f0aa96","#c84e96","#aab296","#4b2596","#b7be96","#5b5f96","#a69096","#5b5196","#a47c96","#e58896","#f9c296","#8acf96","#bcdb96","#696896","#6bc096","#7b8f96","#d04196","#b32796","#3fdc96","#4ab796","#383796","#c2d496","#774696","#6fa796","#ae3196","#60c996","#c03496","#c93596","#bbc496","#7b5796","#869c96","#afd996","#6eb196","#4d9796","#e63396","#da7096","#928c96","#804296","#837d96","#884a96","#cf6096","#332996","#de5f96","#b4c096","#4c3b96","#953596","#d42496","#e3d296","#df3496","#cbbc96","#c06696","#56c396","#d5bc96","#8fae96","#423d96","#a25796","#ed8a96","#c77496","#bc9e96","#8b2f96","#36d896","#d47596","#e17c96","#9f9296","#954496","#9cd196","#b03f96","#8d8296","#e5d096","#cdac96","#889496","#dc8f96","#e04e96","#896596","#92a896","#90b596","#77a696","#3ade96","#936d96","#94d296","#63a396","#726696","#508f96","#f47e96","#3c6c96","#bdad96","#ce4b96","#bddd96","#387596","#a59a96","#c46296","#ca5a96","#573896","#e74796","#7ca296","#958d96","#503796","#6c4596","#57e196","#a58196","#c75196","#8b6396","#deb296","#51e096","#9dd796","#e1ca96","#626f96","#585b96","#996696","#c63396","#5cbd96","#7f3796","#d79896","#4f9496","#e18d96","#892296","#e6c496","#c39e96","#78ad96","#f36796","#9fb096","#625a96","#956796","#504a96","#c9c496","#eace96","#a37596","#b18e96","#5c2b96","#3fb996","#7f2c96","#c05596","#3f6896","#756396","#c08696","#98e496","#60bc96","#ab7596","#70dd96","#626196","#aea496","#785596","#8a7c96","#c99a96","#d56b96","#f3c896","#5dd496","#7e3f96","#6aad96","#b58b96","#799496","#e62196","#dfc596","#442f96","#9eb296","#9b7496","#d72096","#725496","#933496","#e78696","#5d7996","#5ddc96","#635096","#567296","#63b396","#ea3696","#c2e196","#983696","#a47496","#412a96","#e89a96","#6c4896","#ec5896","#616f96","#42bb96","#978296","#c6db96","#555096","#4c3696","#5ea396","#f1d396","#a17596","#4fbc96","#356696","#ba6c96","#49dd96","#6cab96","#792e96","#8f2b96","#6cc996","#c1b896","#ee1f96","#823696","#651e96","#3fb396","#9c6b96","#445d96","#e84596","#e35596","#879496","#48ae96","#726596","#bf2396","#be6196","#645296","#32ae96","#e17496","#455396","#7ed396","#cd2796","#d87896","#c16596","#d92696","#bfd896","#d64496","#5c2a96","#cdc896","#d8d096","#545e96","#448996","#be9f96","#41a096","#bcde96","#778a96","#745696","#bc2b96","#5d2896","#4fb196","#e58f96","#43cc96","#89b196","#ed9b96","#db3b96","#b96896","#d48496","#916a96","#a19c96","#64a196","#c68696","#efbe96","#d77796","#a35596","#877f96","#52c796","#cf6a96","#685496","#e63596","#f9a296","#a98196","#3ee596","#b95896","#778296","#89cf96","#ad5b96","#af8896","#4c5696","#9b9396","#8c5096","#f18896","#e74496","#ed2a96","#342096","#f72f96","#f99396","#3a8c96","#9e4996","#cd3e96","#e4d896","#8cb696","#50b496","#7b3496","#892296","#afad96","#c28c96","#729e96","#e2af96","#c23f96","#a94296","#7b3c96","#76a896","#542396","#7cd696","#701f96","#e54e96","#b13396","#60a196","#99b496","#f22b96","#923996","#a5a196","#e66296","#3a6896","#368496","#ed5196","#65a396","#86c596","#afd396","#87c096","#e9b996","#8e7596","#844696","#b3dd96","#e78e96","#d8c096","#623196","#686796","#dd8d96","#bd4596","#d1cf96","#b14b96","#664f96","#94c896","#f9cb96","#c38996","#61d996","#e3db96","#3e3396","#68c896","#688c96","#896196","#64d496","#3eb096","#884996","#4db496","#bc5196","#5e8196","#636796","#deaf96","#cc6f96","#7dd496","#459696","#7f5996","#75d996","#654396","#c0dd96","#dce596","#72bd96","#b05f96","#3e8296","#638c96","#e13096","#c48596","#46e296","#9ebf96","#4bd896","#436296","#c94096","#ba5e96","#8e8096","#61d296","#3c4196","#7e4496","#35a096","#4e5496","#f93c96","#3be196","#3b2796","#be3196","#d97796","#5d6296","#4a8e96","#aaa596","#e99396","#79a396","#be7596","#5e2596","#62d196","#535f96","#d22c96","#b22896","#f5e596","#867a96","#74cc96","#a5b596","#836896","#846f96","#ea8a96","#9c6596","#f6af96","#824e96","#365096","#f92196","#cd4096","#bbdc96","#6d6b96","#527e96","#4ab196","#857b96","#c23296","#63a596","#8abb96","#9bdd96","#432996","#aa8c96","#531e96","#b16b96","#f87f96","#73d596","#619596","#55e296","#822396","#727396","#cd5d96","#ae4896","#815e96","#323b96","#ba6196","#a49a96","#333c96","#95c196","#9c4196","#945396","#37cf96","#719796","#a93896","#c6be96","#793296","#6bd196","#92ca96","#c2a396","#37df96","#4cac96","#4f2c96","#b1b196","#ad9196","#acce96","#cda096","#e9c896","#959996","#cfcd96","#cedf96","#c56f96","#e18c96","#456496","#53df96","#afcc96","#c4d896","#5e3f96","#c25396","#59ac96","#c06396","#7b5296","#f2e196","#dccd96","#d33c96","#338996","#519096","#969b96","#d86496","#a26296","#95c596","#7eb796","#6f8296","#c92c96","#6e8f96","#995296","#e94a96","#ee3796","#c19e96","#f41f96","#ceac96","#83a296","#77dd96","#949d96","#54df96","#6d6096","#db2896","#f0a196","#966796","#91d596","#e29896","#79a096","#39cf96","#b7e296","#521e96","#92c296","#a86f96","#bfbd96","#de9496","#4da496","#f47696","#4b2996","#ce8696","#485796","#ee4c96","#bb5296","#884e96","#965796","#bbcb96","#d85396","#de5496","#896396","#c9c796","#508d96","#697f96","#4ad396","#975f96","#bf8f96","#d8dc96","#845a96","#58a096","#f34e96","#ae9596","#869796","#b49896","#b96096","#d16496","#b82696","#d1be96","#7ddc96","#6e2896","#563696","#5edc96","#f83896","#674a96","#604696","#428796","#c94696","#6a4396","#ac8a96","#cf6596","#869696","#cc5696","#543f96","#458596","#882a96","#40b396","#f0e296","#344596","#8d6e96","#f63e96","#572296","#463f96","#a54096","#5aaf96","#f42a96","#8eb096","#917596","#374396","#856496","#c09696","#565596","#33dc96","#e27e96","#9dcd96","#463796","#dc4196","#9e9a96","#94bb96","#3fb096","#bfa696","#422496","#957296","#9b6096","#ae2b96","#b53996","#708296","#7f9596","#484496","#8e8596","#b65996","#ccb296","#bad296","#b0a796","#eece96","#d29e96","#c66896","#e19296","#e98696","#bb6196","#d72796","#72b196","#744296","#38e096","#703e96","#c4de96","#c82f96","#3f5796","#7c2096","#72b196","#68bb96","#973396","#857d96","#95b696","#94d396","#e58496","#479496","#e55996","#722c96","#43b096","#5f5196","#5ac396","#954b96","#717996","#9e5f96","#dc3a96","#e42c96","#ee8d96","#485b96","#4f2e96","#9cdc96","#3fc796","#c42796","#cf6196","#917696","#a44996","#d42496","#eaca96","#6d4596","#e0ca96","#697c96","#af9496","#ac2c96","#684a96","#c58c96","#525c96","#d57d96","#8d5096","#6f9796","#d67e96","#a97396","#9e2f96","#8d5f96","#a9ce96","#a5aa96","#582496","#6d2f96","#9d6296","#75c896","#dba296","#e4c396","#a56c96","#dcdf96","#3ada96","#f63296","#d8ca96","#e22596","#516496","#515d96","#98a396","#98d696","#4d8496","#63d296","#777896","#4f8196","#8d6796","#aca596","#e83796","#e64196","#89de96","#cab596","#7bae96","#429196","#f6a896","#869096","#c6b196","#c67896","#8cd396","#e4c896","#a76f96","#394096","#61c296","#82a596","#c58196","#b22d96","#6a8396","#972496","#b77696","#b7b796","#778596","#3c1e96","#7a3b96","#e35596","#f6cf96","#c2df96","#e16596","#c17696","#7d5e96","#d12f96","#a4e496","#cf6d96","#a06596","#769d96","#d37296","#d8a596","#605d96","#755b96","#bce196","#a88396","#c06496","#334b96","#728f96","#f95a96","#ce2c96","#e99c96","#6c3296","#c78a96","#835096","#5ba796","#ee3296","#c13196","#4d7196","#5f7096","#628896","#da7196","#b38196","#ee5696","#e06c96","#d84696","#a5df96","#ac2996","#bf5196","#5b3496","#987196","#324896","#665b96","#c4dc96","#ec2e96","#f57a96","#8a2e96","#becd96","#b58b96","#a6bb96","#526d96","#7c2996","#c65396","#dc7096","#d12d96","#3ae496","#4b8996","#433196","#9a9e96","#f03496","#c3b796","#e5b196","#82e596","#65bf96","#4f9296","#d38496","#6e2096","#488b96","#5bd296","#bb6196","#ab2f96","#f5be96","#d7ba96","#3eba96","#8b9f96","#f32996","#384196","#4b3296","#8e5096","#d24596","#7ab196","#7a6996","#c25596","#843496","#b3a596","#798d96","#82a596","#a8a896","#337a96","#bdbd96","#e05496","#e56996","#94e596","#d1b296","#cf7596","#803b96","#e25396","#77b596","#40ad96","#8fa396","#acd596","#d3c796","#aa9996","#f6a196","#513b96","#ce8196","#704196","#d6e096","#bd8596","#ecb696","#de5c96","#e91f96","#a3a996","#cba196","#c67f96","#899a96","#8dbe96","#662696","#6ac796","#8ed696","#354d96","#cf5a96","#bec696","#e94996","#bfa896","#4f2f96","#645296","#e2ce96","#949196","#b08b96","#b7b396","#997c96","#d08496","#37d196","#80e496","#8bb896","#e9a696","#e4ae96","#bc8796","#5e8796","#4a2096","#656c96","#97ab96","#9ead96","#c79596","#327f96","#ae7796","#532f96","#ef8896","#c33996","#64c596","#ee8196","#32e196","#3aa196","#aa3296","#e18296","#5d9a96","#e6a196","#64d796","#726c96","#de2d96","#55b496","#e96896","#477096","#a32296","#7c4796","#408496","#9c6c96","#aa6f96","#53b096","#cf5d96","#40b896","#846396","#e67696","#e25696","#49e096","#8a5c96","#66df96","#558b96","#f92f96","#a24696","#b56996","#6fa496","#32dc96","#7d6696","#9e4496","#68c296","#6b9496","#899696","#b07196","#835e96","#dbae96","#77c296","#dd2b96","#9d8f96","#57dd96","#f37f96","#e38296","#db8096","#919396","#bb3f96","#eba196","#692896","#87d196","#b0c896","#d54296","#e59796","#ad4996","#e1a196","#e69996","#426c96","#925596","#493f96","#ea6596","#571e96","#d88896","#da3896","#512796","#8f3f96","#d14596","#989e96","#5f5696","#50cb96","#cb2096","#4ad696","#b39b96","#58d596","#735896","#d72c96","#6cdc96","#833896","#64c096","#5abd96","#362896","#c25996","#88e396","#c05596","#eebe96","#a2a696","#42d596","#3e2896","#bc4b96","#3bc996","#ea8796","#32a896","#7da896","#c8b296","#b7a096","#32b796","#a98996","#d84696","#e99c96","#ef5796","#f92196","#798196","#77c296","#f6ab96","#acb596","#d8b796","#9b9896","#442596","#345696","#e7d496","#52d596","#5eb596","#b49996","#78ba96","#b9d696","#c68296","#686b96","#65e096","#7f5c96","#afb596","#cf1e96","#b23296","#807996","#3a2996","#484d96","#b46896","#dbb096","#e18f96","#f1dd96","#c69d96","#b42c96","#f29b96","#b53c96","#789696","#626696","#4db896","#725d96","#f8e296","#d0d196","#b5e196","#95c496","#e8d896","#832296","#85d096","#e3d896","#47b896","#d9bf96","#556696","#83b696","#7e5096","#a36896","#e43496","#53d096","#eac196","#8fca96","#3c6a96","#eeb796","#f32e96","#337596","#909396","#ce4d96","#5b2896","#a8c996","#5e1f96","#968496","#e07d96","#76d596","#703b96","#a8b896","#5fdf96","#55c796","#929d96","#758696","#aaba96","#c23496","#675996","#b94096","#dd2d96","#5a4396","#c6ba96","#d72c96","#c9de96","#b8c296","#dc6f96","#792196","#d9d296","#f94796","#80ce96","#acce96","#907696","#76c096","#cd6696","#a23796","#6cd496","#946b96","#638896","#57a196","#748496","#b41f96","#84a296","#509a96","#c5a796","#3b4996","#70dc96","#dbc196","#4d5296","#4a2296","#aad996","#60cd96","#dca496","#a44f96","#e97696","#d0be96","#b38496","#cde296","#88d296","#5f2096","#5a5696","#4edd96","#cbb396","#595a96","#b3a596","#afdf96","#894196","#a5db96","#a09a96","#6e9496","#c3c896","#92e196","#865896","#56af96","#3d9696","#4dd596","#eb3596","#ab4796","#f19396","#614796"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}}},"id":"49134201-2c63-4b3b-91f9-c1846ff5061a","type":"ColumnDataSource"}],"root_ids":["fae24f8d-80d9-46ea-8246-9d6e86c388f4"]},"title":"Bokeh Application","version":"0.12.13"}}';
                  var render_items = [{"docid":"74dae44a-f2cd-49fd-9d6e-352bd4ac8605","elementid":"9fae904d-670c-4575-96f2-b4a0494f5205","modelid":"fae24f8d-80d9-46ea-8246-9d6e86c388f4"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.13.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.13.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.13.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.13.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.13.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.13.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();