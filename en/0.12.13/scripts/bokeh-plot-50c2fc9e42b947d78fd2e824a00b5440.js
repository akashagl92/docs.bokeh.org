(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("58a2775b-cf48-4ef9-a6e7-1bf2b463eee7");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '58a2775b-cf48-4ef9-a6e7-1bf2b463eee7' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.13.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.13.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.13.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.13.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "MyFormatter": require("custom/bk_script_466629d5697845ceb42556beea3046f7.my_formatter").MyFormatter,
          "Custom": require("custom/bk_script_4fb461e8df454326ae873272661da418.custom").Custom,
          "IonRangeSlider": require("custom/bk_script_7c6336ebdd3c4188810b13b02e106dda.ion_range_slider").IonRangeSlider,
          "Surface3d": require("custom/bk_script_d3db61d368bd4a4b9a4b2baf689d5b43.surface3d").Surface3d,
          "DrawTool": require("custom/bk_script_d4f1dea1b0f74c799e098760aa3064b5.draw_tool").DrawTool,
          "LatexLabel": require("custom/bk_script_df57e6d13ff744c395282f69bdb1d1d0.latex_label").LatexLabel
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_466629d5697845ceb42556beea3046f7.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
          
          },
          "custom/bk_script_4fb461e8df454326ae873272661da418.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
          
          },
          "custom/bk_script_7c6336ebdd3c4188810b13b02e106dda.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // Backbone Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
          
          },
          "custom/bk_script_d3db61d368bd4a4b9a4b2baf689d5b43.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model. Currently
          // Bokeh models and views are based on BackBone. More information about
          // using Backbone can be found here:
          //     http://backbonejs.org/
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``,
          // corresponding to our
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // Backbone Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set Backbone listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript Backbone model sublcass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
          
          },
          "custom/bk_script_d4f1dea1b0f74c799e098760aa3064b5.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (_a = e.bokeh, sx = _a.sx, sy = _a.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
                  var _a;
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
          
          },
          "custom/bk_script_df57e6d13ff744c395282f69bdb1d1d0.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
          
          }
          }, "custom/main");
          ;
          });
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"dc2c1678-75a1-471c-8c3c-f6506b704ec0":{"roots":{"references":[{"attributes":{},"id":"3ec79a45-c124-49fc-83d8-a0a419eb278b","type":"BasicTickFormatter"},{"attributes":{},"id":"e3fcdc55-99f8-4e18-996f-145361fe5033","type":"LinearScale"},{"attributes":{"data_source":{"id":"71ef7b3a-3140-4c15-b6c3-59f3915bdbfa","type":"ColumnDataSource"},"glyph":{"id":"d313b3d6-20c6-4cc2-9a78-0ef4b8696698","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"2cf6fb44-1dde-47ee-bdb4-8181e6a6c8a4","type":"Circle"},"selection_glyph":null,"view":{"id":"3fea36e4-8576-4ded-8285-cfd84e73a286","type":"CDSView"}},"id":"7e456aa4-05ed-41e7-b5c4-05e673de58bf","type":"GlyphRenderer"},{"attributes":{},"id":"1c64e02b-7bf6-4fc9-a4f6-005aba09e6ac","type":"LinearScale"},{"attributes":{"source":{"id":"71ef7b3a-3140-4c15-b6c3-59f3915bdbfa","type":"ColumnDataSource"}},"id":"3fea36e4-8576-4ded-8285-cfd84e73a286","type":"CDSView"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"62317cc9-e041-4304-9818-fa3612110207","type":"BoxAnnotation"},{"attributes":{},"id":"afaa4605-5a2f-43c7-bf4c-4bce671225e2","type":"PanTool"},{"attributes":{},"id":"180d0964-3dac-4d92-acd4-613ea7c781c8","type":"SaveTool"},{"attributes":{"callback":null,"column_names":["index","x","y","y_mean","y_std","y_sem","lower","upper"],"data":{"index":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1476,1477,1478,1479,1480,1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631,1632,1633,1634,1635,1636,1637,1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671,1672,1673,1674,1675,1676,1677,1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1716,1717,1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751,1752,1753,1754,1755,1756,1757,1758,1759,1760,1761,1762,1763,1764,1765,1766,1767,1768,1769,1770,1771,1772,1773,1774,1775,1776,1777,1778,1779,1780,1781,1782,1783,1784,1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812,1813,1814,1815,1816,1817,1818,1819,1820,1821,1822,1823,1824,1825,1826,1827,1828,1829,1830,1831,1832,1833,1834,1835,1836,1837,1838,1839,1840,1841,1842,1843,1844,1845,1846,1847,1848,1849,1850,1851,1852,1853,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1868,1869,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1891,1892,1893,1894,1895,1896,1897,1898,1899,1900,1901,1902,1903,1904,1905,1906,1907,1908,1909,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1920,1921,1922,1923,1924,1925,1926,1927,1928,1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119,2120,2121,2122,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2135,2136,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2147,2148,2149,2150,2151,2152,2153,2154,2155,2156,2157,2158,2159,2160,2161,2162,2163,2164,2165,2166,2167,2168,2169,2170,2171,2172,2173,2174,2175,2176,2177,2178,2179,2180,2181,2182,2183,2184,2185,2186,2187,2188,2189,2190,2191,2192,2193,2194,2195,2196,2197,2198,2199,2200,2201,2202,2203,2204,2205,2206,2207,2208,2209,2210,2211,2212,2213,2214,2215,2216,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,2228,2229,2230,2231,2232,2233,2234,2235,2236,2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2248,2249,2250,2251,2252,2253,2254,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2266,2267,2268,2269,2270,2271,2272,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2283,2284,2285,2286,2287,2288,2289,2290,2291,2292,2293,2294,2295,2296,2297,2298,2299,2300,2301,2302,2303,2304,2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2361,2362,2363,2364,2365,2366,2367,2368,2369,2370,2371,2372,2373,2374,2375,2376,2377,2378,2379,2380,2381,2382,2383,2384,2385,2386,2387,2388,2389,2390,2391,2392,2393,2394,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2406,2407,2408,2409,2410,2411,2412,2413,2414,2415,2416,2417,2418,2419,2420,2421,2422,2423,2424,2425,2426,2427,2428,2429,2430,2431,2432,2433,2434,2435,2436,2437,2438,2439,2440,2441,2442,2443,2444,2445,2446,2447,2448,2449,2450,2451,2452,2453,2454,2455,2456,2457,2458,2459,2460,2461,2462,2463,2464,2465,2466,2467,2468,2469,2470,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2489,2490,2491,2492,2493,2494,2495,2496,2497,2498,2499],"lower":{"__ndarray__":"","dtype":"float64","shape":[2500]},"upper":{"__ndarray__":"","dtype":"float64","shape":[2500]},"x":{"__ndarray__":"","dtype":"float64","shape":[2500]},"y":{"__ndarray__":"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","dtype":"float64","shape":[2500]},"y_mean":{"__ndarray__":"","dtype":"float64","shape":[2500]},"y_sem":{"__ndarray__":"","dtype":"float64","shape":[2500]},"y_std":{"__ndarray__":"","dtype":"float64","shape":[2500]}}},"id":"71ef7b3a-3140-4c15-b6c3-59f3915bdbfa","type":"ColumnDataSource"},{"attributes":{"callback":null},"id":"c5f3563a-c4f2-4cbd-8690-9226a7149013","type":"DataRange1d"},{"attributes":{"plot":null,"text":"Rolling Standard Deviation"},"id":"d2effca8-77a9-4a11-8c8b-5e04a0e37b80","type":"Title"},{"attributes":{"below":[{"id":"8ba06c12-f452-4e5a-a6d5-0410509c6145","type":"LinearAxis"}],"left":[{"id":"153d85f7-7e8e-4f2e-9f47-dcc373a0acc1","type":"LinearAxis"}],"renderers":[{"id":"8ba06c12-f452-4e5a-a6d5-0410509c6145","type":"LinearAxis"},{"id":"2e3b4e95-c2b8-46af-90ab-abfd33e832b8","type":"Grid"},{"id":"153d85f7-7e8e-4f2e-9f47-dcc373a0acc1","type":"LinearAxis"},{"id":"a7eb4476-42ef-4d2d-819c-fa0225c2059c","type":"Grid"},{"id":"62317cc9-e041-4304-9818-fa3612110207","type":"BoxAnnotation"},{"id":"7e456aa4-05ed-41e7-b5c4-05e673de58bf","type":"GlyphRenderer"},{"id":"0ad3c759-d23c-4ef2-8f14-0a73600755a4","type":"Band"}],"title":{"id":"d2effca8-77a9-4a11-8c8b-5e04a0e37b80","type":"Title"},"toolbar":{"id":"6fcb6a15-a787-4eb4-9776-25f2bfb1583d","type":"Toolbar"},"x_range":{"id":"d9424120-484e-4a68-90c9-230b44c7128e","type":"DataRange1d"},"x_scale":{"id":"e3fcdc55-99f8-4e18-996f-145361fe5033","type":"LinearScale"},"y_range":{"id":"c5f3563a-c4f2-4cbd-8690-9226a7149013","type":"DataRange1d"},"y_scale":{"id":"1c64e02b-7bf6-4fc9-a4f6-005aba09e6ac","type":"LinearScale"}},"id":"e1e17713-d43b-4adb-8d42-3a0944d238d5","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"b61d2f31-65fc-44c0-a235-6a420d1fb1a0","type":"BasicTickFormatter"},{"attributes":{},"id":"a1da9059-185a-4a3b-ab20-c246ff6ec684","type":"WheelZoomTool"},{"attributes":{"overlay":{"id":"62317cc9-e041-4304-9818-fa3612110207","type":"BoxAnnotation"}},"id":"83983c27-bd78-4b31-8cea-cc8330702cab","type":"BoxZoomTool"},{"attributes":{"base":{"field":"x","units":"data"},"fill_alpha":{"value":1.0},"level":"underlay","line_color":{"value":"black"},"lower":{"field":"lower","units":"data"},"plot":{"id":"e1e17713-d43b-4adb-8d42-3a0944d238d5","subtype":"Figure","type":"Plot"},"source":{"id":"71ef7b3a-3140-4c15-b6c3-59f3915bdbfa","type":"ColumnDataSource"},"upper":{"field":"upper","units":"data"}},"id":"0ad3c759-d23c-4ef2-8f14-0a73600755a4","type":"Band"},{"attributes":{},"id":"3fa25e0c-7efe-4c2b-8c95-7909f1c70366","type":"ResetTool"},{"attributes":{"fill_alpha":{"value":0.3},"fill_color":{"value":"#1f77b4"},"line_color":{"value":null},"size":{"units":"screen","value":5},"x":{"field":"x"},"y":{"field":"y"}},"id":"d313b3d6-20c6-4cc2-9a78-0ef4b8696698","type":"Circle"},{"attributes":{"callback":null},"id":"d9424120-484e-4a68-90c9-230b44c7128e","type":"DataRange1d"},{"attributes":{},"id":"dfbb06ec-bab0-4f10-9e31-d30bdabd0ce6","type":"BasicTicker"},{"attributes":{"grid_line_color":{"value":null},"plot":{"id":"e1e17713-d43b-4adb-8d42-3a0944d238d5","subtype":"Figure","type":"Plot"},"ticker":{"id":"27853dbb-ee69-4e2e-a759-466819ddd44d","type":"BasicTicker"}},"id":"2e3b4e95-c2b8-46af-90ab-abfd33e832b8","type":"Grid"},{"attributes":{"axis_label":"X","formatter":{"id":"3ec79a45-c124-49fc-83d8-a0a419eb278b","type":"BasicTickFormatter"},"plot":{"id":"e1e17713-d43b-4adb-8d42-3a0944d238d5","subtype":"Figure","type":"Plot"},"ticker":{"id":"27853dbb-ee69-4e2e-a759-466819ddd44d","type":"BasicTicker"}},"id":"8ba06c12-f452-4e5a-a6d5-0410509c6145","type":"LinearAxis"},{"attributes":{"dimension":1,"grid_line_alpha":{"value":0.5},"plot":{"id":"e1e17713-d43b-4adb-8d42-3a0944d238d5","subtype":"Figure","type":"Plot"},"ticker":{"id":"dfbb06ec-bab0-4f10-9e31-d30bdabd0ce6","type":"BasicTicker"}},"id":"a7eb4476-42ef-4d2d-819c-fa0225c2059c","type":"Grid"},{"attributes":{"axis_label":"Y","formatter":{"id":"b61d2f31-65fc-44c0-a235-6a420d1fb1a0","type":"BasicTickFormatter"},"plot":{"id":"e1e17713-d43b-4adb-8d42-3a0944d238d5","subtype":"Figure","type":"Plot"},"ticker":{"id":"dfbb06ec-bab0-4f10-9e31-d30bdabd0ce6","type":"BasicTicker"}},"id":"153d85f7-7e8e-4f2e-9f47-dcc373a0acc1","type":"LinearAxis"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"afaa4605-5a2f-43c7-bf4c-4bce671225e2","type":"PanTool"},{"id":"a1da9059-185a-4a3b-ab20-c246ff6ec684","type":"WheelZoomTool"},{"id":"83983c27-bd78-4b31-8cea-cc8330702cab","type":"BoxZoomTool"},{"id":"3fa25e0c-7efe-4c2b-8c95-7909f1c70366","type":"ResetTool"},{"id":"180d0964-3dac-4d92-acd4-613ea7c781c8","type":"SaveTool"}]},"id":"6fcb6a15-a787-4eb4-9776-25f2bfb1583d","type":"Toolbar"},{"attributes":{},"id":"27853dbb-ee69-4e2e-a759-466819ddd44d","type":"BasicTicker"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"size":{"units":"screen","value":5},"x":{"field":"x"},"y":{"field":"y"}},"id":"2cf6fb44-1dde-47ee-bdb4-8181e6a6c8a4","type":"Circle"}],"root_ids":["e1e17713-d43b-4adb-8d42-3a0944d238d5"]},"title":"Bokeh Application","version":"0.12.13"}}';
                  var render_items = [{"docid":"dc2c1678-75a1-471c-8c3c-f6506b704ec0","elementid":"58a2775b-cf48-4ef9-a6e7-1bf2b463eee7","modelid":"e1e17713-d43b-4adb-8d42-3a0944d238d5"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.13.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.13.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.13.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.13.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.13.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.13.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();