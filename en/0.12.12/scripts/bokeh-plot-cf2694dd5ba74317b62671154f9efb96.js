(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("b8c3a4da-1057-41a8-a833-da649ea94b06");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid 'b8c3a4da-1057-41a8-a833-da649ea94b06' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.12.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.12.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.12.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.12.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "LatexLabel": require("custom/bk_script_1d29982a64c2449197edd0c310ea1f8f.latex_label").LatexLabel,
          "IonRangeSlider": require("custom/bk_script_366ddc1f18614c4cb4800343ca94a483.ion_range_slider").IonRangeSlider,
          "Surface3d": require("custom/bk_script_727d6e5c55ab42138c0ae3c822d6ef13.surface3d").Surface3d,
          "Custom": require("custom/bk_script_b9b373abe18c43ea907e9a740dc99a95.custom").Custom,
          "MyFormatter": require("custom/bk_script_cf3005b13ac34287ae4cb92e0b65d530.my_formatter").MyFormatter,
          "DrawTool": require("custom/bk_script_dd4c377015034ab187503a36d9264b7f.draw_tool").DrawTool
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_1d29982a64c2449197edd0c310ea1f8f.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
          
          },
          "custom/bk_script_366ddc1f18614c4cb4800343ca94a483.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // Backbone Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
          
          },
          "custom/bk_script_727d6e5c55ab42138c0ae3c822d6ef13.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model. Currently
          // Bokeh models and views are based on BackBone. More information about
          // using Backbone can be found here:
          //     http://backbonejs.org/
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``,
          // corresponding to our
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // Backbone Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set Backbone listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript Backbone model sublcass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
          
          },
          "custom/bk_script_b9b373abe18c43ea907e9a740dc99a95.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
          
          },
          "custom/bk_script_cf3005b13ac34287ae4cb92e0b65d530.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
          
          },
          "custom/bk_script_dd4c377015034ab187503a36d9264b7f.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (_a = e.bokeh, sx = _a.sx, sy = _a.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
                  var _a;
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
          
          }
          }, "custom/main");
          ;
          });
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"c54e6a16-8e4b-4f9d-8417-4797e0b6cf55":{"roots":{"references":[{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"21c902e6-ebc5-47ca-af25-0c7db25d2fe1","type":"PanTool"},{"id":"4781479d-79b9-45c2-94ac-af660d019a71","type":"WheelZoomTool"},{"id":"6fbb1553-b5c2-45be-87e9-48df72195b1f","type":"ZoomInTool"},{"id":"4b200948-29fd-4a09-9c78-6a53fcd2a91b","type":"ZoomOutTool"},{"id":"e7eb2953-cd99-452a-a9a6-512e56ca2e2e","type":"ResetTool"}]},"id":"0445ba96-dde2-4a7e-a736-b6ba00dcad41","type":"Toolbar"},{"attributes":{},"id":"eb679563-8388-48ba-9dbc-ab3aa63710d7","type":"BasicTickFormatter"},{"attributes":{"button_type":"success","callback":null,"icon":null,"js_event_callbacks":{"button_click":[{"id":"bd55f757-db13-4a38-8d9c-7b1a913540ac","type":"CustomJS"}]}},"id":"4c44c037-fa1d-4c61-aeb1-6bd2b678a9da","type":"Button"},{"attributes":{"children":[{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}],"width":1000},"id":"0694e180-7f78-4e61-9679-f074a8297ae7","type":"WidgetBox"},{"attributes":{"width":1000},"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"},{"attributes":{"children":[{"id":"4c44c037-fa1d-4c61-aeb1-6bd2b678a9da","type":"Button"}]},"id":"679ef5ba-3de7-4783-98e4-e357a7cda199","type":"WidgetBox"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"bada7c4e-705c-46de-a31a-353aba2ed913","type":"CustomJS"},{"attributes":{"children":[{"id":"7d4ef6fb-db3d-41c3-8269-f6768b093541","subtype":"Figure","type":"Plot"},{"id":"0694e180-7f78-4e61-9679-f074a8297ae7","type":"WidgetBox"}]},"id":"b2fdad05-d119-4b6f-806f-86c20255a350","type":"Row"},{"attributes":{"children":[{"id":"679ef5ba-3de7-4783-98e4-e357a7cda199","type":"WidgetBox"},{"id":"b2fdad05-d119-4b6f-806f-86c20255a350","type":"Row"}]},"id":"9bcddd91-d1c9-4fc8-9ed0-7f4cbf8f0e23","type":"Column"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"4434ab51-d944-4708-8779-fb9d0ea3fcf8","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"bd55f757-db13-4a38-8d9c-7b1a913540ac","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f729b6d6-1c52-4989-b00d-c11f444519e5","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"375bb65a-7bfe-4409-a0e1-2efca4595292","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta_x&#x27;, &#x27;delta_y&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"55086bab-0721-4cda-95da-fa1b3835a46d","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"4371cc30-16da-4593-a2aa-e05be8f0351f","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"a1f0552b-6413-4b15-86fc-82fa57c11003","type":"CustomJS"},{"attributes":{"callback":null},"id":"189b3f96-0383-49c5-ac69-bcd8392b535f","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"382f52cb-944d-4d6c-87a1-4b656ecdb224","type":"CustomJS"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"6ae3848e-9f55-48d7-bdaa-dbecfb0d3886","type":"Circle"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"8c018287-7ea9-472e-be28-435310a187f0","type":"CustomJS"},{"attributes":{"callback":null,"column_names":["radius","x","y","fill_color"],"data":{"fill_color":["#4c2596","#67dc96","#6e4c96","#534c96","#3f7896","#e2b296","#a4be96","#7d4796","#80dc96","#506596","#b83796","#b3c496","#943696","#723096","#c1ad96","#877c96","#36a696","#866d96","#c52c96","#449f96","#ead596","#9d3c96","#509996","#323f96","#59dc96","#7ab396","#8f4396","#7fbb96","#7c4596","#b35096","#bc7e96","#ba8396","#775896","#76d696","#d45796","#ed7296","#845996","#6ca496","#d95296","#bb2396","#423796","#d46496","#46e196","#bba996","#c29596","#866696","#b58d96","#34b696","#e3b696","#cde296","#d02896","#ee3c96","#368096","#66d696","#59d796","#986496","#edb696","#e92e96","#ca4296","#9abb96","#ce9596","#f03e96","#d42d96","#9d4696","#3a2296","#8ea296","#cd8d96","#d1cb96","#d66396","#a0d496","#5c6096","#cb4b96","#3d8596","#331e96","#925296","#dd2c96","#3ce096","#51cb96","#4b4696","#464296","#6a3796","#63a596","#349696","#4d5696","#a96196","#a7db96","#894796","#4f4f96","#e68396","#952d96","#7ac796","#ef2f96","#f28096","#e52696","#683196","#958f96","#f84f96","#459a96","#8c5f96","#35bf96","#429a96","#97e096","#379d96","#e33a96","#b0a896","#46cf96","#b43b96","#d52796","#d62696","#a0ae96","#6e4096","#8b8396","#594d96","#b84196","#a28d96","#997b96","#cb7096","#e69896","#f87396","#aad496","#962996","#cbac96","#7fe096","#e44996","#3d6c96","#9ab696","#667b96","#403596","#cf3696","#6e8296","#f18096","#e54996","#e8a696","#aa3e96","#a42096","#417596","#cdb296","#e34f96","#d05396","#d8b296","#9de596","#a2c996","#e3c296","#91a796","#38bf96","#7f8796","#3c9296","#97af96","#8c7196","#e3bb96","#ad5596","#425896","#87a996","#d1b696","#c65496","#c7d196","#79a496","#9cc096","#509196","#476396","#9d7b96","#405f96","#9ab796","#92aa96","#3f4896","#518096","#5eb996","#979c96","#887d96","#f7e296","#3f3696","#9e8296","#5c8596","#b83a96","#665796","#7e4296","#3db796","#663196","#d34d96","#cf8c96","#719696","#685c96","#4b2496","#822696","#4e4396","#ab7796","#6f3896","#df6b96","#dcb796","#9b6e96","#cca996","#ce8c96","#f36b96","#729496","#532296","#abe096","#509c96","#57d096","#e49a96","#529696","#8dca96","#375896","#e2b696","#e22296","#6b7996","#9c1e96","#468896","#9d3596","#ebd896","#909496","#c33c96","#a38696","#5f5196","#837796","#8e9196","#905d96","#e1ce96","#deb696","#6c6a96","#c1c796","#9b6796","#807096","#c15696","#9f8796","#72d996","#c4a096","#347b96","#f84296","#ee5696","#8e7896","#e88896","#c84996","#ae2496","#c86d96","#f92496","#469596","#9f3696","#9fb096","#ca7996","#a97e96","#72c896","#825496","#327996","#675d96","#568b96","#8ee396","#eca196","#bb7c96","#333396","#71e196","#ad2d96","#d39f96","#c36e96","#e2ca96","#64de96","#a08596","#aada96","#c8ba96","#c39596","#d12496","#4be296","#9f2f96","#e4c396","#832296","#e37c96","#448e96","#f97596","#955a96","#74c396","#911e96","#eb6a96","#e64896","#454596","#be2196","#a2bb96","#79ce96","#7ea996","#e96296","#978796","#563c96","#717396","#afd196","#7fa096","#688096","#5f9196","#655396","#cba596","#dd6a96","#913496","#325996","#70b796","#505296","#83c096","#39c196","#cf2f96","#f1a296","#4fbd96","#8d7d96","#bee396","#d37496","#90bf96","#6b5296","#d1be96","#f5bd96","#c6ad96","#4fa596","#6e9896","#745b96","#6d8896","#408996","#e44996","#574596","#f2d396","#413e96","#926296","#5cd296","#abdd96","#863996","#972496","#437c96","#739796","#6a7996","#8fd496","#509c96","#b52296","#446396","#d1db96","#6c8796","#bae596","#d84e96","#f1d396","#8bae96","#a6c896","#d45796","#9dcf96","#e63496","#b5b196","#afb696","#e88d96","#8c7196","#3a7396","#9f4d96","#51a596","#bd5c96","#3bc796","#ed5a96","#d8ab96","#7a9c96","#885296","#4fe596","#c43996","#ea3e96","#a33d96","#385496","#c2aa96","#7bbc96","#5e7f96","#66bf96","#582496","#8c6396","#d4cb96","#753196","#a09796","#369796","#77b196","#36de96","#aa5896","#8eac96","#cd8896","#656896","#ed5e96","#44d896","#af2096","#a4ad96","#7a5996","#388796","#3ab096","#4ec996","#dda896","#c44c96","#5c4a96","#aec496","#af5e96","#d93696","#ccae96","#6bce96","#f36e96","#6c6d96","#87e596","#8baf96","#f25396","#bead96","#736296","#6d9396","#92d796","#d97096","#c75996","#3fb496","#5e6b96","#e7ad96","#8aa396","#cb8a96","#bb7696","#869796","#44a396","#6b3896","#9f4496","#943f96","#622096","#8a5496","#a5ca96","#7f9e96","#f4b096","#dedb96","#506496","#382296","#d39696","#b73296","#ca4096","#d88196","#555696","#83a996","#d28b96","#558d96","#d27996","#4ca296","#b83596","#ad3a96","#5c3c96","#9cd296","#5e7496","#378596","#c57f96","#ce2d96","#3eb996","#d48796","#df8796","#7ad896","#ae2f96","#7d5e96","#f76596","#582f96","#4d9e96","#7c7596","#4cbf96","#413996","#779d96","#efac96","#993896","#c0e296","#cad196","#976c96","#642596","#4f7996","#425396","#b5b496","#a2d396","#933196","#5fba96","#a13b96","#7cd196","#b59096","#975796","#8da396","#842c96","#518196","#f1cd96","#3f8f96","#c0d596","#5a4696","#497496","#f8ad96","#6fde96","#4a8196","#cf3e96","#708c96","#4b3c96","#4fd096","#87a896","#a8b596","#e0a196","#858896","#38bd96","#e4d496","#5fb996","#52be96","#75bb96","#67c296","#c48196","#f16f96","#dd6a96","#728896","#bcc796","#f66d96","#57bd96","#d5d996","#679196","#ebbb96","#8e8a96","#f7e196","#3db096","#89b496","#d15b96","#4b7496","#928896","#8e7496","#7d3096","#4b4a96","#624d96","#3c6c96","#72ab96","#582896","#431f96","#af5396","#73ad96","#797396","#936896","#c82a96","#ace596","#ba5e96","#dcb196","#5d2896","#b33396","#b1b596","#ced896","#8e7296","#c6e296","#3b3796","#7de596","#db2d96","#3a4c96","#dc7096","#425b96","#94a496","#542e96","#472196","#e84596","#a69196","#d75d96","#355c96","#a8e396","#c08e96","#608296","#f28e96","#d67396","#8a4196","#bb3c96","#41af96","#74d596","#f2bf96","#3ac296","#d27796","#52a096","#c47096","#c13c96","#422896","#7a6096","#6d5b96","#c6af96","#853796","#c3c196","#f4a396","#775796","#9e2596","#bfc396","#8ca396","#494496","#f57196","#8f8996","#3cad96","#c8b496","#48b196","#9c9f96","#c36d96","#c14f96","#736e96","#dbc896","#999a96","#97c896","#371f96","#c09496","#9cb996","#8ab596","#e4a596","#795a96","#838d96","#d5c996","#cb8696","#8ad796","#d84196","#6e8896","#a42096","#f2d696","#472896","#c92796","#db6496","#97a496","#534696","#637996","#5c2296","#52bb96","#68e096","#f98196","#7f4896","#d62596","#81e496","#554a96","#99a496","#457796","#ce3796","#c15396","#6f5d96","#c75196","#82b696","#3ca196","#36ba96","#c93796","#c6b596","#966096","#49aa96","#d4ce96","#7cc996","#a38796","#699696","#c75196","#4d6f96","#77ac96","#8a8896","#ce8b96","#511f96","#755996","#a54796","#f43a96","#b7a296","#4d4b96","#e35a96","#77c296","#677496","#53ac96","#4c9296","#dcd996","#d1b796","#e24f96","#a83696","#972296","#f55496","#e67896","#3d6c96","#88a396","#635796","#743e96","#6cdc96","#4c8f96","#325796","#8aa896","#709b96","#d74396","#ce4696","#5c9d96","#968c96","#4b7596","#7fa896","#c29d96","#696096","#d07496","#641e96","#942596","#b27a96","#793296","#3f4b96","#a4c996","#522396","#535e96","#41aa96","#b48b96","#dc8296","#458a96","#7c2396","#5b7896","#af8a96","#f6bf96","#b1b196","#74e596","#d46f96","#d4dd96","#f3c996","#d5b996","#a57e96","#33c996","#bdd996","#f8cd96","#b07296","#e95f96","#62ac96","#c0e196","#c0ce96","#76bd96","#69d096","#926396","#695b96","#775b96","#f2d396","#be2696","#7b2696","#929e96","#c19696","#979c96","#a19e96","#f08c96","#51e096","#518c96","#a23196","#d8ac96","#afb196","#73bf96","#955396","#5a9196","#836d96","#587896","#ba3296","#9d7e96","#498a96","#ec3d96","#722396","#f86296","#f4bc96","#518396","#342996","#c1df96","#9c7996","#4fd896","#b2d396","#746a96","#82a096","#662496","#c19096","#5f2a96","#b66796","#bf6596","#5ed596","#b8b296","#f9ce96","#d04f96","#37ad96","#816d96","#9db496","#9c8596","#5ea196","#a1da96","#584596","#3d4196","#bd6c96","#5e8496","#4cb796","#867e96","#504396","#e47d96","#c48b96","#4c7b96","#ec2396","#828896","#4ea996","#c6db96","#de3896","#f64996","#d2a596","#7abc96","#e25096","#5b3996","#71ca96","#653996","#6e5996","#daa696","#d28396","#737f96","#c96696","#45be96","#3fa896","#78c596","#5ea496","#7fa496","#49d496","#8ab196","#63b096","#85a696","#af3596","#bbb296","#5ab696","#e5c696","#49df96","#54bd96","#43a596","#bd4496","#b54796","#b7d696","#da6396","#38d496","#475c96","#cc6196","#3ecb96","#9f7196","#c6cc96","#899e96","#cbbd96","#743396","#8b3896","#c9c096","#ea2996","#90a496","#a44b96","#858796","#b4a196","#5e6f96","#64bd96","#c2a096","#d43c96","#f85896","#937e96","#c06596","#6acb96","#df5e96","#f37396","#c6cb96","#65c996","#5ec996","#db9b96","#c36c96","#d19796","#729196","#34b296","#3c6d96","#7fa796","#9d2096","#f3ce96","#a74296","#e3a296","#f4d896","#672696","#b04596","#47c296","#ec4596","#7f3b96","#e79096","#e07f96","#8e8c96","#be3896","#c4cc96","#a18996","#c06f96","#6b8b96","#a62496","#8a5796","#bb5696","#de8196","#87ad96","#a2b996","#9fc396","#b58296","#a67f96","#e5c096","#62da96","#417796","#8b5d96","#cacd96","#f45496","#b06096","#6c7796","#a47496","#a7c696","#7c4296","#a65c96","#5eda96","#5b4d96","#ab4396","#579e96","#745396","#902896","#43c796","#48b996","#472d96","#b93396","#a26696","#eb9c96","#6c3296","#d83896","#446396","#bc6996","#6b5d96","#7f5c96","#3f5d96","#7d7896","#44cd96","#913e96","#e0c696","#d85596","#e74d96","#734296","#603c96","#dd8b96","#46db96","#518b96","#b52d96","#4c4b96","#953996","#685896","#a43296","#86c996","#d19b96","#3dde96","#376896","#534b96","#e02496","#ee5a96","#7e5a96","#d0db96","#d08596","#e8ae96","#8c8696","#582596","#bb6996","#a2b696","#868096","#b3cd96","#dd9e96","#805696","#a58796","#afbc96","#3bc596","#f29b96","#bbb196","#703e96","#e5ca96","#a68196","#a9a696","#3b9796","#343296","#6fb096","#3cba96","#a75696","#b6de96","#3be196","#7cb496","#f5ca96","#cdce96","#d75d96","#40d896","#5b6096","#f43b96","#f2b496","#777196","#563e96","#a39196","#ede396","#d88296","#f23696","#de4c96","#384a96","#75be96","#ba6196","#4a2396","#f96d96","#925f96","#c14596","#b1cb96","#8cb696","#d96a96","#f2bd96","#369a96","#a2ba96","#a1b696","#4d7096","#a09796","#e2a196","#5ea396","#739996","#f27e96","#de3196","#94d696","#759896","#8a3996","#eaac96","#8a9b96","#87dc96","#945596","#c5d796","#472296","#358696","#c43b96","#b52696","#7a5b96","#357f96","#968396","#716096","#4b7296","#e87096","#f5c896","#f76e96","#42df96","#49b696","#b84296","#e1e496","#7ba296","#ccd396","#90cc96","#f89196","#de7a96","#4a5d96","#8fd996","#5aa096","#8cb596","#cb3a96","#aeb196","#416f96","#788b96","#497696","#90bd96","#663396","#3d7096","#e8d196","#7cae96","#832096","#8fbe96","#4f4f96","#f96f96","#59a796","#b07796","#dca096","#f8a096","#bbdb96","#e31e96","#cd6b96","#73ac96","#f64296","#e6b096","#84d496","#a79396","#8ca696","#3f5b96","#6a7b96","#c63496","#c47a96","#ad7496","#3ed496","#ce5a96","#b07296","#4b7596","#914b96","#efc896","#a49096","#4b4196","#f43796","#eb7696","#f87796","#8e9b96","#bdc296","#e19096","#db7496","#777396","#b98496","#e95e96","#c95a96","#b58796","#eab396","#d74996","#b69d96","#ce2396","#4da796","#929a96","#bade96","#d14496","#ed5196","#b1c696","#96af96","#72d696","#923496","#419396","#517296","#a6e496","#8f9e96","#d64396","#456896","#d2a796","#374c96","#b56296","#4b7a96","#d44696","#f2bf96","#39d596","#5b5796","#3cc196","#8b4f96","#475396","#3e2d96","#c99396","#637e96","#7c8996","#f28596","#993d96","#459d96","#e97996","#b78596","#3eab96","#dc7a96","#d7a496","#b97d96","#7b6196","#444696","#427b96","#3ce096","#64c196","#aa9a96","#786296","#5ba296","#f58896","#535d96","#6ce496","#f69396","#b3a196","#f79b96","#513f96","#9c8196","#e37a96","#3a2c96","#981f96","#6cb796","#c66e96","#563196","#b8d996","#6e5296","#5e5796","#9b8796","#bb7e96","#c94396","#7f5296","#754d96","#667396","#626296","#af8396","#5cbb96","#d66896","#bf5e96","#f2c096","#6b6a96","#59d396","#41a896","#3aac96","#686d96","#cd7e96","#763d96","#b14c96","#c18996","#58dc96","#558b96","#738396","#9edc96","#791f96","#484496","#762196","#40b396","#dfc596","#ee6a96","#de5b96","#6ea796","#352d96","#c88796","#e99c96","#eeb196","#756396","#b09796","#40c096","#6f9996","#f54f96","#50ab96","#6d7396","#468d96","#b26c96","#372696","#cfbb96","#997496","#3f6596","#787e96","#cc7896","#44d596","#88a996","#463496","#72c596","#8e1e96","#a06d96","#d54596","#689896","#8d4296","#8c2196","#98b296","#673996","#e7b296","#693596","#705196","#89d796","#b6c896","#b09a96","#92a696","#e98e96","#ee8596","#54d296","#413a96","#616596","#448496","#e0ad96","#f35796","#74e296","#8e9396","#d4a996","#828196","#cad296","#c5a796","#ba2696","#8b3696","#ac4e96","#a3b196","#492496","#d86996","#d3d796","#8b5996","#58bb96","#e18096","#b4ac96","#5b4396","#d23996","#78c896","#7c7996","#348796","#b73b96","#8b7496","#43dc96","#519696","#721e96","#839f96","#477596","#b5cc96","#573396","#f06996","#e09b96","#ecc996","#78e196","#b02696","#d0d096","#819696","#c47096","#731e96","#c44796","#ab5b96","#dde196","#dce596","#e57c96","#497696","#3fba96","#88cc96","#529696","#ad7f96","#928a96","#8c8e96","#bd5d96","#cee296","#dba996","#cc8f96","#c65096","#629e96","#a28c96","#9dc396","#d7d396","#d1a596","#d26796","#9e2696","#b1b396","#e13696","#d02096","#dfae96","#eedc96","#8a3596","#894396","#9bb396","#d02796","#e43b96","#9a4196","#b89796","#e78696","#97bc96","#ecb496","#413296","#d8b696","#ed9996","#db4e96","#996b96","#f04796","#546f96","#a79496","#da3896","#58bb96","#db6d96","#4e4b96","#a6db96","#d44f96","#b85996","#c79e96","#ba4996","#782e96","#74b396","#ba5f96","#e08e96","#e26296","#b02896","#d37596","#326496","#c78696","#5a6a96","#be9496","#d1bf96","#946196","#9e9f96","#ba8496","#cd7596","#aace96","#d29e96","#717596","#b48b96","#c43496","#3d6c96","#8dd196","#899a96","#97ae96","#642396","#bc3f96","#adba96","#daa996","#3a4c96","#a49f96","#6ee396","#677196","#eab496","#56b196","#83d996","#84ad96","#96d296","#ca7796","#8b7496","#818a96","#be5696","#aaa496","#95b196","#bd8696","#575996","#dfba96","#359896","#902f96","#7ede96","#4fcb96","#d39496","#407196","#3e8796","#a26c96","#ad2996","#9dd796","#952696","#7fc196","#92c396","#c32a96","#4e8f96","#65e096","#406096","#594496","#6de196","#343296","#6fcf96","#846196","#83a396","#4fcf96","#589996","#e6c496","#5cb996","#af4096","#f65496","#9c6e96","#812496","#38c496","#68b996","#82e196","#7e7d96","#859e96","#728e96","#709796","#3a3296","#476296","#b8b796","#e5c996","#c2ce96","#5ccb96","#8bc596","#947c96","#393596","#576996","#b09596","#8a7996","#d95e96","#f4a196","#32a096","#4ac696","#b63a96","#c07596","#852096","#a43696","#79b996","#af4396","#344196","#735196","#a79b96","#7d7796","#da8f96","#b38d96","#a03e96","#b15596","#957b96","#b66096","#387596","#b35496","#85aa96","#baa896","#33ae96","#ee9696","#b65596","#b4a996","#e5e296","#5cbb96","#5a7c96","#35cd96","#d6e396","#7f2996","#533296","#88a996","#6a5496","#6a4896","#f5e396","#98df96","#5dad96","#462b96","#425a96","#d1ca96","#40b496","#cad996","#51b496","#598296","#5c3896","#6ec796","#b03d96","#f2dc96","#ca2996","#c24d96","#3e7796","#a93196","#d69d96","#60c896","#345596","#359896","#66dd96","#c5d796","#f4a196","#a75e96","#47b996","#ae9f96","#985496","#67c696","#b3be96","#727696","#68e496","#ab8096","#f32996","#d3a996","#ec8096","#d25796","#c75296","#462696","#ba9396","#9c5796","#869d96","#c45596","#aca696","#9e6c96","#a33496","#573496","#baab96","#afdc96","#726096","#ce4796","#332696","#c63996","#4c4196","#b6df96","#ea5c96","#d45896","#574996","#67cc96","#53b096","#368c96","#41bb96","#d17196","#87d696","#f67196","#9c2796","#823e96","#9ca996","#842e96","#4b4596","#56e496","#b26096","#c0c696","#f6ab96","#762196","#3a3296","#a72996","#f69b96","#445896","#a16296","#ccd496","#4b5596","#854a96","#79ca96","#af3496","#f3a396","#5e4096","#b3df96","#8c5a96","#e26296","#5c5496","#7d7396","#d58196","#f79296","#ce5996","#f95b96","#dbd396","#ae6796","#5ab596","#e34096","#f7df96","#f9de96","#8dbc96","#88ad96","#623e96","#863e96","#3fb696","#b63696","#b22396","#333696","#806296","#40df96","#a97396","#ca8196","#f1d396","#d07596","#999396","#655a96","#a8e396","#aadd96","#97ce96","#817796","#b15396","#97af96","#707a96","#37d596","#5e5e96","#b72796","#992096","#44d096","#f5bd96","#d9a696","#49a896","#8dc296","#52d196","#748996","#3cc096","#eb4196","#b9aa96","#8e4596","#eac796","#e06896","#6d7996","#986e96","#838896","#7e2f96","#897f96","#533796","#c35b96","#3b5b96","#bbd696","#32a496","#8d6796","#bc9c96","#7d7b96","#dbb796","#b3c296","#604c96","#d75e96","#a42096","#4e3a96","#ac3396","#9fc196","#9b3096","#75b196","#6de596","#eb3f96","#603796","#619996","#d28796","#ecc996","#c3cf96","#af3696","#9d9096","#3dcd96","#e94e96","#6f7996","#b49f96","#c8c096","#7fd396","#817e96","#532b96","#8cc296","#dd2e96","#75c396","#a03b96","#926696","#b07b96","#3e5b96","#629b96","#836f96","#ab8196","#675c96","#e3da96","#efc896","#b69096","#8dc296","#418496","#3b3f96","#6ebe96","#f97096","#d29696","#4d9996","#997896","#678e96","#323296","#e63e96","#5b2a96","#483f96","#cb9896","#aa9396","#585596","#6b7896","#646196","#a82496","#afa296","#4da996","#47df96","#7f1e96","#7f4c96","#d92096","#f43896","#60d996","#f5b196","#668596","#4bb896","#532c96","#743196","#443496","#a5d596","#339696","#abd296","#9c5a96","#4f9896","#8c2c96","#635b96","#f94c96","#ca6e96","#673696","#669296","#865896","#519e96","#342a96","#f9d696","#5ade96","#cfbb96","#bb5c96","#bcc796","#7db896","#ab8996","#e6a396","#a46a96","#7a8a96","#b47796","#a0d196","#94db96","#428996","#87a096","#d32b96","#4f6e96","#959396","#ee6e96","#a17096","#82c396","#ac2796","#c55a96","#b8c596","#f04596","#455796","#4ea396","#567196","#344596","#df5e96","#3be596","#95ac96","#f53a96","#7e4596","#cca196","#9ed796","#d5cc96","#de8396","#982296","#49af96","#625d96","#d6c596","#486e96","#444c96","#e14596","#a9d896","#b13596","#cbe196","#92db96","#509896","#de7f96","#b93d96","#f87496","#9a7096","#ef4196","#5f2496","#aee396","#6a3896","#642896","#59c596","#727896","#ab5196","#acc296","#762896","#516796","#f5c096","#5f4a96","#d29696","#787a96","#ea9696","#c6ce96","#9a6e96","#371e96","#f1a996","#677e96","#a24396","#352e96","#e17f96","#4fc696","#a98d96","#ca9d96","#c5c196","#b49396","#f12396","#402d96","#6b9896","#8f8796","#a45396","#db2096","#52cd96","#b09b96","#e7ac96","#a75296","#738e96","#707596","#8b4c96","#54d596","#c89796","#cb8c96","#696f96","#365d96","#617d96","#572c96","#374396","#cc2496","#ae7096","#4e5b96","#dd4e96","#907396","#8ee396","#e88196","#a9a696","#9ea196","#f3bf96","#bf2496","#cfc096","#af5d96","#496d96","#9b6996","#a1b296","#48b496","#5a2296","#867296","#eda696","#957f96","#465a96","#7dcd96","#814596","#958c96","#485996","#8c2496","#54c796","#b96196","#32a896","#e46196","#a69296","#f7d396","#aa5896","#615596","#75ba96","#a96396","#b4cf96","#427c96","#e98d96","#542596","#f8e096","#80bb96","#d6cc96","#f3b096","#e52896","#e0ac96","#a09596","#d4d396","#7c8896","#e2a496","#963a96","#977496","#e5cf96","#f9af96","#e39596","#bcd896","#e7c796","#525196","#472d96","#e8d996","#5f6996","#654296","#a6aa96","#4ba896","#8ebd96","#d16996","#364096","#aa6d96","#4ccb96","#be1e96","#353a96","#846296","#9e7496","#ac2a96","#989096","#459996","#c6d096","#8dde96","#742096","#49da96","#683596","#39e096","#f62f96","#62db96","#6c5896","#592196","#904296","#529796","#38e596","#a4e396","#982596","#523c96","#7d6f96","#6d6a96","#3c8296","#e53296","#e09e96","#974c96","#558896","#5bc496","#6a9696","#634496","#9cca96","#7e8196","#794196","#723f96","#efcd96","#d56996","#ba4896","#34ac96","#366f96","#dccc96","#8c5396","#c6cf96","#f58296","#726996","#815296","#59a596","#93dd96","#626896","#998f96","#5b4c96","#d0bc96","#61cd96","#a72f96","#795696","#791f96","#75a096","#f55c96","#8e7896","#e75d96","#ef4c96","#32c296","#528a96","#ac9196","#4e6d96","#3c4f96","#e04a96","#912f96","#4e4496","#7b4096","#7b8d96","#daae96","#723596","#cb5496","#403296","#d99296","#9ca296","#402796","#8f2696","#99e296","#ce8e96","#c35596","#f49d96","#756d96","#412e96","#9ae196","#88b396","#aa8796","#c5b196","#9ce596","#554596","#7e4796","#e42c96","#348396","#799896","#eee396","#86c596","#e69496","#998b96","#7e3696","#387b96","#f1c496","#4e8996","#f2e396","#c86c96","#d7a296","#338c96","#7ce496","#cf6996","#d9ae96","#bf3496","#53ab96","#682196","#d2bc96","#86a196","#9a3796","#399896","#323296","#b57396","#ced696","#478f96","#ba4296","#d8bb96","#4acc96","#856596","#9d4496","#ee3c96","#549a96","#34d896","#b03896","#cc7596","#785f96","#bebc96","#78ab96","#34b796","#cf6296","#60a296","#a09196","#693296","#e12096","#86d096","#c2a896","#bbcc96","#c17b96","#3a3c96","#708f96","#557796","#e73396","#702996","#beb696","#608096","#a06296","#f1ca96","#772696","#f33996","#ade396","#a36f96","#5ca496","#e6c796","#b9c296","#773696","#886d96","#d3a096","#a5e096","#476e96","#555c96","#8c8796","#35a296","#8c6096","#c88c96","#415f96","#ad9196","#853196","#6bc096","#702f96","#8a6396","#ab9b96","#e9c096","#914196","#af1e96","#44a196","#373996","#433c96","#a99c96","#903a96","#b4ae96","#f5cd96","#5e5a96","#c27996","#9c5d96","#a08996","#7d2196","#ba5996","#63da96","#e7b996","#f09996","#ddb796","#dbaf96","#5de096","#d49e96","#369f96","#af5896","#e96f96","#c1e596","#a05296","#9dd596","#a8ca96","#8c4f96","#f65c96","#bd6196","#652796","#7a4696","#ade196","#e13b96","#731e96","#ca3496","#8bc796","#bb4e96","#c94d96","#438996","#57c396","#bae496","#65cf96","#e63d96","#b33996","#697596","#572296","#addc96","#718f96","#324296","#91c596","#693596","#d76396","#e9bd96","#b75396","#4f2596","#c43196","#86d196","#3cce96","#6c2e96","#d0ab96","#55e096","#53a196","#6d9096","#846d96","#3eb696","#664696","#6e6e96","#e23396","#d78496","#5ece96","#982b96","#884c96","#772196","#cd9c96","#6edd96","#74b096","#d7c296","#ca2296","#96bc96","#88b296","#928996","#3b7496","#529096","#412b96","#8e8f96","#ef8b96","#db4b96","#334996","#f4b796","#9eb296","#b23a96","#967596","#beba96","#a78196","#6acc96","#996096","#731f96","#727996","#3ada96","#3f9496","#37da96","#698296","#3a8e96","#7fb396","#d42b96","#b84696","#9d4896","#badc96","#a49896","#3c2c96","#b34396","#b72496","#ea3b96","#ec5096","#c13596","#80aa96","#d39696","#3ed096","#523696","#409b96","#a05496","#54d396","#d97c96","#f93896","#b13f96","#46d596","#368096","#c58896","#a77696","#80d296","#3aaa96","#772596","#d37a96","#cade96","#a42f96","#dda896","#f97396","#3c7796","#579596","#9ab196","#5b7996","#397396","#ba9896","#bdce96","#adb096","#59b296","#9f4f96","#4a5b96","#53c296","#a7d196","#c19c96","#edcf96","#c4a596","#6fab96","#c4d296","#597d96","#323596","#87ae96","#ba7c96","#f54396","#775b96","#d43996","#f07396","#7c2f96","#37a396","#d03496","#9f5496","#a61f96","#d35096","#b4dd96","#464596","#bcc296","#63c396","#888d96","#9c3a96","#653f96","#b79196","#7b3c96","#f9bf96","#339396","#51d496","#c17596","#7b9b96","#855896","#662796","#a73996","#b46696","#7e3c96","#7f8896","#a1cb96","#edcd96","#f69796","#49e596","#e99096","#47c196","#612a96","#46c096","#af4f96","#3f6b96","#50a296","#3aaa96","#325896","#79ae96","#545d96","#d95d96","#92b696","#579696","#6d4796","#7f6596","#8cc496","#60b596","#5bd796","#b2c996","#d54f96","#85c996","#cc9f96","#aa3296","#49b696","#b01e96","#49a096","#b26e96","#6c8896","#7f2e96","#879896","#3c5696","#3d3e96","#d3d896","#cc3f96","#6bb196","#f7c996","#f56096","#9c3496","#4b3296","#34d296","#e53c96","#a93796","#f78596","#ac8596","#417f96","#9c3096","#8ee496","#9ec096","#da7f96","#8c6896","#739896","#b02896","#374f96","#6e3696","#d19896","#a6cb96","#439c96","#d43f96","#553296","#61ce96","#7b2696","#ad4896","#8dd496","#ea4896","#396596","#d8e196","#da9596","#b89c96","#9fdd96","#d03596","#8a6096","#e97a96","#d55c96","#438996","#ac1e96","#90bb96","#857196","#4b1f96","#3c2c96","#346396","#ed4796","#997c96","#ed7d96","#7d8096","#3a7296","#966496","#c55a96","#582596","#adbb96","#c2bf96","#5f9c96","#8b6e96","#52de96","#c82596","#567996","#42c896","#e88d96","#f1b196","#4c3796","#64ab96","#9c9996","#d62f96","#f74496","#b29896","#e9c596","#364e96","#4bac96","#c76196","#39be96","#564596","#df2896","#545296","#92ae96","#6b2f96","#45bd96","#df4a96","#bf2e96","#ee8e96","#6a4196","#491f96","#f3a196","#66ac96","#7b6396","#688c96","#35b396","#d06796","#829b96","#b78496","#62c096","#817896","#d67596","#992f96","#4c7596","#4ec296","#853f96","#94c296","#3d3496","#da6796","#eb8996","#443996","#7f3196","#3a3296","#c4b296","#62cb96","#b87596","#cfe096","#42a696","#379596","#736496","#5e4896","#8ca896","#b4d196","#e32d96","#4b5f96","#393a96","#3da396","#9b4d96","#ea5996","#5dd496","#3dac96","#5c6996","#be4696","#725696","#8ee196","#e79596","#c07696","#bd1f96","#aea096","#7fb996","#c9d896","#6bce96","#d12396","#e1d196","#4f4b96","#af7d96","#b3d696","#f67296","#b0ba96","#392096","#8b3596","#369896","#87c796","#be5396","#419196","#7adc96","#962896","#957a96","#70a796","#a37496","#90bb96","#b4ce96","#4c9b96","#5a3596","#af4396","#cf7f96","#f24696","#774e96","#d52496","#6a2c96","#c8b696","#3f2b96","#78b096","#eb6396","#32e196","#877e96","#39d096","#931e96","#964c96","#553f96","#5dae96","#87a896","#823f96","#e49296","#ad7f96","#c7e096","#656c96","#ec3896","#c39c96","#e35796","#b53596","#b4e296","#ad4e96","#e35d96","#9ba296","#5da796","#b63596","#cf6a96","#65cc96","#6edc96","#458e96","#743196","#6ebe96","#b1df96","#632b96","#d14196","#645d96","#e8b996","#3f5b96","#88ad96","#c29f96","#483696","#d6c596","#44de96","#d0b396","#84d796","#c29d96","#b2a596","#f03796","#4f9596","#61a296","#668c96","#db3996","#e02a96","#3ca996","#ad5096","#964696","#d48196","#aa4c96","#7cbf96","#df5096","#dce096","#653c96","#e87096","#84ca96","#616796","#a12d96","#7a7796","#dc7196","#5a3f96","#57c596","#f75596","#c73c96","#8b4f96","#8fd296","#52a196","#32d996","#8b2596","#5f7c96","#aecd96","#40de96","#88d896","#8cba96","#ba2f96","#ede596","#cc3996","#5cac96","#ce4e96","#989196","#c9ab96","#9b1e96","#c12596","#8fa196","#537f96","#382f96","#8d6096","#af4c96","#46bf96","#442996","#d5d396","#4e3c96","#919896","#35de96","#dd8996","#81e096","#b87296","#a77e96","#a0a596","#a35496","#73be96","#cf6496","#db3496","#b6b296","#83c696","#3c5196","#543796","#ecd696","#c1c896","#f27296","#514596","#f5c196","#ec7e96","#935396","#4cae96","#d96196","#d98596","#674396","#322096","#a8d196","#f86596","#3fce96","#908196","#3dc296","#c03096","#522496","#6f9996","#c4ab96","#645a96","#88d596","#757b96","#4a6096","#bad096","#a68796","#d03e96","#c72c96","#705196","#e3d096","#ad5196","#dfa496","#c8d996","#45cb96","#b95b96","#9a7f96","#a45596","#a36096","#4d9096","#ad3396","#95c196","#ac2196","#bb9096","#ac8c96","#769696","#3fc596","#8e7696","#f8a696","#aab696","#da3696","#4ab096","#3e3796","#7f2496","#a2c896","#914096","#cb2496","#86e396","#94b296","#f56596","#c72296","#c45796","#4edc96","#c68b96","#404696","#782196","#f52f96","#c4bc96","#5e7896","#a3bf96","#85d496","#3e8996","#e6df96","#9a4996","#6f2b96","#62c096","#8a5196","#b8dc96","#805596","#e87896","#808f96","#508796","#ef4396","#c9c696","#de3496","#e97996","#bf3896","#f2d696","#de5c96","#934996","#895d96","#dca796","#c41f96","#63cd96","#ccd696","#735996","#703a96","#f8cf96","#347096","#3e2e96","#f0b396","#afa796","#c1e196","#f3b496","#ce4c96","#4f2b96","#bb8f96","#b9e096","#9fbe96","#41ae96","#3c6b96","#dd9796","#e87796","#f0e396","#ceaf96","#a06596","#56bf96","#f75396","#a07996","#403996","#939e96","#483196","#5f7096","#baaf96","#c8d296","#6c4396","#832796","#768c96","#61a296","#b95c96","#94bf96","#f58396","#e77396","#ae2a96","#8ed696","#868e96","#c74696","#47d296","#6f7a96","#8b7a96","#a62d96","#b37b96","#474d96","#b6e596","#f72596","#b65696","#7f9896","#4ee396","#7b8196","#e5ad96","#628b96","#e92696","#673796","#54a996","#825996","#38df96","#f72496","#a3b196","#f96a96","#a93496","#ec7396","#c08696","#ab6b96","#419196","#ba2d96","#36a796","#6ac496","#63b496","#a86496","#7d8296","#ad9096","#36bb96","#705396","#497496","#8fdd96","#7d3696","#ce8e96","#cb9596","#648996","#dadb96","#d45396","#cb9b96","#ca9c96","#746e96","#677696","#826996","#4ee196","#a5b396","#8a7196","#ae3996","#a7c996","#7b6096","#348596","#5fe496","#c49b96","#468896","#415196","#a74a96","#742196","#57e096","#6e8d96","#8fa896","#a56596","#a6c296","#638c96","#f7b796","#92bc96","#cc7a96","#892496","#8cd796","#f9b196","#585a96","#8cbe96","#9f2d96","#dab896","#6aad96","#d99096","#bcd996","#ce3396","#59d596","#d7b396","#72c896","#648896","#923596","#6d6496","#549096","#648f96","#d49e96","#bb2f96","#cd9c96","#eb8c96","#d79696","#976496","#cc2496","#ab5296","#ba6a96","#4d8696","#d6b296","#ef7496","#d5d896","#333996","#78ac96","#705396","#942e96","#e16b96","#5d7e96","#4ed196","#91d096","#deb196","#afbe96","#558d96","#4a4096","#d52b96","#877896","#ef6996","#a7b496","#4a8596","#a12796","#8bab96","#f14096","#33d196","#cbde96","#844f96","#e08a96","#7d3196","#b19696","#d7e296","#f89296","#aae096","#d08296","#df3596","#afc196","#3fe196","#578e96","#742f96","#e85696","#b46696","#a89d96","#a32596","#4bdd96","#7fb896","#9f9396","#d37996","#53d296","#bdc396","#dbb696","#e15096","#e25a96","#336b96","#bc3396","#6e2696","#593796","#b65b96","#575b96","#b77396","#c28796","#bb2696","#d26496","#bcdc96","#5c8e96","#a3e496","#c7a996","#785896","#919f96","#9d9a96","#dc3b96","#912996","#912c96","#978696","#83cf96","#c55696","#8eb196","#f01e96","#e05196","#45ce96","#f0d996","#543996","#9a9596","#aaa596","#f45796","#d8b696","#5a7d96","#ac3896","#df4c96","#c5d196","#c42a96","#9bcc96","#762c96","#90a496","#483b96","#3cdc96","#aab596","#d75e96","#4e3796","#952896","#547596","#ad2b96","#c16296","#7e2f96","#874496","#5e7496","#51cb96","#c99a96","#da8c96","#796496","#a72796","#dc5096","#cc7196","#868996","#8ba696","#704d96","#e2d296","#849796","#ebe296","#976b96","#6bb496","#4eb596","#b75a96","#795396","#a84096","#9fdb96","#754e96","#e4e096","#502c96","#c93f96","#d8b796","#bfa696","#e64996","#cf7296","#737b96","#65cb96","#3ec696","#b97e96","#648696","#eeae96","#576396","#519d96","#9c3f96","#5d9b96","#4ad596","#d73096","#75c296","#57ac96","#34bd96","#cbb796","#d35996","#50e496","#b19496","#e7ad96","#ba2e96","#636496","#9fa796","#879b96","#be5896","#3e3c96","#ca7496","#712896","#343d96","#e69096","#88b196","#61b896","#3a9c96","#d02596","#cea596","#b92a96","#672996","#d18596","#ea9c96","#82dd96","#57a596","#4d6d96","#ac6a96","#7ad696","#bbc496","#502096","#65d496","#447f96","#74ab96","#6f6396","#356896","#6f6896","#6f4a96","#a7b096","#b19c96","#bb7b96","#a47896","#514996","#92d796","#b7bc96","#444196","#bd8796","#62d696","#593596","#a0bd96","#483b96","#6ac096","#cd4996","#c44496","#80e296","#ca6296","#962996","#437296","#4e6a96","#c38196","#64bb96","#889996","#afe596","#cf2396","#3aa796","#e74c96","#797a96","#93d796","#672096","#b73396","#574796","#404a96","#d2e296","#7fc196","#5d9696","#b9a496","#9b6796","#864896","#f3e396","#97dc96","#f88896","#e96396","#7b9a96","#f33296","#518e96","#823d96","#754196","#7e6996","#f43c96","#5da396","#c48296","#c93b96","#633296","#71a296","#e62d96","#9fe296","#4c8796","#328496","#9dda96","#944396","#412296","#9dde96","#789c96","#69aa96","#99d596","#b15d96","#794d96","#f1ba96","#713e96","#e88496","#845496","#60d996","#8f4096","#a48b96","#b43196","#f17696","#9c9996","#367e96","#7dd796","#f75c96","#f4e096","#f6bd96","#487196","#662496","#866f96","#74da96","#90ad96","#752196","#606b96","#6a2a96","#e8cb96","#5e9096","#89d296","#e25996","#71ae96","#e6c596","#373a96","#92d596","#9c4c96","#93bd96","#7a9f96","#f42296","#efe396","#a6d996","#759096","#84ad96","#725896","#3c3f96","#804896","#69ce96","#7c4d96","#efa796","#e5ba96","#8eab96","#c3be96","#d3b896","#337696","#d54e96","#be7496","#b39696","#9f4d96","#77e196","#44e196","#665a96","#b0ac96","#e43796","#babf96","#5fd096","#ec8d96","#55df96","#e07996","#ae5d96","#c02996","#789196","#62b696","#ab4f96","#5dd896","#bf8896","#cebd96","#91c396","#b47996","#937c96","#afa596","#be9b96","#f3cb96","#b17b96","#97a496","#c9a696","#d63f96","#af2c96","#e7dc96","#3f9a96","#4b8496","#464c96","#6c6396","#db9796","#3c3196","#8d5f96","#7cd396","#872b96","#832196","#996c96","#716896","#724196","#a89696","#71e196","#ed2f96","#773f96","#c87096","#86b096","#4e9696","#b58a96","#688a96","#4d7396","#448e96","#4ba096","#5a4896","#877796","#e16596","#5d4396","#f29996","#329f96","#8c5796","#b47696","#722e96","#6f8096","#e87396","#f43e96","#567096","#51e096","#4c5996","#5f7096","#998996","#f35896","#916196","#948b96","#75d496","#a85e96","#516896","#d55796","#617b96","#a24b96","#344596","#9a3596","#c37e96","#393696","#7a6196","#674196","#873c96","#e9bf96","#e9d996","#c3b296","#811e96","#75a596","#a9dd96","#b2bf96","#87ae96","#558d96","#895796","#a19796","#f22896","#357c96","#4b7f96","#7a4796","#847b96","#f98c96","#b33796","#646d96","#91b196","#f94d96","#e6da96","#c6d796","#615996","#d6d196","#c0b696","#e75496","#86e396","#4bb296","#8e2396","#97cc96","#4aa596","#bdb196","#8fa696","#65e096","#b6c096","#686a96","#4f3796","#517d96","#edc796","#4dc596","#5cdb96","#582896","#33e396","#36a396","#a16f96","#576e96","#716096","#da6a96","#454796","#706296","#c53296","#eae196","#32cb96","#c9e096","#d4d196","#cce296","#497596","#ab4396","#ee4196","#923396","#cf4096","#416b96","#58c696","#567d96","#a75996","#efa396","#a58596","#3c6596","#52ac96","#a23f96","#e24f96","#bc3796","#69e596","#e9ba96","#ee9096","#c3c196","#ccc696","#5a6996","#88b396","#dbb396","#f1a396","#426096","#707396","#f6c296","#d99996","#3a7d96","#81a996","#8a3196","#502c96","#9e4a96","#7b4596","#e15796","#5f2096","#8ab396","#bfb996","#6db596","#dc5096","#a7cf96","#33c196","#f46496","#9ec796","#6a2b96","#3f2296","#412196","#663c96","#ba6096","#c1c496","#4a3496","#547196","#3a3b96","#ac8996","#a72096","#bfd796","#cb3a96","#7fab96","#53a496","#f1c596","#505396","#c36b96","#cf6496","#bac496","#a49c96","#a4b996","#94aa96","#9aaa96","#368e96","#a75d96","#4b4a96","#6a9d96","#3a9a96","#cd6396","#867596","#ebd996","#b86296","#559a96","#37ad96","#399296","#393596","#737396","#382196","#546196","#3b7f96","#c38596","#587596","#a7ac96","#ee9d96","#426896","#6be496","#888d96","#749996","#404796","#d6ca96","#447f96","#b35b96","#d32296","#99ac96","#eaa796","#844796","#d33796","#54d796","#cf7296","#4c6896","#e5c796","#f6a896","#733f96","#9f6996","#9ba296","#dd7696","#4aa496","#8d6296","#94a396","#583b96","#c59796","#508496","#619796","#652196","#96e596","#afcc96","#c5d396","#8d7396","#33c396","#b8b596","#bc7396","#f18696","#8fa696","#447a96","#b5ba96","#8cad96","#db3996","#95d796","#622896","#7ca596","#88d996","#f56b96","#566c96","#42ca96","#67de96","#dede96","#bc3296","#d8a896","#eebc96","#46ce96","#77b596","#c8c296","#b66e96","#5e3296","#8c8c96","#34cd96","#ef6b96","#93de96","#ad9296","#93ab96","#d2c796","#e94996","#618396","#ed3c96","#ef4496","#ea5f96","#508196","#49a696","#ccda96","#7d2496","#d5e096","#d05d96","#4d3f96","#f91e96","#641e96","#486996","#676496","#4dbf96","#a49596","#64dc96","#ad2996","#539a96","#ed7296","#823e96","#605196","#ae6896","#6f9996","#a74696","#4c6196","#904496","#358396","#96a496","#ce9596","#b4d796","#5e9b96","#634496","#e93696","#40ba96","#669b96","#dca596","#d98296","#bd6196","#a65296","#535c96","#c3d096","#ee9296","#6b4e96","#b3d696","#5c8d96","#d97096","#3ee196","#c59996","#62b996","#356496","#e08b96","#765e96","#cd2496","#6e5d96","#686596","#6dc896","#8edd96","#575096","#388696","#9f5296","#e89c96","#d77196","#7e9496","#388996","#a4b196","#ea9196","#79c996","#cd6096","#9cb396","#d01f96","#d97396","#755096","#67a696","#575a96","#a69d96","#bf8896","#d2a096","#68b096","#f1c596","#c6cd96","#43cf96","#716b96","#692596","#8d8996","#c56796","#6b6896","#86d096","#f64b96","#59bd96","#758a96","#f04496","#37b196","#a78a96","#c94096","#67db96","#f9d996","#f46196","#a2b296","#743496","#bd3496","#b77396","#d74596","#ce9b96","#3b6096","#857296","#407a96","#79d196","#bf7796","#d5a196","#eb2696","#f08c96","#b1ab96","#c8db96","#ed9796","#9b4996","#d86696","#ca4f96","#de9296","#7e8c96","#495096","#742b96","#569f96","#cf3396","#a38196","#a9a096","#efb296","#6a8196","#9ab796","#687296","#3d7496","#d8c796","#b7c696","#983796","#b37696","#386296","#816d96","#b79696","#f7cc96","#44d396","#a08596","#708496","#b49696","#f78596","#84b196","#392896","#a75096","#ef4796","#5a2996","#55b196","#e7ad96","#912c96","#693f96","#588a96","#a99f96","#b54c96","#ce2c96","#60dd96","#8b5596","#c62196","#c16196","#dc3396","#acb196","#36db96","#899a96","#a4df96","#f3bc96","#922d96","#a88a96","#a3c696","#354696","#4f7296","#9d9a96","#58c796","#822096","#eb2296","#d6b996","#f9d296","#6a3696","#9d3196","#d13596","#e74996","#e9d796","#69b196","#994b96","#e2b796","#d66b96","#675696","#7b7696","#927196","#968596","#7a5496","#5cae96","#463796","#8f3696","#e3c896","#468096","#417796","#a5a896","#bfb396","#ed5296","#8dc296","#b75a96","#aa8596","#a68496","#504c96","#929296","#5e6b96","#b55896","#8a5c96","#eacb96","#d5dc96","#32d496","#5de196","#52a996","#54b496","#672296","#da7896","#aed296","#bea296","#5cc196","#355996","#49d196","#972d96","#bddd96","#59ce96","#4cb296","#e64896","#ed8a96","#797296","#a85396","#b08b96","#6dd296","#664d96","#b46396","#9a5796","#452896","#958296","#388f96","#ee7596","#d32b96","#5a8c96","#df6a96","#a52496","#574496","#4a6596","#c13b96","#f3e496","#669796","#5d9096","#b12c96","#37b796","#7aa296","#71da96","#bcc396","#76b896","#a7c496","#a35c96","#679496","#9b5396","#714996","#b37b96","#b32596","#458396","#504696","#777396","#f27d96","#b3d796","#7d2b96","#3b5196","#3b9596","#ac5e96","#884496","#a76896","#5ab596","#eee296","#714f96","#527a96","#585396","#325a96","#eb4396","#7d7e96","#492f96","#afbf96","#6c8b96","#6b6996","#aa3596","#76e596","#a2ae96","#eca696","#829296","#94a896","#475396","#b54696","#5a7596","#a5a096","#da9096","#862b96","#a15296","#8be396","#b29896","#b79896","#50ab96","#f1ab96","#6f2196","#3f6496","#e37e96","#e93f96","#4b6396","#4e5e96","#5b5a96","#3fa796","#bdb596","#d1a196","#3b6196","#3ad396","#663a96","#609e96","#bc2596","#967996","#e3c796","#e2d096","#71a696","#c5db96","#f37796","#83c396","#8b9a96","#3e3596","#71b496","#7dbc96","#655f96","#e6c696","#dae496","#ceb096","#9da896","#63b596","#ed8696","#e69696","#cbda96","#54b596","#dd4f96","#ad2396","#c09996","#dc6896","#8ce496","#9a8696","#d04c96","#ce7496","#e9d696","#f82396","#6d9996","#3a5d96","#445996","#c56096","#ddbe96","#8fa596","#b5c996","#765d96","#526196","#b63896","#644296","#9f6c96","#68aa96","#b47d96","#785396","#993896","#cedd96","#934796","#8e5f96","#4ca296","#84b496","#7ae396","#6e8b96","#d94196","#efb596","#816f96","#d8c296","#739b96","#a5d596","#426696","#f4aa96","#758196","#4b5896","#7f4496","#458596","#5fbb96","#334996","#4ace96","#aa8696","#3a8a96","#da3f96","#f8b096","#433196","#73a596","#6aa796","#df8396","#c48196","#e28196","#856796","#79c796","#a27e96","#a48d96","#a23a96","#617596","#e35796","#b37196","#8b8b96","#7c4296","#6c6996","#373d96","#3b6196","#767696","#b1a196","#515196","#345596","#327596","#b58a96","#902496","#3ba196","#323d96","#5a3496","#d3be96","#e18096","#7f7e96","#d89296","#5c2c96","#6f1f96","#67bd96","#6bb596","#d16c96","#de9596","#7f5b96","#c5e196","#869896","#9b8696","#9ab096","#892196","#cfaa96","#af5e96","#dc2296","#39c396","#c8c996","#cac496","#8a1f96","#5c7396","#e6c896","#d5d596","#b45c96","#4ba896","#4d2896","#b06f96","#687396","#e3b996","#396196","#826396","#b47996","#d89096","#f22496","#982096","#f6ae96","#862996","#794996","#db6296","#4d3896","#9cd196","#99c196","#a6d296","#b8d996","#c2a196","#dd6a96","#c62a96","#51dd96","#b26396","#3c7d96","#703f96","#482196","#d6d996","#645b96","#eec096","#5ee396","#a1be96","#a34d96","#f27f96","#418a96","#d52296","#b8d596","#54d096","#96c196","#544596","#4f8296","#6fe296","#b0a096","#4fc596","#dd6e96","#972f96","#b14a96","#458896","#afe296","#abd796","#8b7296","#d39f96","#cab996","#a3ab96","#58c396","#8ab596","#b99f96","#f38896","#9c6696","#70dc96","#b9c096","#c33796","#32bd96","#78d796","#40be96","#342296","#f87c96","#9a8496","#328b96","#3a7096","#688396","#3fd596","#396796","#577496","#46e296","#75bf96","#9fdc96","#98b596","#9bae96","#c67a96","#588696","#d36896","#c37096","#f9ce96","#c43f96","#961e96","#e52396","#689996","#f0a096","#ba6e96","#3ca296","#d46596","#d01e96","#4ee396","#745596","#61da96","#c63696","#d97796","#89b296","#af6096","#5ee596","#9ccf96","#d9e196","#8d2596","#6a5796","#844f96","#4c8f96","#3fe096","#d0c996","#442696","#34a896","#e28a96","#34b996","#5e7a96","#8ad596","#9fc196","#988096","#626996","#ecc596","#d55796","#75d596","#aec296","#c4bb96","#acca96","#d8cf96","#b13196","#927496","#55aa96","#432996","#abb696","#b12e96","#afd996","#f1b296","#3f4396","#3b7496","#af3b96","#476d96","#599896","#c14d96","#768996","#8c7896","#a3c396","#d0cb96","#9bab96","#e27296","#bddd96","#754596","#465d96","#f17196","#d49596","#e99096","#a37096"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}}},"id":"6deb9777-9285-439f-9d58-4007f44cdfd7","type":"ColumnDataSource"},{"attributes":{"callback":null},"id":"f5b9c378-37e0-462d-993f-5fe97348a44f","type":"DataRange1d"},{"attributes":{"below":[{"id":"a9b3cadd-5c89-414a-8583-ffb2f8755f79","type":"LinearAxis"}],"js_event_callbacks":{"doubletap":[{"id":"4371cc30-16da-4593-a2aa-e05be8f0351f","type":"CustomJS"}],"lodend":[{"id":"f729b6d6-1c52-4989-b00d-c11f444519e5","type":"CustomJS"}],"lodstart":[{"id":"4434ab51-d944-4708-8779-fb9d0ea3fcf8","type":"CustomJS"}],"mouseenter":[{"id":"8c018287-7ea9-472e-be28-435310a187f0","type":"CustomJS"}],"mouseleave":[{"id":"51890d3e-8549-49b1-add3-cfd8d115d971","type":"CustomJS"}],"mousemove":[{"id":"382f52cb-944d-4d6c-87a1-4b656ecdb224","type":"CustomJS"}],"pan":[{"id":"55086bab-0721-4cda-95da-fa1b3835a46d","type":"CustomJS"}],"panend":[{"id":"dda94144-a237-4696-974d-069e86775fc6","type":"CustomJS"}],"panstart":[{"id":"93b33fcd-0634-45a7-8227-ebfaeedd5058","type":"CustomJS"}],"pinch":[{"id":"8169486c-f61c-4ad3-a604-abea6e9b75d1","type":"CustomJS"}],"pinchend":[{"id":"321adff0-003a-4a0b-a310-36eb8daf0f81","type":"CustomJS"}],"pinchstart":[{"id":"ad88687d-baee-43b6-95a6-8ecd651c16d8","type":"CustomJS"}],"press":[{"id":"a1f0552b-6413-4b15-86fc-82fa57c11003","type":"CustomJS"}],"tap":[{"id":"bada7c4e-705c-46de-a31a-353aba2ed913","type":"CustomJS"}],"wheel":[{"id":"375bb65a-7bfe-4409-a0e1-2efca4595292","type":"CustomJS"}]},"left":[{"id":"fc5de1af-de61-4edb-9d0a-a0f46e4c9056","type":"LinearAxis"}],"renderers":[{"id":"a9b3cadd-5c89-414a-8583-ffb2f8755f79","type":"LinearAxis"},{"id":"d9fa96c1-7e8c-4562-be86-4cc9c8490d1b","type":"Grid"},{"id":"fc5de1af-de61-4edb-9d0a-a0f46e4c9056","type":"LinearAxis"},{"id":"52118200-1831-404e-9548-f606a6152d6a","type":"Grid"},{"id":"a0d19e04-db1f-4538-a1bd-a0b6392c2b6a","type":"GlyphRenderer"}],"title":{"id":"dea11156-48de-4b09-84bc-092eb9bb774e","type":"Title"},"toolbar":{"id":"0445ba96-dde2-4a7e-a736-b6ba00dcad41","type":"Toolbar"},"x_range":{"id":"189b3f96-0383-49c5-ac69-bcd8392b535f","type":"DataRange1d"},"x_scale":{"id":"018e6473-1378-45fd-ac90-eaaf810cac3d","type":"LinearScale"},"y_range":{"id":"f5b9c378-37e0-462d-993f-5fe97348a44f","type":"DataRange1d"},"y_scale":{"id":"ccb9ac1c-af7e-415b-95fc-fb6615e63d27","type":"LinearScale"}},"id":"7d4ef6fb-db3d-41c3-8269-f6768b093541","subtype":"Figure","type":"Plot"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"51890d3e-8549-49b1-add3-cfd8d115d971","type":"CustomJS"},{"attributes":{},"id":"018e6473-1378-45fd-ac90-eaaf810cac3d","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"93b33fcd-0634-45a7-8227-ebfaeedd5058","type":"CustomJS"},{"attributes":{},"id":"ccb9ac1c-af7e-415b-95fc-fb6615e63d27","type":"LinearScale"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"dda94144-a237-4696-974d-069e86775fc6","type":"CustomJS"},{"attributes":{"plot":{"id":"7d4ef6fb-db3d-41c3-8269-f6768b093541","subtype":"Figure","type":"Plot"},"ticker":{"id":"6b55f748-43e0-48a0-8cab-55768a272ba9","type":"BasicTicker"}},"id":"d9fa96c1-7e8c-4562-be86-4cc9c8490d1b","type":"Grid"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"ad88687d-baee-43b6-95a6-8ecd651c16d8","type":"CustomJS"},{"attributes":{"formatter":{"id":"eb679563-8388-48ba-9dbc-ab3aa63710d7","type":"BasicTickFormatter"},"plot":{"id":"7d4ef6fb-db3d-41c3-8269-f6768b093541","subtype":"Figure","type":"Plot"},"ticker":{"id":"6b55f748-43e0-48a0-8cab-55768a272ba9","type":"BasicTicker"}},"id":"a9b3cadd-5c89-414a-8583-ffb2f8755f79","type":"LinearAxis"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"321adff0-003a-4a0b-a310-36eb8daf0f81","type":"CustomJS"},{"attributes":{},"id":"6b55f748-43e0-48a0-8cab-55768a272ba9","type":"BasicTicker"},{"attributes":{"formatter":{"id":"64f3ddd7-4b4f-4b5f-8683-85b82f5d6b26","type":"BasicTickFormatter"},"plot":{"id":"7d4ef6fb-db3d-41c3-8269-f6768b093541","subtype":"Figure","type":"Plot"},"ticker":{"id":"8f2f3149-7d44-4a48-8ddd-c497aa937ea4","type":"BasicTicker"}},"id":"fc5de1af-de61-4edb-9d0a-a0f46e4c9056","type":"LinearAxis"},{"attributes":{"args":{"div":{"id":"d1bb788a-9744-49c3-855e-0cf5d043f7af","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;scale&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"8169486c-f61c-4ad3-a604-abea6e9b75d1","type":"CustomJS"},{"attributes":{},"id":"8f2f3149-7d44-4a48-8ddd-c497aa937ea4","type":"BasicTicker"},{"attributes":{"dimension":1,"plot":{"id":"7d4ef6fb-db3d-41c3-8269-f6768b093541","subtype":"Figure","type":"Plot"},"ticker":{"id":"8f2f3149-7d44-4a48-8ddd-c497aa937ea4","type":"BasicTicker"}},"id":"52118200-1831-404e-9548-f606a6152d6a","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"15e4f9b4-d2c3-4d4c-bb3d-7e07ba4bab62","type":"Circle"},{"attributes":{},"id":"64f3ddd7-4b4f-4b5f-8683-85b82f5d6b26","type":"BasicTickFormatter"},{"attributes":{"plot":null,"text":""},"id":"dea11156-48de-4b09-84bc-092eb9bb774e","type":"Title"},{"attributes":{},"id":"21c902e6-ebc5-47ca-af25-0c7db25d2fe1","type":"PanTool"},{"attributes":{"source":{"id":"6deb9777-9285-439f-9d58-4007f44cdfd7","type":"ColumnDataSource"}},"id":"00c1c442-6a46-4701-b4c0-5f2dcf8e095b","type":"CDSView"},{"attributes":{},"id":"4781479d-79b9-45c2-94ac-af660d019a71","type":"WheelZoomTool"},{"attributes":{},"id":"6fbb1553-b5c2-45be-87e9-48df72195b1f","type":"ZoomInTool"},{"attributes":{},"id":"4b200948-29fd-4a09-9c78-6a53fcd2a91b","type":"ZoomOutTool"},{"attributes":{},"id":"e7eb2953-cd99-452a-a9a6-512e56ca2e2e","type":"ResetTool"},{"attributes":{"data_source":{"id":"6deb9777-9285-439f-9d58-4007f44cdfd7","type":"ColumnDataSource"},"glyph":{"id":"6ae3848e-9f55-48d7-bdaa-dbecfb0d3886","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"15e4f9b4-d2c3-4d4c-bb3d-7e07ba4bab62","type":"Circle"},"selection_glyph":null,"view":{"id":"00c1c442-6a46-4701-b4c0-5f2dcf8e095b","type":"CDSView"}},"id":"a0d19e04-db1f-4538-a1bd-a0b6392c2b6a","type":"GlyphRenderer"}],"root_ids":["9bcddd91-d1c9-4fc8-9ed0-7f4cbf8f0e23"]},"title":"Bokeh Application","version":"0.12.12"}}';
                  var render_items = [{"docid":"c54e6a16-8e4b-4f9d-8417-4797e0b6cf55","elementid":"b8c3a4da-1057-41a8-a833-da649ea94b06","modelid":"9bcddd91-d1c9-4fc8-9ed0-7f4cbf8f0e23"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.12.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.12.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.12.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.12.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.12.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.12.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();