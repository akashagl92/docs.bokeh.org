(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof (root._bokeh_onload_callbacks) === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) { callback() });
        }
        finally {
          delete root._bokeh_onload_callbacks
        }
        console.info("Bokeh: all callbacks have finished");
      }
    
      function load_libs(js_urls, callback) {
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.log("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.log("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = js_urls.length;
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var s = document.createElement('script');
          s.src = url;
          s.async = false;
          s.onreadystatechange = s.onload = function() {
            root._bokeh_is_loading--;
            if (root._bokeh_is_loading === 0) {
              console.log("Bokeh: all BokehJS libraries loaded");
              run_callbacks()
            }
          };
          s.onerror = function() {
            console.warn("failed to load library " + url);
          };
          console.log("Bokeh: injecting script tag for BokehJS library: ", url);
          document.getElementsByTagName("head")[0].appendChild(s);
        }
      };var element = document.getElementById("6c87d6e0-60ec-40fe-ac57-1da1eb89f5bd");
      if (element == null) {
        console.log("Bokeh: ERROR: autoload.js configured with elementid '6c87d6e0-60ec-40fe-ac57-1da1eb89f5bd' but no matching script tag was found. ")
        return false;
      }
    
      var js_urls = ["https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js", "https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/js/ion.rangeSlider.js", "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-0.12.15.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.15.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.15.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-0.12.15.min.js"];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function(root, factory) {
          //  if(typeof exports === 'object' && typeof module === 'object')
          //    factory(require("Bokeh"));
          //  else if(typeof define === 'function' && define.amd)
          //    define(["Bokeh"], factory);
          //  else if(typeof exports === 'object')
          //    factory(require("Bokeh"));
          //  else
              factory(root["Bokeh"]);
          })(this, function(Bokeh) {
            var define;
            return (function outer(modules, entry) {
            if (Bokeh != null) {
              return Bokeh.register_plugin(modules, {}, entry);
            } else {
              throw new Error("Cannot find Bokeh. You have to load it prior to loading plugins.");
            }
          })
          ({
            "custom/main": function(require, module, exports) {
              var models = {
                "Surface3d": require("custom/bk_script_66d434674bd945339d427d3410a62a05.surface3d").Surface3d,
          "IonRangeSlider": require("custom/bk_script_6bbffed6a92843428ebf149ab2d70e33.ion_range_slider").IonRangeSlider,
          "Custom": require("custom/bk_script_8355b62fc4e447beb7e563146c5db4ab.custom").Custom,
          "DrawTool": require("custom/bk_script_8b6a824193b54b1d88fc7b74ac6d180e.draw_tool").DrawTool,
          "LatexLabel": require("custom/bk_script_bd1bb66dde88488cb0e0195aca481dbb.latex_label").LatexLabel,
          "MyFormatter": require("custom/bk_script_f862fae40e2d4b40b6644b159157f372.my_formatter").MyFormatter
              };
              require("base").register_models(models);
              module.exports = models;
            },
            "custom/bk_script_66d434674bd945339d427d3410a62a05.surface3d": function(require, module, exports) {
          "use strict";
          // This file contains the JavaScript (CoffeeScript) implementation
          // for a Bokeh custom extension. The "surface3d.py" contains the
          // python counterpart.
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          // This custom model wraps one part of the third-party vis.js library:
          //     http://visjs.org/index.html
          // Making it easy to hook up python data analytics tools (NumPy, SciPy,
          // Pandas, etc.) to web presentations using the Bokeh server.
          // These "require" lines are similar to python "import" statements
          var OPTIONS;
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          // This defines some default options for the Graph3d feature of vis.js
          // See: http://visjs.org/graph3d_examples.html for more details.
          OPTIONS = {
              width: '600px',
              height: '600px',
              style: 'surface',
              showPerspective: true,
              showGrid: true,
              keepAspectRatio: true,
              verticalRatio: 1.0,
              legendLabel: 'stuff',
              cameraPosition: {
                  horizontal: -0.35,
                  vertical: 0.22,
                  distance: 1.8
              }
          };
          // To create custom model extensions that will render on to the HTML canvas
          // or into the DOM, we must create a View subclass for the model.
          // In this case we will subclass from the existing BokehJS ``LayoutDOMView``
          exports.Surface3dView = /** @class */ (function (_super) {
              __extends(Surface3dView, _super);
              function Surface3dView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              Surface3dView.prototype.initialize = function (options) {
                  var _this = this;
                  var script, url;
                  _super.prototype.initialize.call(this, options);
                  url = "https://cdnjs.cloudflare.com/ajax/libs/vis/4.16.1/vis.min.js";
                  script = document.createElement('script');
                  script.src = url;
                  script.async = false;
                  script.onreadystatechange = script.onload = function () {
                      return _this._init();
                  };
                  return document.querySelector("head").appendChild(script);
              };
              Surface3dView.prototype._init = function () {
                  // Create a new Graph3s using the vis.js API. This assumes the vis.js has
                  // already been loaded (e.g. in a custom app template). In the future Bokeh
                  // models will be able to specify and load external scripts automatically.
                  var _this = this;
                  // BokehJS Views create <div> elements by default, accessible as @el. Many
                  // Bokeh views ignore this default <div>, and instead do things like draw
                  // to the HTML canvas. In this case though, we use the <div> to attach a
                  // Graph3d to the DOM.
                  this._graph = new vis.Graph3d(this.el, this.get_data(), OPTIONS);
                  // Set a listener so that when the Bokeh data source has a change
                  // event, we can process the new data
                  return this.connect(this.model.data_source.change, function () {
                      return _this._graph.setData(_this.get_data());
                  });
              };
              // This is the callback executed when the Bokeh data has an change. Its basic
              // function is to adapt the Bokeh data source to the vis.js DataSet format.
              Surface3dView.prototype.get_data = function () {
                  var data, i, j, ref, source;
                  data = new vis.DataSet();
                  source = this.model.data_source;
                  for (i = j = 0, ref = source.get_length(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
                      data.add({
                          x: source.get_column(this.model.x)[i],
                          y: source.get_column(this.model.y)[i],
                          z: source.get_column(this.model.z)[i],
                          style: source.get_column(this.model.color)[i]
                      });
                  }
                  return data;
              };
              return Surface3dView;
          }(layout_dom_1.LayoutDOMView));
          exports.Surface3d = (function () {
              // We must also create a corresponding JavaScript BokehJS model subclass to
              // correspond to the python Bokeh model subclass. In this case, since we want
              // an element that can position itself in the DOM according to a Bokeh layout,
              // we subclass from ``LayoutDOM``
              var Surface3d = /** @class */ (function (_super) {
                  __extends(Surface3d, _super);
                  function Surface3d() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return Surface3d;
              }(layout_dom_1.LayoutDOM));
              ;
              // This is usually boilerplate. In some cases there may not be a view.
              Surface3d.prototype.default_view = exports.Surface3dView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              Surface3d.prototype.type = "Surface3d";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. ``bokeh.core.properties.String`` will be
              // ``p.String`` in the JS implementatin. Where the JS type system is not yet
              // as rich, you can use ``p.Any`` as a "wildcard" property type.
              Surface3d.define({
                  x: [p.String],
                  y: [p.String],
                  z: [p.String],
                  color: [p.String],
                  data_source: [p.Instance]
              });
              return Surface3d;
          })();
    
          },
          "custom/bk_script_6bbffed6a92843428ebf149ab2d70e33.ion_range_slider": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var callback_1 = require("core/util/callback");
          var p = require("core/properties");
          var dom_1 = require("core/dom");
          var input_widget_1 = require("models/widgets/input_widget");
          // This model will actually need to render things, so we must provide
          // view. The LayoutDOM model has a view already, so we will start with that
          exports.IonRangeSliderView = /** @class */ (function (_super) {
              __extends(IonRangeSliderView, _super);
              function IonRangeSliderView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              IonRangeSliderView.prototype._createElement = function () {
                  var el;
                  el = _super.prototype._createElement.call(this);
                  this.$el = $(el);
                  return el;
              };
              IonRangeSliderView.prototype.template = function () {
                  var title, value;
                  if (this.model.title != null) {
                      if (this.model.title.length !== 0) {
                          title = dom_1.label({
                              for: this.model.id
                          }, " " + this.model.title + ": ");
                      }
                      value = dom_1.input({
                          type: "text",
                          id: this.model.id,
                          readonly: true
                      });
                  }
                  return dom_1.div({
                      class: "bk-slider-parent"
                  }, title, value, dom_1.div({
                      class: "bk-slider-horizontal"
                  }, dom_1.input({
                      type: "text",
                      class: "slider",
                      id: this.model.id
                  })));
              };
              IonRangeSliderView.prototype.initialize = function (options) {
                  _super.prototype.initialize.call(this, options);
                  this.connect(this.model.change, this.render);
                  dom_1.empty(this.el);
                  this.el.appendChild(this.template());
                  this.callbackWrapper = null;
                  if (this.model.callback_policy === 'continuous') {
                      this.callbackWrapper = function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      };
                  }
                  if (this.model.callback_policy === 'throttle' && this.model.callback) {
                      this.callbackWrapper = callback_1.throttle(function () {
                          var ref;
                          return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                      }, this.model.callback_throttle);
                  }
                  return this.render();
              };
              IonRangeSliderView.prototype.render = function () {
                  var _this = this;
                  var disable, from, grid, max, min, opts, range, slider, step, to;
                  // BokehJS Views create <div> elements by default, accessible as @$el.
                  // Many Bokeh views ignore this default <div>, and instead do things
                  // like draw to the HTML canvas. In this case though, we change the
                  // contents of the <div>, based on the current slider value.
                  _super.prototype.render.call(this);
                  // Set up parameters
                  max = this.model.end;
                  min = this.model.start;
                  grid = this.model.grid;
                  disable = this.model.disabled;
                  range = this.model.range || [max, min];
                  from = range[0], to = range[1];
                  step = this.model.step || ((max - min) / 50);
                  opts = {
                      type: "double",
                      grid: grid,
                      min: min,
                      max: max,
                      from: from,
                      to: to,
                      step: step,
                      disable: disable,
                      onChange: function (data) {
                          return _this.slide(data);
                      },
                      onFinish: function (data) {
                          return _this.slidestop(data);
                      }
                  };
                  dom_1.input = this.$el.find('.slider')[0];
                  slider = jQuery(dom_1.input).ionRangeSlider(opts);
                  range = [from, to];
                  this.$el.find("#" + this.model.id).val(range.join(' - '));
                  this.$el.find('.bk-slider-parent').height(this.model.height);
                  return this;
              };
              IonRangeSliderView.prototype.slidestop = function (data) {
                  var ref;
                  if (this.model.callback_policy === 'mouseup' || this.model.callback_policy === 'throttle') {
                      return (ref = this.model.callback) != null ? ref.execute(this.model) : void 0;
                  }
              };
              IonRangeSliderView.prototype.slide = function (data) {
                  var range, value;
                  range = [data.from, data.to];
                  value = range.join(' - ');
                  this.$el.find("#" + this.model.id).val(value);
                  this.model.range = range;
                  if (this.callbackWrapper) {
                      return this.callbackWrapper();
                  }
              };
              return IonRangeSliderView;
          }(input_widget_1.InputWidgetView));
          exports.IonRangeSlider = (function () {
              var IonRangeSlider = /** @class */ (function (_super) {
                  __extends(IonRangeSlider, _super);
                  function IonRangeSlider() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return IonRangeSlider;
              }(input_widget_1.InputWidget));
              ;
              // If there is an associated view, this is boilerplate.
              IonRangeSlider.prototype.default_view = exports.IonRangeSliderView;
              // The ``type`` class attribute should generally match exactly the name
              // of the corresponding Python class.
              IonRangeSlider.prototype.type = "IonRangeSlider";
              // The @define block adds corresponding "properties" to the JS model. These
              // should basically line up 1-1 with the Python model class. Most property
              // types have counterparts, e.g. bokeh.core.properties.String will be
              // p.String in the JS implementation. Where the JS type system is not yet
              // as rich, you can use p.Any as a "wildcard" property type.
              IonRangeSlider.define({
                  range: [p.Any],
                  start: [p.Number, 0],
                  end: [p.Number, 1],
                  step: [p.Number, 0.1],
                  grid: [p.Bool, true],
                  callback_throttle: [p.Number, 200],
                  callback_policy: [p.String, "throttle"]
              });
              return IonRangeSlider;
          })();
    
          },
          "custom/bk_script_8355b62fc4e447beb7e563146c5db4ab.custom": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var dom_1 = require("core/dom");
          var p = require("core/properties");
          var layout_dom_1 = require("models/layouts/layout_dom");
          var CustomView = /** @class */ (function (_super) {
              __extends(CustomView, _super);
              function CustomView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              CustomView.prototype.initialize = function (options) {
                  var _this = this;
                  _super.prototype.initialize.call(this, options);
                  this.render();
                  // Set BokehJS listener so that when the Bokeh slider has a change
                  // event, we can process the new data
                  this.connect(this.model.slider.change, function () { return _this.render(); });
              };
              CustomView.prototype.render = function () {
                  // BokehjS Views create <div> elements by default, accessible as
                  // ``this.el``. Many Bokeh views ignore this default <div>, and instead
                  // do things like draw to the HTML canvas. In this case though, we change
                  // the contents of the <div>, based on the current slider value.
                  dom_1.empty(this.el);
                  this.el.appendChild(dom_1.div({
                      style: {
                          'padding': '2px',
                          'color': '#b88d8e',
                          'background-color': '#2a3153',
                      },
                  }, this.model.text + ": " + this.model.slider.value));
              };
              return CustomView;
          }(layout_dom_1.LayoutDOMView));
          exports.CustomView = CustomView;
          var Custom = /** @class */ (function (_super) {
              __extends(Custom, _super);
              function Custom() {
                  var _this = _super !== null && _super.apply(this, arguments) || this;
                  // If there is an associated view, this is typically boilerplate.
                  _this.default_view = CustomView;
                  // The ``type`` class attribute should generally match exactly the name
                  // of the corresponding Python class.
                  _this.type = "Custom";
                  return _this;
              }
              return Custom;
          }(layout_dom_1.LayoutDOM));
          exports.Custom = Custom;
          // The @define block adds corresponding "properties" to the JS model. These
          // should normally line up 1-1 with the Python model class. Most property
          // types have counterparts, e.g. bokeh.core.properties.String will be
          // ``p.String`` in the JS implementation. Any time the JS type system is not
          // yet as complete, you can use ``p.Any`` as a "wildcard" property type.
          Custom.define({
              text: [p.String],
              slider: [p.Any],
          });
    
          },
          "custom/bk_script_8b6a824193b54b1d88fc7b74ac6d180e.draw_tool": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var p = require("core/properties");
          var gesture_tool_1 = require("models/tools/gestures/gesture_tool");
          exports.DrawToolView = /** @class */ (function (_super) {
              __extends(DrawToolView, _super);
              function DrawToolView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              // this is executed when the pan/drag event starts
              DrawToolView.prototype._pan_start = function (e) {
                  return this.model.source.data = {
                      x: [],
                      y: []
                  };
              };
              // this is executed on subsequent mouse/touch moves
              DrawToolView.prototype._pan = function (e) {
                  var frame, sx, sy, x, y;
                  frame = this.plot_model.frame;
                  (sx = e.sx, sy = e.sy);
                  if (!frame.bbox.contains(sx, sy)) {
                      return null;
                  }
                  x = frame.xscales['default'].invert(sx);
                  y = frame.yscales['default'].invert(sy);
                  this.model.source.data.x.push(x);
                  this.model.source.data.y.push(y);
                  return this.model.source.change.emit();
              };
              // this is executed then the pan/drag ends
              DrawToolView.prototype._pan_end = function (e) {
                  return null;
              };
              return DrawToolView;
          }(gesture_tool_1.GestureToolView));
          exports.DrawTool = (function () {
              var DrawTool = /** @class */ (function (_super) {
                  __extends(DrawTool, _super);
                  function DrawTool() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return DrawTool;
              }(gesture_tool_1.GestureTool));
              ;
              DrawTool.prototype.default_view = exports.DrawToolView;
              DrawTool.prototype.type = "DrawTool";
              DrawTool.prototype.tool_name = "Drag Span";
              DrawTool.prototype.icon = "bk-tool-icon-lasso-select";
              DrawTool.prototype.event_type = "pan";
              DrawTool.prototype.default_order = 12;
              DrawTool.define({
                  source: [p.Instance]
              });
              return DrawTool;
          })();
    
          },
          "custom/bk_script_bd1bb66dde88488cb0e0195aca481dbb.latex_label": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var label_1 = require("models/annotations/label");
          exports.LatexLabelView = /** @class */ (function (_super) {
              __extends(LatexLabelView, _super);
              function LatexLabelView() {
                  return _super !== null && _super.apply(this, arguments) || this;
              }
              LatexLabelView.prototype.render = function () {
                  var angle, panel, ref, sx, sy, xscale, yscale;
                  //--- Start of copied section from ``Label.render`` implementation
                  // Here because AngleSpec does units tranform and label doesn't support specs
                  switch (this.model.angle_units) {
                      case "rad":
                          angle = -1 * this.model.angle;
                          break;
                      case "deg":
                          angle = -1 * this.model.angle * Math.PI / 180.0;
                  }
                  panel = (ref = this.model.panel) != null ? ref : this.plot_view.frame;
                  xscale = this.plot_view.frame.xscales[this.model.x_range_name];
                  yscale = this.plot_view.frame.yscales[this.model.y_range_name];
                  sx = this.model.x_units === "data" ? xscale.compute(this.model.x) : panel.xview.compute(this.model.x);
                  sy = this.model.y_units === "data" ? yscale.compute(this.model.y) : panel.yview.compute(this.model.y);
                  sx += this.model.x_offset;
                  sy -= this.model.y_offset;
                  //--- End of copied section from ``Label.render`` implementation
                  // Must render as superpositioned div (not on canvas) so that KaTex
                  // css can properly style the text
                  this._css_text(this.plot_view.canvas_view.ctx, "", sx, sy, angle);
                  // ``katex`` is loaded into the global window at runtime
                  // katex.renderToString returns a html ``span`` element
                  return katex.render(this.model.text, this.el, {
                      displayMode: true
                  });
              };
              return LatexLabelView;
          }(label_1.LabelView));
          exports.LatexLabel = (function () {
              var LatexLabel = /** @class */ (function (_super) {
                  __extends(LatexLabel, _super);
                  function LatexLabel() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  return LatexLabel;
              }(label_1.Label));
              ;
              LatexLabel.prototype.type = 'LatexLabel';
              LatexLabel.prototype.default_view = exports.LatexLabelView;
              return LatexLabel;
          })();
    
          },
          "custom/bk_script_f862fae40e2d4b40b6644b159157f372.my_formatter": function(require, module, exports) {
          "use strict";
          var __extends = (this && this.__extends) || (function () {
              var extendStatics = Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                  function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
              return function (d, b) {
                  extendStatics(d, b);
                  function __() { this.constructor = d; }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
              };
          })();
          Object.defineProperty(exports, "__esModule", { value: true });
          var tick_formatter_1 = require("models/formatters/tick_formatter");
          exports.MyFormatter = (function () {
              var MyFormatter = /** @class */ (function (_super) {
                  __extends(MyFormatter, _super);
                  function MyFormatter() {
                      return _super !== null && _super.apply(this, arguments) || this;
                  }
                  // TickFormatters should implement this method, which accepts a lisst
                  // of numbers (ticks) and returns a list of strings
                  MyFormatter.prototype.doFormat = function (ticks) {
                      var formatted, i, j, ref;
                      // format the first tick as-is
                      formatted = ["" + ticks[0]];
                      // format the remaining ticks as a difference from the first
                      for (i = j = 1, ref = ticks.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {
                          formatted.push("+" + (ticks[i] - ticks[0]).toPrecision(2));
                      }
                      return formatted;
                  };
                  return MyFormatter;
              }(tick_formatter_1.TickFormatter));
              ;
              MyFormatter.prototype.type = "MyFormatter";
              return MyFormatter;
          })();
    
          }
          }, "custom/main");
          ;
          });
    
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"1968a2ba-f6ba-499f-9f14-3009a92caa72":{"roots":{"references":[{"attributes":{},"id":"411f788b-b440-4a87-9401-32c0935ffaee","type":"LinearScale"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_scroll":"auto","active_tap":"auto","tools":[{"id":"f7a5b522-0a77-44fa-ac25-fa7f10c42a8a","type":"PanTool"},{"id":"c1f87b40-1820-46d5-b2d0-594d34ac6209","type":"WheelZoomTool"},{"id":"86daf035-03c7-4e23-b881-66bb60753530","type":"ZoomInTool"},{"id":"8e17328e-497f-4e74-8ade-f7c86932dcd1","type":"ZoomOutTool"},{"id":"240e8a62-d692-4aaf-a8ee-ba27b0eec2f0","type":"ResetTool"}]},"id":"285ce70d-bdef-45a8-b36a-18c530e9075a","type":"Toolbar"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"cc1ab052-b94f-4325-a850-910995b50166","type":"CustomJS"},{"attributes":{"plot":{"id":"a62b6c9c-24f2-4a06-a285-db5bccf422cc","subtype":"Figure","type":"Plot"},"ticker":{"id":"7140c45c-74c0-490b-b264-fb8c29b93044","type":"BasicTicker"}},"id":"5b968bd2-02ec-4c62-95c8-8c05249eef95","type":"Grid"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta_x&#x27;, &#x27;delta_y&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f83f7165-9322-4939-b58b-2c34abe92d0a","type":"CustomJS"},{"attributes":{"formatter":{"id":"aae75f03-b8f3-4eb7-b7b5-c407f074351a","type":"BasicTickFormatter"},"plot":{"id":"a62b6c9c-24f2-4a06-a285-db5bccf422cc","subtype":"Figure","type":"Plot"},"ticker":{"id":"7140c45c-74c0-490b-b264-fb8c29b93044","type":"BasicTicker"}},"id":"8e015ea4-c8c2-4e58-a9c7-e43dfe18e5b3","type":"LinearAxis"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"b4dacb64-59e6-4707-add1-3813da6a30b7","type":"CustomJS"},{"attributes":{},"id":"7140c45c-74c0-490b-b264-fb8c29b93044","type":"BasicTicker"},{"attributes":{"formatter":{"id":"69d47169-6e51-4099-b237-95c91f7ec81c","type":"BasicTickFormatter"},"plot":{"id":"a62b6c9c-24f2-4a06-a285-db5bccf422cc","subtype":"Figure","type":"Plot"},"ticker":{"id":"73411070-486a-488c-b904-8c805eb727cb","type":"BasicTicker"}},"id":"d16fa180-35cc-4b08-96b2-1d769bfc1441","type":"LinearAxis"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;scale&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"edb992df-1962-40e0-90d3-b259b0cef78e","type":"CustomJS"},{"attributes":{},"id":"73411070-486a-488c-b904-8c805eb727cb","type":"BasicTicker"},{"attributes":{"dimension":1,"plot":{"id":"a62b6c9c-24f2-4a06-a285-db5bccf422cc","subtype":"Figure","type":"Plot"},"ticker":{"id":"73411070-486a-488c-b904-8c805eb727cb","type":"BasicTicker"}},"id":"a3351acc-b7b8-472a-abb3-7fb75e9dbfdb","type":"Grid"},{"attributes":{"fill_alpha":{"value":0.1},"fill_color":{"value":"#1f77b4"},"line_alpha":{"value":0.1},"line_color":{"value":"#1f77b4"},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"a9b03013-b147-45a5-bdec-bb4a628ff632","type":"Circle"},{"attributes":{"button_type":"success","callback":null,"icon":null,"js_event_callbacks":{"button_click":[{"id":"dada1f01-67d1-47c8-a858-7980f6498781","type":"CustomJS"}]}},"id":"98a5092a-a28b-4812-acab-98cfed4b0169","type":"Button"},{"attributes":{},"id":"aae75f03-b8f3-4eb7-b7b5-c407f074351a","type":"BasicTickFormatter"},{"attributes":{},"id":"f7a5b522-0a77-44fa-ac25-fa7f10c42a8a","type":"PanTool"},{"attributes":{"source":{"id":"a0462fa0-54c6-45e4-93d9-dc9062ee83e8","type":"ColumnDataSource"}},"id":"92df1bc6-c595-4aae-9280-2c278cd7b888","type":"CDSView"},{"attributes":{},"id":"c1f87b40-1820-46d5-b2d0-594d34ac6209","type":"WheelZoomTool"},{"attributes":{},"id":"86daf035-03c7-4e23-b881-66bb60753530","type":"ZoomInTool"},{"attributes":{},"id":"8e17328e-497f-4e74-8ade-f7c86932dcd1","type":"ZoomOutTool"},{"attributes":{},"id":"240e8a62-d692-4aaf-a8ee-ba27b0eec2f0","type":"ResetTool"},{"attributes":{"data_source":{"id":"a0462fa0-54c6-45e4-93d9-dc9062ee83e8","type":"ColumnDataSource"},"glyph":{"id":"bd3f011d-912f-47b7-80d7-cbdc6ace2b42","type":"Circle"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"a9b03013-b147-45a5-bdec-bb4a628ff632","type":"Circle"},"selection_glyph":null,"view":{"id":"92df1bc6-c595-4aae-9280-2c278cd7b888","type":"CDSView"}},"id":"22578d81-58e9-4a00-8593-b1576f4b665f","type":"GlyphRenderer"},{"attributes":{"plot":null,"text":""},"id":"cdb8807e-e6e8-4a40-8c70-6d184d18e2d0","type":"Title"},{"attributes":{},"id":"69d47169-6e51-4099-b237-95c91f7ec81c","type":"BasicTickFormatter"},{"attributes":{"children":[{"id":"a62b6c9c-24f2-4a06-a285-db5bccf422cc","subtype":"Figure","type":"Plot"},{"id":"43b58f53-3419-49a6-bb94-e8635e1bd9bf","type":"WidgetBox"}]},"id":"136bbd34-4b07-42eb-b68b-545754847d07","type":"Row"},{"attributes":{"width":1000},"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"},{"attributes":{"children":[{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}],"width":1000},"id":"43b58f53-3419-49a6-bb94-e8635e1bd9bf","type":"WidgetBox"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"c50a96b5-4e69-4624-84bf-93060eb56fb2","type":"CustomJS"},{"attributes":{"children":[{"id":"2b760337-aadf-4720-9935-05e8b0f9eedd","type":"WidgetBox"},{"id":"136bbd34-4b07-42eb-b68b-545754847d07","type":"Row"}]},"id":"75c763a8-63e8-4c7d-b981-f903f5aeb96f","type":"Column"},{"attributes":{"children":[{"id":"98a5092a-a28b-4812-acab-98cfed4b0169","type":"Button"}]},"id":"2b760337-aadf-4720-9935-05e8b0f9eedd","type":"WidgetBox"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"15ff658d-dc4b-43cf-a9c8-107a0ec06cf7","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"dada1f01-67d1-47c8-a858-7980f6498781","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = []; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"986bd69e-e36b-49e7-8047-ecc9ab9ee2ab","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;, &#x27;delta&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"fc20beb7-3dfc-4110-a7a2-c9dd5f69a939","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"99c7a6f6-855d-4301-852b-271f2c5fd7ac","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"eff0f388-5471-4d5a-af82-bfcbf1a99d46","type":"CustomJS"},{"attributes":{"below":[{"id":"8e015ea4-c8c2-4e58-a9c7-e43dfe18e5b3","type":"LinearAxis"}],"js_event_callbacks":{"doubletap":[{"id":"eff0f388-5471-4d5a-af82-bfcbf1a99d46","type":"CustomJS"}],"lodend":[{"id":"986bd69e-e36b-49e7-8047-ecc9ab9ee2ab","type":"CustomJS"}],"lodstart":[{"id":"15ff658d-dc4b-43cf-a9c8-107a0ec06cf7","type":"CustomJS"}],"mouseenter":[{"id":"839e13dc-3380-40a9-90e3-52b2ec2ef4ea","type":"CustomJS"}],"mouseleave":[{"id":"fa906e5b-7ff2-4a99-8503-334b7b17236a","type":"CustomJS"}],"mousemove":[{"id":"017f931a-a670-400b-9b3b-2dd69e24b0e6","type":"CustomJS"}],"pan":[{"id":"f83f7165-9322-4939-b58b-2c34abe92d0a","type":"CustomJS"}],"panend":[{"id":"99c7a6f6-855d-4301-852b-271f2c5fd7ac","type":"CustomJS"}],"panstart":[{"id":"f149cca5-31cf-4057-ae4c-5617126ef909","type":"CustomJS"}],"pinch":[{"id":"edb992df-1962-40e0-90d3-b259b0cef78e","type":"CustomJS"}],"pinchend":[{"id":"b4dacb64-59e6-4707-add1-3813da6a30b7","type":"CustomJS"}],"pinchstart":[{"id":"cc1ab052-b94f-4325-a850-910995b50166","type":"CustomJS"}],"press":[{"id":"a8db9d2e-0f39-4b5c-95b9-fb4c7d238074","type":"CustomJS"}],"tap":[{"id":"c50a96b5-4e69-4624-84bf-93060eb56fb2","type":"CustomJS"}],"wheel":[{"id":"fc20beb7-3dfc-4110-a7a2-c9dd5f69a939","type":"CustomJS"}]},"left":[{"id":"d16fa180-35cc-4b08-96b2-1d769bfc1441","type":"LinearAxis"}],"renderers":[{"id":"8e015ea4-c8c2-4e58-a9c7-e43dfe18e5b3","type":"LinearAxis"},{"id":"5b968bd2-02ec-4c62-95c8-8c05249eef95","type":"Grid"},{"id":"d16fa180-35cc-4b08-96b2-1d769bfc1441","type":"LinearAxis"},{"id":"a3351acc-b7b8-472a-abb3-7fb75e9dbfdb","type":"Grid"},{"id":"22578d81-58e9-4a00-8593-b1576f4b665f","type":"GlyphRenderer"}],"title":{"id":"cdb8807e-e6e8-4a40-8c70-6d184d18e2d0","type":"Title"},"toolbar":{"id":"285ce70d-bdef-45a8-b36a-18c530e9075a","type":"Toolbar"},"x_range":{"id":"83a08c1c-5c5a-41c4-add3-af4c03124de0","type":"DataRange1d"},"x_scale":{"id":"d5ae5bda-957f-4407-8f07-5fc19d71f400","type":"LinearScale"},"y_range":{"id":"bbea7e9b-5206-4790-a72c-c4fe3c5aa931","type":"DataRange1d"},"y_scale":{"id":"411f788b-b440-4a87-9401-32c0935ffaee","type":"LinearScale"}},"id":"a62b6c9c-24f2-4a06-a285-db5bccf422cc","subtype":"Figure","type":"Plot"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"a8db9d2e-0f39-4b5c-95b9-fb4c7d238074","type":"CustomJS"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"017f931a-a670-400b-9b3b-2dd69e24b0e6","type":"CustomJS"},{"attributes":{"callback":null},"id":"83a08c1c-5c5a-41c4-add3-af4c03124de0","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"839e13dc-3380-40a9-90e3-52b2ec2ef4ea","type":"CustomJS"},{"attributes":{"callback":null,"column_names":["radius","x","y","fill_color"],"data":{"fill_color":["#a67b96","#aeb796","#b49a96","#e97396","#eb8396","#bc8b96","#758096","#7c8596","#ca4f96","#ea5f96","#be1f96","#59db96","#e75c96","#b89a96","#eb6796","#91d496","#a69696","#a54296","#85ab96","#868096","#aedb96","#8c7596","#ea6d96","#8eb096","#d02896","#d98996","#dbd196","#7ea296","#3ad796","#b98a96","#c0a096","#e7aa96","#3a7296","#ee7796","#4acb96","#4a9196","#f49496","#dca796","#a36d96","#613896","#4b2f96","#e47a96","#f9be96","#e9d096","#d66a96","#f1de96","#6ca896","#543f96","#65d296","#3a7296","#515896","#d5da96","#9b6896","#c26d96","#549096","#806296","#d9e396","#a64c96","#7ba196","#adaa96","#529896","#a75c96","#54c896","#a4e096","#b0e296","#64ba96","#c64096","#dd1f96","#aa6a96","#99e596","#f23296","#c4be96","#58b696","#4bb796","#ef8396","#e5b696","#f0dd96","#bc3096","#ce2996","#8fc896","#7a5896","#433496","#d3a896","#ac5e96","#cd5696","#a92196","#6a6996","#df2e96","#ea4f96","#cb3f96","#9d6396","#6bdc96","#e8c296","#af4596","#347796","#573e96","#d3d296","#f79196","#60cd96","#abaf96","#bf8d96","#5ddb96","#c42896","#c29b96","#464996","#363196","#7d8d96","#cae496","#3bc996","#b2b796","#ee9996","#ed4b96","#3b7496","#497d96","#cf4a96","#b94996","#3a3396","#cf8b96","#cb4396","#77d096","#62b996","#752296","#4f8a96","#dbd396","#562a96","#66d296","#841f96","#c33c96","#e94196","#923996","#69cf96","#bbc196","#b67d96","#88a896","#5eb996","#994496","#be6496","#b6da96","#887396","#d73496","#563c96","#b27d96","#d69496","#86b596","#cb9a96","#4a2c96","#6ce196","#434996","#d6b196","#518096","#aa6c96","#d06896","#766b96","#b67796","#8c2296","#d98b96","#6f6f96","#4e2096","#ec2e96","#7ea696","#e0c996","#746096","#485d96","#595896","#3b2b96","#79e096","#409296","#f12c96","#938e96","#a82f96","#55cd96","#8ad196","#6a5596","#ee7396","#3bcd96","#402196","#828796","#e34896","#81b696","#6f4096","#4f5e96","#cea696","#58de96","#e5cc96","#875296","#e75d96","#f56f96","#387b96","#5a8896","#b46b96","#943996","#7f6996","#cf2d96","#d29496","#3f6c96","#b37a96","#e97196","#d07a96","#df6f96","#36a396","#948d96","#399296","#ac5496","#656096","#3c6096","#62d096","#c2d796","#cc9096","#e93296","#d7b396","#c7af96","#8fc596","#c55796","#c14a96","#a85096","#473796","#997896","#ca6a96","#682396","#39bb96","#51a896","#943f96","#bb8896","#d19e96","#9a2296","#eab496","#c7de96","#bd9d96","#c83a96","#ae6896","#998296","#4ac796","#c48d96","#572f96","#aaa596","#a32e96","#eca796","#719896","#ee3096","#85af96","#b64596","#9b5a96","#ec9e96","#33cf96","#9abd96","#73a796","#f49696","#c78296","#a39096","#f68b96","#f26296","#33b396","#c9ba96","#a8b896","#635696","#e87a96","#536396","#b78496","#eb7596","#a97696","#b49296","#c0c796","#47c196","#836496","#472f96","#f47596","#71ca96","#f28396","#4c8596","#f4e296","#858496","#b19596","#bbb696","#a8aa96","#64cb96","#c99996","#39dd96","#426696","#bc2096","#da9096","#768b96","#68bb96","#f74496","#b3b096","#65b296","#f54a96","#d81f96","#995296","#5c7396","#a2c496","#aeca96","#353096","#d5b196","#325396","#546096","#dc2096","#d7ce96","#c78c96","#b6be96","#82c496","#f2a696","#f6ab96","#606396","#b8cf96","#4b6c96","#465996","#cd2a96","#b19d96","#848b96","#d4be96","#5ccc96","#943d96","#976496","#b29296","#97bf96","#e63596","#ae2296","#aeb696","#9fdb96","#6ed996","#b84796","#e7db96","#e97096","#8ae596","#69e296","#98d496","#f13796","#ae8396","#579c96","#c93e96","#dcbe96","#9e8196","#3a5996","#3c4296","#b86296","#90ca96","#757f96","#9c6896","#61b796","#cd4996","#c89296","#563c96","#e54e96","#d12396","#9c9b96","#c38996","#a7d696","#96a496","#50c096","#58c796","#685696","#c29596","#882096","#97a996","#da6e96","#42cb96","#663f96","#cbab96","#5bb096","#ea5996","#613496","#c8c096","#f16a96","#e5d296","#83c096","#c0e196","#8b6496","#9be396","#5ca196","#b28d96","#f35e96","#566c96","#704e96","#461f96","#b64196","#cec496","#d35e96","#c62096","#4ddb96","#bb4196","#ba4b96","#f03b96","#59dc96","#367996","#893b96","#3b5c96","#4f9696","#889896","#949d96","#769896","#3ccd96","#342596","#7ec796","#adce96","#e2a296","#d2c096","#ec8f96","#a9bc96","#be5b96","#54b696","#d13e96","#58b196","#997296","#bc2896","#715196","#96b796","#9f3496","#ac2996","#f72a96","#b65896","#ba6096","#855496","#476a96","#3b8796","#e69696","#4e2596","#c08796","#3c5c96","#a14996","#e76296","#c3b996","#784996","#609896","#cc9f96","#eddd96","#776096","#aae196","#495796","#c04d96","#575596","#815a96","#478796","#ba8996","#bbe296","#74e096","#35b996","#847d96","#b7da96","#9aba96","#40dc96","#429396","#e54796","#878796","#385196","#5f3496","#906396","#344496","#60a796","#8cb596","#db7296","#b12c96","#6f5e96","#f2a296","#677996","#53ad96","#eb4696","#c1a096","#ae2e96","#eadf96","#73b796","#776696","#90b496","#42ad96","#a78c96","#a9a796","#4f8796","#a0d696","#d63596","#808f96","#752696","#8cb896","#65c396","#dd7896","#669e96","#66bd96","#694e96","#de2a96","#909596","#926f96","#d75a96","#603f96","#ba8f96","#f53296","#64cf96","#bdcf96","#ed3296","#e8a896","#f58696","#c4e096","#54ab96","#cf6f96","#805a96","#4c5096","#3f2496","#772d96","#d77896","#ad6c96","#453196","#f0ae96","#4a7396","#dc4796","#905696","#cdcb96","#bf4f96","#b4da96","#75e296","#cab496","#4d5596","#dc6696","#904b96","#ac4796","#675e96","#c92a96","#5acb96","#637396","#a99596","#3f7b96","#e9bf96","#7ba096","#aa6d96","#ac5596","#f19996","#f82996","#c2be96","#f07a96","#756996","#4f5696","#42b996","#a05696","#cdb096","#ab6296","#4e7396","#348296","#e64c96","#5d1e96","#338596","#7b6396","#cf1e96","#60b496","#b25e96","#5e2d96","#eede96","#478a96","#699296","#e03396","#e9b596","#eb3696","#dd5696","#a43796","#843196","#a08596","#426796","#e36e96","#c66296","#34b196","#f17896","#876f96","#913996","#6ed996","#d9d496","#527496","#d1c196","#b0cd96","#4ba396","#385496","#dabf96","#c4d296","#a8b296","#647396","#ab4b96","#c6d496","#428c96","#f26196","#7c6396","#d72896","#d16596","#768c96","#ec8e96","#33d596","#d62596","#729596","#43dc96","#42c696","#63af96","#e1b096","#b5c096","#4b3596","#d6a096","#ef2b96","#c0a496","#686596","#a86196","#853196","#343196","#3f2896","#4bdc96","#94b096","#51e596","#f3d296","#e44a96","#a0c496","#612196","#d74996","#79b296","#e5b296","#82d696","#d64c96","#736e96","#ce9596","#b6be96","#cd2496","#824596","#6ba396","#f68f96","#cb7896","#788996","#706a96","#b12c96","#4fbe96","#9db096","#8eaa96","#c69096","#7dd796","#5c7296","#b8ab96","#a38b96","#9e5596","#cf6e96","#cad596","#9b2696","#5ca996","#816796","#653c96","#c2d796","#663d96","#694496","#d5b296","#b57296","#9c4e96","#87ba96","#db5e96","#f89096","#c29896","#822996","#f9bb96","#949196","#659296","#cebc96","#812496","#e34d96","#dbdd96","#da5396","#bc6496","#d7df96","#486096","#c7d696","#66e096","#3d5e96","#8c2f96","#de5d96","#5d9896","#ab2996","#4ebd96","#694f96","#c3ac96","#6c1e96","#b12d96","#f34d96","#f1ce96","#a7ad96","#685996","#9f2c96","#802f96","#a8cd96","#783796","#935796","#dcc096","#986396","#6cd396","#3eba96","#aa3e96","#a6c596","#583796","#d3b996","#879496","#ebdf96","#58ba96","#f03b96","#b7d796","#ccae96","#d7b096","#ed4096","#3c6e96","#873396","#94d996","#982396","#e67596","#865b96","#564996","#457b96","#e2db96","#638a96","#9a8296","#37ba96","#86aa96","#548596","#a7af96","#623396","#eacd96","#4f4c96","#79bf96","#849d96","#8c2696","#cad596","#ba9b96","#988496","#505f96","#b3d596","#f7b296","#845a96","#9dd796","#bcd096","#3c4096","#63a196","#ebde96","#ad8f96","#5f7696","#3a6296","#839896","#ba8996","#f5b096","#849696","#4db796","#42b596","#e4a796","#ded796","#b79296","#b75996","#4fe096","#6da496","#a42596","#e2c396","#c1af96","#959196","#4ab096","#5c8f96","#722d96","#8f2096","#80b796","#916796","#70b896","#877b96","#dc3496","#864296","#77bb96","#e55a96","#c07996","#79b496","#684c96","#458496","#3fcc96","#568196","#d6e096","#343796","#883696","#6f2696","#55c496","#78aa96","#6c2e96","#a6dd96","#e99496","#b6cb96","#e4b596","#9f9496","#ba7896","#ca2696","#7f3696","#f19e96","#7e7d96","#ce4996","#686296","#bf3e96","#ea6f96","#63c496","#88a596","#db8096","#96da96","#932b96","#41a396","#f4d096","#90be96","#56a396","#5f7196","#48b296","#6f9796","#6d5296","#f02696","#a9ca96","#8a2e96","#6bb496","#a86796","#da8a96","#397996","#755c96","#df6696","#394b96","#457196","#ee2e96","#998b96","#c95096","#453696","#855d96","#687496","#cba696","#427196","#46a196","#51e096","#3bae96","#74d896","#806196","#e6e496","#cd3596","#8fb796","#bea096","#677096","#be2b96","#d82896","#9e9196","#7bbc96","#81cb96","#c44e96","#8c7096","#933e96","#bcbd96","#d9e296","#eddf96","#ab2e96","#5adb96","#e55896","#9f6e96","#53d896","#465896","#be4c96","#d97b96","#86b096","#954296","#616996","#5c5896","#885296","#6c6d96","#366c96","#4a5f96","#988096","#c66596","#53c296","#efc196","#d07496","#4b2f96","#a75c96","#6c3396","#56ae96","#b9de96","#e0b696","#587096","#9d8e96","#af2396","#754e96","#e1c996","#e77296","#d69796","#7a3d96","#8cb696","#b09396","#7a6c96","#958196","#6bb696","#7a1f96","#ad7396","#b9c696","#599996","#576e96","#df5696","#3c3196","#b8d096","#bd7a96","#cf5596","#b87b96","#d88696","#817296","#6e4196","#d13e96","#674e96","#37a096","#874c96","#9e7c96","#485696","#d57596","#672c96","#393d96","#73bf96","#dc9b96","#d8db96","#d03296","#c95396","#735e96","#995896","#462a96","#b8a996","#6c6896","#a96396","#f2b196","#b0e496","#e7e196","#e7ae96","#417096","#616896","#52ab96","#44d696","#dd7896","#d7bf96","#71ac96","#d17496","#944a96","#a2c896","#779d96","#ecdc96","#ef2496","#af8896","#a5b296","#d34996","#b19096","#7bde96","#337396","#3ccc96","#e22a96","#f47896","#d17396","#759696","#9bc096","#db7296","#8a5c96","#5bb096","#499796","#502c96","#3ea496","#c2ad96","#8fd796","#c8ab96","#90e096","#996e96","#8fe596","#341e96","#7f9396","#564896","#c18196","#707c96","#8fa096","#b15396","#b6c696","#7c3696","#985a96","#4d2196","#8d6d96","#462396","#878696","#bc9a96","#c25496","#6e5996","#438f96","#682d96","#8bb896","#e7df96","#69d496","#c7c296","#c78996","#4e8696","#9e7396","#8ad296","#d4cb96","#439d96","#434996","#476d96","#739d96","#457c96","#d46396","#643196","#ec4796","#893196","#4fb596","#d34896","#d0b096","#434096","#bc4696","#a08b96","#70bf96","#f88196","#e3ce96","#a63496","#d25396","#6dd496","#518c96","#575f96","#b9a496","#be3a96","#9d3396","#812196","#595796","#bc3d96","#e46f96","#d3c196","#963496","#887e96","#a34196","#a6b496","#ad9896","#5e5f96","#678596","#7a3896","#657e96","#45a296","#acc896","#d14b96","#dbb596","#af2096","#55d296","#3f5b96","#c12c96","#f8d596","#bb7c96","#f49796","#ed6d96","#826996","#883d96","#329196","#546f96","#97cd96","#357896","#839a96","#834196","#48d396","#48ce96","#7bbe96","#9f6b96","#a61f96","#7f9296","#e69f96","#7d5196","#cd2096","#36e096","#3dc296","#95de96","#74cf96","#f95b96","#8c7896","#bc3796","#683496","#ddd296","#c24396","#ba2096","#9b3e96","#436196","#cf4396","#473196","#597396","#3d3596","#8db896","#b3cd96","#bf9a96","#5c8496","#979796","#c26f96","#a6e096","#bca496","#af7b96","#7c2e96","#c2a096","#b2b796","#899b96","#8e3296","#685496","#bac396","#38cc96","#546b96","#ba8e96","#d95896","#709596","#3ce096","#e54d96","#c48d96","#f44d96","#ae8f96","#419e96","#cc2496","#bac396","#f0e396","#a39e96","#b18096","#807b96","#f87796","#a86296","#36b396","#9ca696","#f39f96","#8e3096","#66b196","#76d096","#92ad96","#b07f96","#b96396","#34c696","#4baa96","#9c4196","#c68c96","#f56d96","#9e8996","#498396","#40d296","#763296","#abc796","#5c3296","#387296","#715096","#eeba96","#405396","#e86096","#e18a96","#a8a096","#f32296","#754396","#341f96","#3c8e96","#cf4096","#e02496","#9e9d96","#7e3a96","#6b9a96","#7e5096","#3b5b96","#b73996","#357796","#502996","#e22996","#d97496","#898296","#7a1f96","#85c796","#9cd496","#955196","#6bc096","#98b596","#8b7896","#967796","#71ab96","#34b896","#d2ab96","#37e396","#e4ce96","#d99c96","#ea7196","#c6e096","#917996","#983a96","#da3696","#db9a96","#f94496","#c16c96","#7b6296","#d23096","#a17896","#489e96","#d04b96","#df7996","#b4a196","#acda96","#8da196","#d5df96","#d3ad96","#5c9296","#84cb96","#e47696","#b67896","#c68f96","#df3896","#a7b996","#576696","#cde096","#64e496","#da6b96","#c94e96","#ac4496","#be7296","#ba6496","#a46c96","#dddc96","#375796","#47db96","#bfb096","#4db696","#356296","#4fa896","#4a5d96","#b4ac96","#71e396","#3a5796","#7eaf96","#829a96","#39a896","#8f6b96","#e29396","#3bd196","#a5c396","#808796","#e4ad96","#e55296","#d1c296","#535296","#dfc396","#e75696","#c12396","#ca5696","#7e6c96","#788296","#d79296","#cfa796","#36ac96","#678496","#a5a896","#422596","#f44396","#947c96","#804f96","#b05896","#a09496","#8a3b96","#d6e496","#d44996","#d83a96","#363596","#892296","#bc4a96","#ac6196","#c95196","#522796","#465796","#4a9e96","#c24696","#a9bd96","#9c4096","#563f96","#982c96","#3e3196","#da6796","#8ea196","#72c296","#653996","#9c6e96","#692296","#a4cf96","#65b096","#981f96","#6f5496","#edad96","#8b9896","#aaa296","#c85096","#ea4496","#ce9296","#d04a96","#bc3896","#873f96","#886396","#99c396","#60e596","#d3cf96","#80d596","#535096","#699c96","#9d4996","#6d6596","#366696","#e19a96","#e89996","#6ad996","#877196","#81df96","#3bb596","#7d2c96","#41ab96","#559496","#dd2596","#8d7596","#6ee296","#812c96","#c68a96","#48bc96","#db4696","#b77f96","#b09e96","#768e96","#ca3a96","#a83a96","#619096","#bfa496","#dd2296","#7bc196","#cc4696","#45cf96","#4e6e96","#d03c96","#4ca396","#77d296","#436496","#ab4096","#4cb696","#9b6596","#383896","#95d196","#7e8e96","#587a96","#b7d896","#e1ad96","#707596","#ebdd96","#da8e96","#a87b96","#5ea296","#ba2c96","#a85d96","#766e96","#6b7996","#c18096","#b77796","#589196","#856396","#607996","#a49096","#c35296","#c73a96","#70d596","#464796","#8f6196","#e62b96","#bd3a96","#d43d96","#904496","#e97096","#583896","#599796","#da7196","#f5e096","#d15296","#c0b796","#5b3b96","#a7a996","#f5d796","#d1b496","#53a396","#566796","#f07196","#d24896","#e39496","#654196","#e02b96","#9ac396","#e99096","#52db96","#a96e96","#822896","#855d96","#e9c696","#426996","#ef8196","#c93296","#ce9e96","#384096","#4fbc96","#572396","#be4896","#dae496","#32ab96","#827796","#988196","#835996","#bbd896","#e02796","#869196","#823096","#ccae96","#ae2696","#988396","#7ca996","#e77196","#914296","#36d396","#da1f96","#84b096","#896396","#344096","#f96f96","#8baf96","#5bc496","#f73b96","#5c9796","#965796","#c77696","#cfc196","#f17c96","#925496","#536f96","#b6c796","#ea7596","#3f3c96","#b9dc96","#4dbe96","#785f96","#4ea596","#9d2196","#393596","#a5c096","#329e96","#de9296","#a86a96","#7ac496","#ba4a96","#a57296","#4b8996","#bd3c96","#5c5196","#f68396","#583796","#792a96","#6c2e96","#468e96","#d94196","#96dd96","#7a3b96","#6e2d96","#4c9a96","#cdd896","#92a296","#80b696","#efbb96","#3eb496","#be6796","#cd9296","#494096","#af6296","#74b496","#f0a196","#5bcf96","#35d796","#a19596","#de4d96","#743f96","#c0e096","#dc9896","#52d996","#6ac296","#e6a296","#e5ba96","#539396","#d1c196","#39b796","#e77496","#ce8f96","#7c3f96","#9de396","#be3c96","#a6ad96","#963296","#726496","#7fb796","#e97996","#f58d96","#c96396","#412496","#f59796","#499b96","#c86496","#815e96","#967496","#723296","#69ad96","#c13096","#484a96","#384696","#a7a796","#dcc896","#449196","#dbd496","#9fc696","#f4d796","#c93596","#7cad96","#d17096","#f1bd96","#54d696","#9f3e96","#8d8c96","#d66296","#357a96","#cd2296","#b4b596","#de4d96","#ac2096","#6fc396","#968e96","#df8b96","#b75a96","#9a2796","#4dd796","#5db596","#5bb796","#413596","#4fdf96","#a54396","#d14696","#779b96","#e1d996","#4dce96","#34b596","#d2bc96","#79ca96","#e97596","#f1c796","#eb2f96","#8c4e96","#90c996","#b53c96","#50e596","#ae2e96","#4e9a96","#a41e96","#4faf96","#a7d896","#dcc696","#3a9296","#6ad496","#bf5f96","#c03896","#f43396","#616496","#e84a96","#cf7396","#b2e196","#ac7996","#60b396","#38b896","#ba2a96","#ce9696","#5c9c96","#79c996","#a7b496","#9cb196","#a63896","#70e296","#6f9e96","#bf7e96","#9a8f96","#eab296","#c1b296","#8dd096","#427896","#785896","#3b6d96","#8b4696","#49e296","#983196","#ec7596","#e36b96","#3d8096","#ceaf96","#b6d096","#487096","#e59d96","#463096","#325b96","#cdcf96","#4f4d96","#c9a596","#b88796","#725396","#ac9d96","#455896","#97b396","#ab3b96","#b7ca96","#e47c96","#84c896","#693596","#cfa196","#e07796","#35d196","#f88296","#c21e96","#35b996","#8b1f96","#d43396","#9f8996","#4f9496","#e46a96","#95ae96","#55db96","#a14796","#a97b96","#5dcd96","#c6ac96","#4c5396","#80e196","#572196","#cd8a96","#c08896","#906596","#c47196","#bd7396","#9f3f96","#839796","#f08696","#f9df96","#5ce396","#7f2e96","#9bb996","#5d7096","#eeb896","#adc996","#ebc996","#f6b296","#689e96","#709696","#81cb96","#928296","#637296","#f1e096","#4f6496","#32a996","#a73c96","#94a696","#7f8296","#734796","#62be96","#4f6496","#992896","#a45896","#a55b96","#d62e96","#b9d596","#ae4696","#443f96","#b52696","#3b6a96","#6fc096","#d6df96","#c34796","#666f96","#bb2996","#89a796","#cd2a96","#485296","#b0ba96","#559796","#459096","#64ce96","#3aa596","#cfaf96","#eb9296","#53cc96","#5ac396","#f1ad96","#923a96","#74aa96","#c27696","#366996","#394696","#995d96","#d66d96","#be6396","#96d496","#a9b696","#658296","#bbbf96","#7b5e96","#3d9896","#f18f96","#619a96","#33af96","#9a2b96","#32ca96","#e15896","#617d96","#ecdc96","#d28a96","#906096","#8c1e96","#752296","#ef4296","#c7b596","#c8b996","#5c6d96","#a4e296","#977996","#47ae96","#9a2596","#bbcd96","#e3cf96","#467596","#c15596","#e76b96","#6fd096","#8a5f96","#cee196","#e46f96","#d39796","#5ac896","#f0d496","#a8b996","#a39a96","#cc7796","#9f5b96","#ec3296","#c4df96","#973e96","#9e2d96","#a22e96","#42e396","#b48c96","#b35c96","#7b4596","#9cdb96","#7bae96","#f8c796","#66d896","#6b9396","#65c096","#aa9996","#c3d596","#5f4896","#505396","#efcd96","#d12c96","#f99396","#3ed396","#9c5396","#424096","#a14c96","#927796","#ba4496","#af3a96","#57ca96","#d22696","#afb796","#5d2396","#a4b496","#63e596","#49e296","#f84b96","#783096","#c88f96","#e76596","#724d96","#7b2f96","#3f4296","#ba7196","#3d4e96","#67c496","#ea6996","#e4d496","#be2796","#7aa896","#c33b96","#dbbe96","#b6ca96","#72ac96","#45db96","#a0a596","#82b996","#a54996","#b52796","#762796","#b94696","#e52a96","#64e596","#ca2296","#f04f96","#c4a496","#bfaf96","#466796","#c24996","#e3b496","#98d796","#96aa96","#57bd96","#567f96","#a4c796","#9ec396","#7f4a96","#e7c996","#bab496","#786d96","#da4196","#e67596","#b5a496","#d03f96","#68d696","#784996","#e25396","#7be096","#397a96","#95aa96","#9bad96","#a57c96","#493596","#7a2396","#502f96","#af7996","#d59796","#a5bf96","#a37996","#f59596","#7c4896","#857696","#afbb96","#438596","#873196","#a4c996","#e78496","#5b7296","#8b2096","#f97696","#762c96","#a18e96","#e75396","#bee396","#692696","#58d196","#784496","#752c96","#341f96","#f32996","#469496","#6fa496","#6aa996","#ccd296","#784196","#c48096","#a1b296","#e6a196","#e03596","#34a496","#9d3f96","#6fd996","#dc3296","#8dd896","#58b996","#34d996","#c86096","#599d96","#6baf96","#de8096","#816896","#426896","#cd3096","#ea4696","#b19c96","#8d6196","#e19f96","#c45896","#dc4696","#78a796","#b77196","#386396","#61a996","#532896","#d44396","#6e3896","#ea7c96","#823a96","#872d96","#573096","#d17096","#b09d96","#ef2196","#ebc396","#52b996","#bb9e96","#6fc496","#95c296","#50bc96","#c9da96","#c29e96","#b43a96","#665596","#99a496","#c7cf96","#378196","#3a2d96","#e4c296","#52b696","#a39c96","#959a96","#e54196","#d53796","#4b7896","#b22396","#5d8996","#ac7996","#4ecd96","#cd2d96","#767896","#543996","#e58496","#60c596","#3ba096","#aabd96","#394d96","#ca6696","#337296","#b84b96","#e07396","#f57796","#4c3596","#a4df96","#8d7196","#422c96","#955296","#3b2796","#52b296","#5ab896","#a56d96","#755396","#658d96","#919b96","#708896","#5d2f96","#ab7996","#48be96","#b6d296","#3bd496","#7db596","#e26696","#775b96","#d1cb96","#ac2096","#963596","#4b6096","#a28896","#b95996","#51de96","#cc5a96","#ac7b96","#97e596","#ca7d96","#a1b396","#5ce296","#4b6196","#d0aa96","#f54396","#954196","#5bc496","#f62196","#505696","#ae8796","#52c596","#d5a696","#cba696","#a92296","#c9db96","#cac896","#5c2c96","#397496","#ac3296","#a3d096","#913d96","#aa3b96","#bf2596","#935d96","#ee2e96","#b37e96","#a22d96","#76b896","#df5c96","#65a796","#718396","#e9b296","#9a5996","#8bcb96","#3ba196","#65ce96","#583b96","#6ba596","#afbc96","#a0df96","#3e7a96","#829896","#bd3396","#468a96","#335696","#3e7196","#6d5596","#c26196","#41da96","#a53b96","#362396","#95de96","#e64696","#d18a96","#ba4b96","#cdac96","#b9c296","#d89696","#413896","#5cdd96","#98a496","#339a96","#b37a96","#3d7296","#e82996","#826696","#78d996","#484c96","#87dd96","#9bb896","#35e396","#61c796","#ec9196","#cea496","#f1c596","#d85596","#f7b396","#f86896","#7bd596","#debd96","#448796","#88d196","#41c296","#b9c996","#da4c96","#efcd96","#df9c96","#4de596","#384396","#ec7f96","#3bc896","#cda096","#614196","#582c96","#a54496","#4e2196","#9a7c96","#ba9896","#d82996","#368896","#e63796","#b52e96","#612196","#6d5496","#714896","#bd5f96","#4ece96","#755496","#684e96","#7a5996","#503e96","#d48396","#879796","#8b8e96","#6cb096","#f79a96","#45d596","#4f3096","#575a96","#b3a896","#5d5796","#6d5e96","#f31f96","#3c2e96","#3e7896","#3b3d96","#36d396","#f92c96","#e22796","#9ccf96","#a66b96","#b12196","#514896","#d46596","#5e4896","#b95396","#6c4396","#486a96","#bcdc96","#3e3096","#6fd596","#9cbf96","#a55c96","#8ddf96","#cfc796","#a8bd96","#604396","#bb6396","#444e96","#cd2896","#b51e96","#afb396","#8f5e96","#deb196","#485f96","#7e5a96","#e19b96","#709a96","#876a96","#a58f96","#4a3a96","#c22196","#f3d696","#51df96","#e84796","#a47d96","#b1b796","#326996","#c0b196","#8e7b96","#371e96","#a1b896","#374196","#e28996","#335e96","#adbb96","#9b4f96","#f94b96","#34a596","#e05c96","#c2c496","#8e7b96","#dd8b96","#c39796","#7e2196","#b54296","#7bdd96","#55a296","#66cd96","#dab596","#c06d96","#eba896","#718196","#af8796","#eb3596","#f5dc96","#c69f96","#ccbd96","#3e4b96","#654196","#60d296","#b8a996","#ae3f96","#326296","#7fb396","#b9ca96","#378f96","#657696","#f6bc96","#a92296","#c09696","#a77a96","#73cb96","#ae7f96","#8d3096","#f82696","#f79996","#42bd96","#de9c96","#628996","#eedb96","#b97996","#ed3096","#897696","#4c2e96","#986b96","#944496","#d08096","#65d796","#67b196","#96b796","#d84d96","#33aa96","#f16596","#c15996","#394096","#da5b96","#aabb96","#e78996","#5a2b96","#88b996","#9f5896","#8d7896","#5c7f96","#458296","#aa5896","#e44796","#ed2a96","#3cdb96","#3b4096","#ddb196","#85b896","#458396","#695a96","#a25296","#76e396","#ac4e96","#f84196","#7a4496","#89bb96","#786e96","#9bcf96","#dc3596","#3d5896","#cc8496","#97c296","#43d496","#e9c796","#e87696","#9e4396","#e1bb96","#eb5f96","#e59696","#e82d96","#9c7e96","#544d96","#6eb396","#53a296","#813596","#909296","#aa2496","#ccdb96","#d77096","#de8196","#e03096","#68d796","#b75b96","#77b296","#678d96","#852196","#5d5b96","#b79a96","#e1e096","#975896","#799e96","#77e496","#327a96","#35b896","#aeb396","#4e5796","#ea9296","#3de396","#bfba96","#b28096","#c1b596","#5d9396","#334196","#9e9496","#b5c296","#499196","#7a8196","#e76596","#e09d96","#656796","#a79c96","#35c596","#369e96","#a44c96","#684a96","#512796","#8d9496","#a7d896","#dca596","#ca5896","#484e96","#d3d096","#a32596","#5b4396","#c26996","#f79c96","#943596","#d07996","#aa4b96","#a0c396","#ace496","#34ad96","#bc5a96","#694b96","#97bb96","#5ec696","#7e3996","#6ab896","#618196","#c6e596","#815f96","#7da296","#aac896","#bcdc96","#bf4896","#dfd396","#759296","#5f7596","#dd6496","#576f96","#508596","#9e7096","#f2bb96","#6d3396","#759796","#ba9796","#5abe96","#cc4396","#695096","#907296","#b23c96","#366d96","#3d7e96","#bd9996","#c5b896","#9b8b96","#7c3196","#697c96","#3aa696","#b0c796","#86b196","#c06f96","#98db96","#796096","#f9c096","#633b96","#af5b96","#4daf96","#6f6896","#983796","#719b96","#475696","#db4d96","#c66296","#bbd496","#f14996","#ab9096","#807096","#ba2496","#ecd196","#c76996","#77a196","#cfa696","#587c96","#f49696","#536196","#947996","#327d96","#f82696","#934996","#37c996","#df2296","#7c2696","#8b9296","#67e196","#6e4096","#b2dd96","#8e8296","#37e496","#404f96","#c3cd96","#d99896","#682396","#a7ac96","#c13e96","#9c1f96","#d6ae96","#385396","#51bb96","#b79796","#d35196","#863e96","#e7ca96","#b74296","#686596","#707496","#d63c96","#d5a396","#e1bf96","#afd196","#dea496","#79d196","#e35c96","#e74996","#535396","#33ad96","#b89796","#b56596","#b69896","#88b396","#ea7b96","#6f4b96","#cd4996","#9f6a96","#bc8f96","#bfd396","#cbae96","#6d6596","#41a896","#8f5996","#7fa396","#d19796","#ec6796","#408996","#602296","#44cc96","#cfa896","#3a4f96","#978996","#542196","#799a96","#90a596","#8a9c96","#b4aa96","#e64c96","#d57996","#5c9496","#9f5e96","#8dbc96","#38b696","#8f3f96","#527796","#db6f96","#bf4296","#f96196","#c75696","#404c96","#827d96","#bc4996","#42aa96","#4f6e96","#b6ba96","#dfb396","#d39896","#f48696","#716396","#5ecc96","#54b496","#cea996","#447d96","#d0c496","#49a396","#f7c596","#796896","#ec4696","#ef4c96","#f32d96","#4c3c96","#6e7496","#91dc96","#f37e96","#f77596","#a7b296","#949096","#f48496","#b12196","#48bd96","#7b2696","#5c9a96","#4c3896","#cd7b96","#eee196","#b37696","#47e096","#e3c396","#be8796","#722396","#89e596","#b94c96","#8dab96","#355a96","#456596","#577496","#6b2096","#472396","#dc6d96","#649e96","#df5a96","#c9b296","#cbcb96","#c03996","#bb6c96","#7c3196","#891f96","#ebd796","#822596","#347896","#e1a196","#deac96","#5c5f96","#517196","#76d996","#c88b96","#e5a096","#f29796","#d73096","#d2bb96","#d27e96","#91cb96","#a03096","#e35296","#683696","#4da196","#3ce596","#a05996","#a6c996","#599396","#3fca96","#423f96","#6faf96","#507e96","#dc3696","#712996","#ab9096","#739f96","#dd8c96","#bc2496","#abd896","#e5e596","#3b9e96","#d2c396","#405796","#41e396","#4c4d96","#8ab896","#7b3a96","#5d3e96","#f54396","#47e496","#c43096","#776496","#a3d896","#f1d696","#74a896","#3dcb96","#aad796","#ada296","#ed6996","#e06096","#8dd796","#d0d196","#aa6496","#4c5e96","#c14496","#ceb896","#913096","#522d96","#bb3796","#9c4396","#cdda96","#57cf96","#e7d596","#6f2896","#7a5496","#c6ac96","#538996","#d98096","#3c5296","#8adf96","#5dab96","#5a2e96","#c45796","#50c296","#cc9d96","#6e7e96","#7ce196","#c22796","#872396","#702896","#a99496","#5ac996","#b7d496","#b14896","#9dbd96","#a08396","#33dc96","#333d96","#9d5f96","#de5d96","#7cb996","#5b5396","#ee9096","#ee3f96","#c04896","#a17096","#983d96","#56b896","#48c996","#d6db96","#8baf96","#f7be96","#488d96","#a44396","#766b96","#559796","#acd296","#736396","#573196","#723e96","#a71e96","#c49496","#a8d696","#78d996","#ce2396","#86b096","#d34896","#94b996","#ed1e96","#7ba596","#3ede96","#3f4b96","#c85196","#3eb996","#a96f96","#a29c96","#e63796","#eda596","#5b8096","#43d896","#c3dd96","#8b5d96","#613696","#566e96","#a3d596","#c09396","#6d7d96","#3a5c96","#b22c96","#433696","#497496","#f0c996","#db3896","#bcd696","#f12d96","#c37c96","#7bbf96","#924d96","#e72096","#d72a96","#ab7d96","#74cf96","#597e96","#6f2196","#a73c96","#e74b96","#673896","#5cd796","#9ad396","#e25296","#c8e396","#c6a496","#ea6f96","#a03096","#bc9196","#387696","#e4b396","#64c596","#9a3b96","#576096","#bd9e96","#b55196","#db5096","#91e196","#ab6196","#f48696","#4b2596","#d2c796","#efe396","#a28896","#3b7a96","#d98a96","#478396","#713896","#8f5896","#497896","#c44396","#894296","#614596","#511e96","#a26396","#943a96","#ae4096","#3c7496","#de2896","#8f6196","#bebf96","#c84596","#db4996","#49bd96","#63ab96","#32a896","#e83696","#c7bd96","#9f5096","#d3b096","#9abe96","#903a96","#95b296","#48c596","#98b096","#9c2a96","#e5aa96","#e13596","#839296","#382196","#80a496","#99a296","#a12e96","#d74d96","#e09e96","#393596","#a83e96","#9fc696","#dcab96","#707e96","#685396","#f56a96","#9bb896","#cdc696","#d87796","#a99f96","#49a096","#8fc596","#752396","#5e7b96","#41a596","#b24596","#3ccf96","#e95396","#f8bd96","#dc8296","#7f4f96","#8f7796","#d57096","#899896","#337c96","#908096","#7ba896","#f3b596","#c88296","#62c496","#b09096","#5bb596","#a49696","#d9cf96","#a67a96","#474796","#55b296","#e12096","#8b4696","#cb4c96","#4d9796","#e75296","#597296","#4e6f96","#d8bf96","#e1d096","#414c96","#bfcd96","#7fac96","#4ab596","#cb8a96","#74c496","#ee5196","#7dd196","#b22596","#aa2796","#604096","#586296","#a04896","#af8b96","#736196","#389996","#935496","#856996","#56a896","#3b8b96","#3c4496","#b92696","#cb9096","#948096","#b57096","#576996","#c2a296","#d43196","#40e096","#e75096","#4a8096","#b26596","#e94796","#51ce96","#785c96","#ad5d96","#b44696","#406896","#86b496","#e8c396","#4b5196","#714f96","#889596","#58ad96","#f61e96","#3b4e96","#3eb396","#495396","#de4396","#e42a96","#b4ae96","#e6d796","#9ab796","#946e96","#e84396","#944a96","#44b096","#bf3496","#732d96","#b14396","#c33196","#bd9496","#f15496","#362196","#938b96","#ae4396","#e47696","#355f96","#3e9296","#ae3196","#dd8e96","#81e096","#f54e96","#583a96","#de3296","#a46796","#34a796","#4dbf96","#58de96","#b3db96","#6bc996","#40c896","#af9696","#a13496","#572a96","#35d596","#f0df96","#b89396","#437d96","#d9aa96","#499196","#cdbe96","#d5c296","#574996","#615296","#7f8696","#a7d996","#aac996","#587596","#5dc096","#683496","#32af96","#574896","#a59f96","#d4b396","#c13896","#9f2696","#6a4f96","#724196","#32dd96","#6c7896","#b65796","#736996","#54d596","#60b996","#736896","#ce3096","#c5a696","#769c96","#534e96","#4d2b96","#498496","#9d3996","#bda596","#36b496","#b84796","#b69d96","#599096","#dc4096","#537296","#8aa296","#816e96","#41ca96","#422b96","#71d096","#788696","#b5c296","#4a9996","#4abb96","#379e96","#b47f96","#95ad96","#b42e96","#4fb596","#9ebe96","#b65796","#e3de96","#c76d96","#82af96","#cfc696","#f28896","#456196","#46a996","#c2e196","#a1c096","#83d396","#f16596","#3cc896","#ae4d96","#417a96","#f06796","#b45296","#644b96","#447196","#a4ca96","#ecce96","#59d396","#bc2a96","#87b496","#c4db96","#452c96","#e08e96","#f86696","#cc8d96","#c74496","#386896","#d47d96","#853296","#c1bd96","#833a96","#a37396","#d0c696","#eb6d96","#816896","#609d96","#dfa896","#b45c96","#468396","#9c5b96","#70e296","#6f5896","#916696","#33d896","#574a96","#d85196","#7bba96","#3bc996","#5e6696","#bb7c96","#ccbc96","#cdb596","#ca9496","#bbc896","#555396","#e68a96","#74a496","#e5e596","#ea7b96","#948496","#357296","#b3c696","#cc8596","#67b196","#3ebf96","#4b6696","#6da896","#c03796","#eb1f96","#856a96","#6e7796","#ec5596","#67aa96","#5f8596","#b78296","#7b7396","#ce7196","#a94a96","#4bdf96","#ca2296","#ef8996","#855d96","#a76396","#91e296","#4f4396","#de5796","#d77896","#9f6796","#f44096","#422e96","#3ce396","#bac796","#936296","#59e296","#bab496","#4a7296","#90b696","#3bc596","#4cc396","#e0ae96","#c52496","#a46396","#8e9496","#f67396","#415996","#6d4c96","#647196","#a73896","#c72196","#ba7196","#b6c196","#3bcf96","#587c96","#6d8e96","#4d5496","#80a096","#82dc96","#b26996","#ce4496","#77c396","#5a2296","#f4a296","#8b3996","#399e96","#f09a96","#8f2e96","#3e3a96","#547d96","#b16f96","#5b7c96","#644896","#d13c96","#6fb696","#f2cd96","#ec3296","#df5296","#e08e96","#c25c96","#b82d96","#eb7796","#b85a96","#ce4796","#bb3896","#6b2b96","#a6da96","#c47896","#707796","#572396","#76b196","#4d9896","#57c196","#809896","#3b4096","#65bf96","#dc7096","#563096","#62d296","#7a4996","#e28596","#6d7e96","#522796","#a5c096","#edd896","#627096","#7b5396","#352196","#d48d96","#94cc96","#f44d96","#48d796","#64d996","#e07496","#7d5896","#98d796","#37c596","#55d996","#aa4c96","#9e9196","#366e96","#6e8b96","#d32996","#3b8e96","#c0ac96","#6bbf96","#998196","#498a96","#df3096","#bc7996","#4d2596","#a8a296","#e18c96","#e1a296","#b5ab96","#cf9b96","#498496","#b82296","#43ae96","#33c496","#dd4996","#a3a196","#f16696","#e36196","#c8ba96","#7c3896","#f56a96","#7f6d96","#c1c096","#66b596","#efd996","#be8696","#7f8296","#a2de96","#e8bb96","#899296","#bbc196","#8e7b96","#5bb396","#878796","#da9096","#db8696","#8f5e96","#e17f96","#e28296","#518296","#d16296","#64cc96","#67cf96","#58cd96","#9a7696","#498796","#f8df96","#767d96","#537396","#9caa96","#e0a496","#425696","#d78296","#628f96","#60d296","#c38396","#963396","#f03f96","#a2ca96","#efcd96","#443496","#a8b996","#b45496","#ddae96","#588196","#edcf96","#9c8896","#78d096","#a99096","#f17e96","#f98d96","#646596","#64c196","#d57296","#c91f96","#ec9396","#3c2196","#68d096","#7a2396","#3eb196","#986996","#d25896","#ba6b96","#58af96","#a91f96","#e9be96","#8ec696","#454d96","#894896","#503b96","#d94096","#7e6796","#a29996","#a1ba96","#7b3f96","#bed296","#592196","#a58296","#6fa996","#b2ad96","#451f96","#cf4e96","#a55a96","#6dae96","#a93996","#ca2596","#558396","#561f96","#40c196","#654696","#3b8796","#782796","#bd7f96","#c7d596","#458196","#4a7396","#7edf96","#592d96","#c3b696","#5ed996","#765896","#3c9796","#8c5796","#d64196","#935f96","#652196","#4b8296","#7f2b96","#44d496","#6b5196","#805696","#45e496","#b8cd96","#907796","#a8d596","#bba196","#a19296","#bae196","#358896","#edaa96","#ac5696","#c36d96","#93ad96","#dc7296","#a72196","#df8396","#754e96","#488196","#cc9f96","#5c2d96","#ad7996","#796696","#f58296","#ae3196","#c59e96","#53d296","#63d796","#907896","#b97f96","#d03096","#7b2596","#a7d196","#7e6496","#e98796","#c6d796","#7cc996","#9ea296","#50a196","#76ac96","#b3c996","#e8af96","#c45796","#3f6896","#bfa696","#9f9c96","#a1cb96","#b2da96","#ea5196","#7ae496","#b2d196","#aea996","#517e96","#5d5596","#6a3196","#b19e96","#a48d96","#ada696","#608096","#ad6596","#dedf96","#54d996","#909796","#677a96","#865a96","#915496","#96c296","#e8bd96","#6d4796","#d85096","#8a9d96","#42c496","#3b8196","#eb4f96","#612496","#e58d96","#56ab96","#427696","#79bb96","#f77296","#a57496","#7cc096","#672996","#71d296","#8cc696","#63aa96","#674896","#ac4796","#d26996","#dfac96","#3b9296","#404296","#714a96","#612396","#9f9f96","#8a7d96","#b94a96","#669696","#547496","#661f96","#8b6096","#4b3096","#dfc196","#4ba196","#cba596","#9b6a96","#ef5c96","#728396","#5dbc96","#825a96","#e2b696","#78de96","#aa8796","#ccb696","#c3a996","#ef2096","#8b6796","#f25696","#b78b96","#f68096","#5a3c96","#8da596","#d74f96","#e0bd96","#cea096","#b7db96","#4d8996","#953096","#769c96","#b36c96","#959e96","#ce1e96","#af9796","#ee9a96","#4f6696","#89a596","#ef5596","#d32096","#9f3496","#3f5296","#a62196","#505096","#e72296","#bbaf96","#896496","#dcab96","#b23896","#aaa596","#a1c596","#bbc696","#649996","#9eb496","#a37e96","#9f4296","#6ea096","#6d4e96","#732096","#872196","#d64b96","#e53296","#7c6d96","#c19996","#773696","#524996","#c46a96","#4c4596","#c62496","#7d2b96","#c89296","#874896","#a45a96","#ddde96","#458396","#4f3196","#f1db96","#dbc596","#8fdf96","#4cd496","#7a3896","#ae3396","#601f96","#d2e596","#56b896","#544d96","#cc3796","#e67996","#e6c996","#9b4d96","#323096","#eb9f96","#e02996","#659596","#92c596","#6d5696","#e35e96","#72c296","#5fdc96","#9b2a96","#9b6396","#3a2896","#5f1e96","#dcb096","#c78596","#f7ad96","#4e3b96","#968f96","#d19d96","#8ecb96","#589a96","#d76b96","#82b096","#358d96","#c12896","#643796","#92d496","#f93496","#a3c896","#406096","#79be96","#af3196","#e0e396","#89d096","#81b996","#48a996","#7a9296","#526096","#b99f96","#aca996","#ec9596","#7d6996","#8bb496","#585a96","#d5d496","#cd9796","#bc2f96","#f86996","#9ce096","#843c96","#527996","#358b96","#60b296","#595e96","#7e7b96","#5b4b96","#e37296","#73c796","#74d496","#c68796","#c37d96","#f36696","#992196","#798696","#53a196","#b44f96","#8b5796","#d66a96","#3cdf96","#77c496","#737e96","#8b9c96","#e48696","#5a9e96","#aa6b96","#9bdb96","#4f7e96","#a72496","#c72196","#f4de96","#56a896","#c14b96","#736796","#3db696","#82ae96","#d87196","#554b96","#937496","#a18a96","#c72596","#cc7a96","#512d96","#f46196","#d62996","#c35096","#f82e96","#b69a96","#b3a496","#644496","#d4b696","#9f2196","#92bb96","#7d4b96","#4b6396","#504396","#aae396","#386396","#7be396","#c02296","#9ad096","#de6d96","#c0d896","#596a96","#c07596","#ba6896","#44b296","#823296","#4be296","#61dc96","#499f96","#812b96","#df7c96","#a82696","#a55496","#b88496","#36d896","#dd6496","#732996","#ea8796","#cd4396","#999a96","#b3a096","#f55f96","#5ab796","#8a4296","#f03296","#ad8496","#a9ca96","#bfb196","#b6a296","#e99c96","#c5ca96","#7f9d96","#50df96","#e25a96","#745d96","#663b96","#8c8f96","#568c96","#d1aa96","#432696","#36c596","#e73e96","#af2196","#b95996","#674c96","#54c496","#588696","#ed3296","#935196","#a2cf96","#dc9396","#7a3a96","#334296","#c5bb96","#ce5a96","#56c396","#8d3996","#bfcd96","#a98396","#4ea996","#798a96","#c9e496","#bf5596","#4fe196","#7eb596","#56d396","#cacb96","#683096","#663b96","#9e8796","#681f96","#c39096","#da6596","#84dc96","#f0e596","#c9ad96","#417996","#699096","#ec4196","#f67796","#41e596","#723c96","#dcbf96","#61de96","#b5ba96","#78e396","#81b296","#e08696","#ec3296","#ba5796","#da4996","#9ab696","#a47196","#5c3296","#479896","#49be96","#c28a96","#904796","#a72c96","#94d696","#bbda96","#ca5696","#63d596","#696b96","#ec5e96","#643e96","#ee4296","#eebb96","#cd5096","#a46a96","#cd8f96","#5bd096","#d3cd96","#f73f96","#5dc696","#f7a896","#bc9396","#7c4b96","#4ae396","#a5d996","#b79796","#6aa196","#4e7096","#ca7396","#bdd496","#69c196","#8f3e96","#623596","#5db096","#cad196","#b43a96","#4c7b96","#9a4c96","#58e496","#473196","#e93a96","#a47b96","#7dcc96","#3fda96","#448e96","#b77096","#a72c96","#8b2096","#b46d96","#86a896","#bfd396","#855996","#795696","#b2a496","#896296","#f5c896","#f1a796","#5a4196","#a78896","#43de96","#5bd096","#367d96","#ea6596","#bc9c96","#87ce96","#92a596","#d86496","#cbd796","#a25996","#717e96","#597a96","#e8bb96","#8a4a96","#5b4d96","#53dc96","#9f6996","#a2ac96","#5bd896","#4f5b96","#982396","#a53896","#bbd796","#67d896","#8ba996","#e22f96","#824796","#aae596","#dfa996","#e09196","#4ebb96","#a09596","#cdb496","#9ea496","#dd8796","#5a6296","#915196","#f68c96","#d92796","#cb3296","#aec096","#a08896","#8db796","#9aa296","#d67a96","#f09696","#748a96","#425796","#71cf96","#e79a96","#938196","#c66e96","#3a7e96","#b29a96","#34ce96","#727c96","#e21e96","#802096","#bf3696","#d32396","#9da796","#825d96","#446e96","#e37f96","#8c3796","#d1a696","#6ec296","#5db296","#a1b496","#b4e396","#cade96","#be7696","#523496","#c4cc96","#c18896","#ce6f96","#8fbc96","#447e96","#5f2b96","#40b096","#7e5a96","#9b9d96","#ed6f96","#b96496","#bac996","#4e8496","#332296","#943596","#ba2396","#579d96","#64aa96","#eca196","#6bb796","#e9d596","#c53f96","#836996","#ee7b96","#8d4796","#39e196","#f47396","#7a9c96","#43d396","#ccad96","#bfa796","#e45696","#352896","#32c396","#5bae96","#6ad296","#432096","#6d4596","#924f96","#908d96","#943c96","#8a3396","#3d2d96","#8f8496","#4b9396","#e1c596","#8ec696","#ec4f96","#5ea696","#f7e396","#552196","#336796","#f05596","#bccb96","#bcc396","#6f4696","#b65d96","#b28496","#84e296","#c36d96","#b1ac96","#7c2796","#a95b96","#ccca96","#934196","#e13096","#b39f96","#b4e296","#b89896","#378896","#eac096","#f8b596","#ae9596","#393296","#75b996","#df2896","#d83696","#5c8e96","#728896","#695c96","#807d96","#eb8c96","#52b496","#dfd496","#6f4596","#a1c596","#f6a196","#8f6b96","#acd996","#a44096","#c1ce96","#d95396","#d58c96","#b98f96","#69b596","#726796","#b44d96","#da6996","#ad7896","#d72896","#706d96","#768a96","#bad496","#986596","#ba2c96","#d59796","#a17b96","#da2496","#71a696","#467496","#7c2496","#383896","#798696","#a18896","#6c3496","#e85596","#f17396","#b7cf96","#af3b96","#c42b96","#8c3896","#c5bf96","#5b8896","#3dc696","#5fd196","#a75f96","#f48c96","#f45796","#b8ae96","#db9096","#618b96","#e3a896","#a25f96","#a63396","#73b796","#af9496","#ca8496","#93c996","#358a96","#32b596","#603796","#d02496","#64e396","#402896","#c06296","#cebe96","#46c996","#b27e96","#71aa96","#b2d996","#514896","#4caa96","#80b496","#93b796","#e74396","#cfcc96","#4b8896","#d33396","#787796","#d86396","#7a5696","#a16396","#e66496","#71a796","#9da796","#e15596","#a65496","#df7a96","#e27c96","#335596","#b0be96","#819996","#444a96","#d18b96","#428896","#e8d996","#e8e496","#dfa996","#6b3096","#798896","#447796","#4fb596","#49e596","#3dab96","#556e96","#bd5396","#ebd396","#4dd696","#a5e296","#ee8d96","#651e96","#95b796","#ac8f96","#bbd496","#4ea496","#4bde96","#615c96","#a6cb96","#d08796","#7ac196","#6e9796","#66b296","#3ed796","#95aa96","#649b96","#a7db96","#ba2896","#a02396","#c2c396","#418596","#9dd896","#a7b696","#966f96","#34d296","#c43a96","#f14896","#e77c96","#41c596","#94a696","#ed4d96","#7ad996","#a9b496","#335196","#583196","#5e7796","#aa6096","#3d5596","#f87096","#48a396","#bf3396","#86e496","#e87c96","#427396","#b1a996","#ccc096","#f78296","#852c96","#57a496","#c9bc96","#835f96","#6bcc96","#7dbf96","#b0ab96","#c79f96","#e89096","#e08f96","#e58396","#43d196","#a0dc96","#d12b96"],"radius":{"__ndarray__":"","dtype":"float64","shape":[4000]},"x":{"__ndarray__":"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","dtype":"float64","shape":[4000]},"y":{"__ndarray__":"","dtype":"float64","shape":[4000]}},"selected":null,"selection_policy":null},"id":"a0462fa0-54c6-45e4-93d9-dc9062ee83e8","type":"ColumnDataSource"},{"attributes":{"fill_alpha":{"value":0.6},"fill_color":{"field":"fill_color"},"line_color":{"value":null},"radius":{"field":"radius","units":"data"},"x":{"field":"x"},"y":{"field":"y"}},"id":"bd3f011d-912f-47b7-80d7-cbdc6ace2b42","type":"Circle"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"fa906e5b-7ff2-4a99-8503-334b7b17236a","type":"CustomJS"},{"attributes":{"callback":null},"id":"bbea7e9b-5206-4790-a72c-c4fe3c5aa931","type":"DataRange1d"},{"attributes":{"args":{"div":{"id":"b9e12854-fc48-45cf-9de8-e845f1f33b48","type":"Div"}},"code":"\\n        var attrs = [&#x27;x&#x27;, &#x27;y&#x27;, &#x27;sx&#x27;, &#x27;sy&#x27;]; var args = [];\\n        for (var i=0; i&lt;attrs.length; i++ ) {\\n            args.push(attrs[i] + &#x27;=&#x27; + Number(cb_obj[attrs[i]]).toFixed(2));\\n        }\\n        var line = \\"&lt;span style=&#x27;float:left;clear:left;font_size=0.5pt&#x27;&gt;&lt;b&gt;\\" + cb_obj.event_name + \\"&lt;/b&gt;(\\" + args.join(\\", \\") + \\")&lt;/span&gt;\\\\n\\";\\n        var text = div.text.concat(line);\\n        var lines = text.split(\\"\\\\n\\")\\n        if ( lines.length &gt; 35 ) { lines.shift(); }\\n        div.text = lines.join(\\"\\\\n\\");\\n    "},"id":"f149cca5-31cf-4057-ae4c-5617126ef909","type":"CustomJS"},{"attributes":{},"id":"d5ae5bda-957f-4407-8f07-5fc19d71f400","type":"LinearScale"}],"root_ids":["75c763a8-63e8-4c7d-b981-f903f5aeb96f"]},"title":"Bokeh Application","version":"0.12.15"}}';
                  var render_items = [{"docid":"1968a2ba-f6ba-499f-9f14-3009a92caa72","elementid":"6c87d6e0-60ec-40fe-ac57-1da1eb89f5bd","modelid":"75c763a8-63e8-4c7d-b981-f903f5aeb96f"}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing")
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/normalize/4.2.0/normalize.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/css/ion.rangeSlider.skinFlat.min.css");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.1.4/img/sprite-skin-flat.png");
          console.log("Bokeh: injecting CSS: https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          Bokeh.embed.inject_css("https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-0.12.15.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-0.12.15.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.15.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-widgets-0.12.15.min.css");
          console.log("Bokeh: injecting CSS: https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.15.min.css");
          Bokeh.embed.inject_css("https://cdn.bokeh.org/bokeh/release/bokeh-tables-0.12.15.min.css");
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.log("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(js_urls, function() {
          console.log("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();